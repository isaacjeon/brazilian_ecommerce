<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <CascadingFilters />
    <Heatmap />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='BrazilianE-Commerce_17547219521680' path='/workbooks' revision='1.4' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Measure Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Orders&quot;'>
        <calculation class='tableau' formula='&quot;Number of Orders&quot;' />
        <members>
          <member value='&quot;Number of Orders&quot;' />
          <member value='&quot;Total Sales&quot;' />
          <member value='&quot;Avg. Order Value&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='orders+' inline='true' name='federated.0cckfq11h3u2vr13412m603g6zra' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='orders' name='textscan.0sc6c4c12ejvio18yor571ld93oj'>
            <connection class='textscan' directory='/Users/isaacjeon/Documents/CU Boulder/Extra Projects/Brazilian E-Commerce' filename='orders.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.0sc6c4c12ejvio18yor571ld93oj' name='orders.csv' table='[orders#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='order_id' ordinal='0' />
              <column datatype='string' name='order_status' ordinal='1' />
              <column datatype='real' name='order_total' ordinal='2' />
              <column datatype='datetime' name='purchased_on' ordinal='3' />
              <column datatype='datetime' name='approved_at' ordinal='4' />
              <column datatype='datetime' name='shipping_limit_date' ordinal='5' />
              <column datatype='datetime' name='delivered_carrier_date' ordinal='6' />
              <column datatype='datetime' name='delivered_customer_date' ordinal='7' />
              <column datatype='datetime' name='estimated_delivery_date' ordinal='8' />
              <column datatype='string' name='customer_unique_id' ordinal='9' />
              <column datatype='integer' name='customer_zip_code_prefix' ordinal='10' />
              <column datatype='string' name='customer_city' ordinal='11' />
              <column datatype='string' name='customer_state' ordinal='12' />
              <column datatype='integer' name='review_score' ordinal='13' />
              <column datatype='integer' name='days_to_ship' ordinal='14' />
              <column datatype='integer' name='days_to_deliver' ordinal='15' />
              <column datatype='integer' name='carrier_delivery_delay_days' ordinal='16' />
              <column datatype='integer' name='customer_delivery_delay_days' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.0sc6c4c12ejvio18yor571ld93oj' name='items.csv' table='[items#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='order_id' ordinal='0' />
              <column datatype='string' name='product_id' ordinal='1' />
              <column datatype='string' name='product_category' ordinal='2' />
              <column datatype='datetime' name='purchased_on' ordinal='3' />
              <column datatype='datetime' name='shipping_limit_date' ordinal='4' />
              <column datatype='integer' name='qty' ordinal='5' />
              <column datatype='real' name='price_per_unit' ordinal='6' />
              <column datatype='real' name='freight_value_per_unit' ordinal='7' />
              <column datatype='real' name='total_price' ordinal='8' />
              <column datatype='integer' name='customer_zip_code_prefix' ordinal='9' />
              <column datatype='string' name='customer_city' ordinal='10' />
              <column datatype='string' name='customer_state' ordinal='11' />
              <column datatype='integer' name='seller_zip_code_prefix' ordinal='12' />
              <column datatype='string' name='seller_city' ordinal='13' />
              <column datatype='string' name='seller_state' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0sc6c4c12ejvio18yor571ld93oj' name='payments.csv' table='[payments#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='order_id' ordinal='0' />
              <column datatype='string' name='payment_type' ordinal='1' />
              <column datatype='real' name='payment_value' ordinal='2' />
              <column datatype='integer' name='num_installments' ordinal='3' />
              <column datatype='real' name='avg_installment_value' ordinal='4' />
              <column datatype='integer' name='customer_zip_code_prefix' ordinal='5' />
              <column datatype='string' name='customer_city' ordinal='6' />
              <column datatype='string' name='customer_state' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[approved_at]' value='[orders.csv].[approved_at]' />
          <map key='[avg_installment_value]' value='[payments.csv].[avg_installment_value]' />
          <map key='[carrier_delivery_delay_days]' value='[orders.csv].[carrier_delivery_delay_days]' />
          <map key='[customer_city (items.csv)]' value='[items.csv].[customer_city]' />
          <map key='[customer_city (payments.csv)]' value='[payments.csv].[customer_city]' />
          <map key='[customer_city]' value='[orders.csv].[customer_city]' />
          <map key='[customer_delivery_delay_days]' value='[orders.csv].[customer_delivery_delay_days]' />
          <map key='[customer_state (items.csv)]' value='[items.csv].[customer_state]' />
          <map key='[customer_state (payments.csv)]' value='[payments.csv].[customer_state]' />
          <map key='[customer_state]' value='[orders.csv].[customer_state]' />
          <map key='[customer_unique_id]' value='[orders.csv].[customer_unique_id]' />
          <map key='[customer_zip_code_prefix (items.csv)]' value='[items.csv].[customer_zip_code_prefix]' />
          <map key='[customer_zip_code_prefix (payments.csv)]' value='[payments.csv].[customer_zip_code_prefix]' />
          <map key='[customer_zip_code_prefix]' value='[orders.csv].[customer_zip_code_prefix]' />
          <map key='[days_to_deliver]' value='[orders.csv].[days_to_deliver]' />
          <map key='[days_to_ship]' value='[orders.csv].[days_to_ship]' />
          <map key='[delivered_carrier_date]' value='[orders.csv].[delivered_carrier_date]' />
          <map key='[delivered_customer_date]' value='[orders.csv].[delivered_customer_date]' />
          <map key='[estimated_delivery_date]' value='[orders.csv].[estimated_delivery_date]' />
          <map key='[freight_value_per_unit]' value='[items.csv].[freight_value_per_unit]' />
          <map key='[num_installments]' value='[payments.csv].[num_installments]' />
          <map key='[order_id (items.csv)]' value='[items.csv].[order_id]' />
          <map key='[order_id (payments.csv)]' value='[payments.csv].[order_id]' />
          <map key='[order_id]' value='[orders.csv].[order_id]' />
          <map key='[order_status]' value='[orders.csv].[order_status]' />
          <map key='[order_total]' value='[orders.csv].[order_total]' />
          <map key='[payment_type]' value='[payments.csv].[payment_type]' />
          <map key='[payment_value]' value='[payments.csv].[payment_value]' />
          <map key='[price_per_unit]' value='[items.csv].[price_per_unit]' />
          <map key='[product_category]' value='[items.csv].[product_category]' />
          <map key='[product_id]' value='[items.csv].[product_id]' />
          <map key='[purchased_on (items.csv)]' value='[items.csv].[purchased_on]' />
          <map key='[purchased_on]' value='[orders.csv].[purchased_on]' />
          <map key='[qty]' value='[items.csv].[qty]' />
          <map key='[review_score]' value='[orders.csv].[review_score]' />
          <map key='[seller_city]' value='[items.csv].[seller_city]' />
          <map key='[seller_state]' value='[items.csv].[seller_state]' />
          <map key='[seller_zip_code_prefix]' value='[items.csv].[seller_zip_code_prefix]' />
          <map key='[shipping_limit_date (items.csv)]' value='[items.csv].[shipping_limit_date]' />
          <map key='[shipping_limit_date]' value='[orders.csv].[shipping_limit_date]' />
          <map key='[total_price]' value='[items.csv].[total_price]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[items.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[payments.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_id]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_status]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_status</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[order_total]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_total</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>purchased_on</remote-name>
            <remote-type>135</remote-type>
            <local-name>[purchased_on]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>purchased_on</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>approved_at</remote-name>
            <remote-type>135</remote-type>
            <local-name>[approved_at]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>approved_at</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping_limit_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[shipping_limit_date]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>shipping_limit_date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delivered_carrier_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[delivered_carrier_date]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>delivered_carrier_date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delivered_customer_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[delivered_customer_date]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>delivered_customer_date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>estimated_delivery_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[estimated_delivery_date]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>estimated_delivery_date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_unique_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_unique_id]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>customer_unique_id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_zip_code_prefix</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_zip_code_prefix]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>customer_zip_code_prefix</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_city]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>customer_city</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_state]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>customer_state</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_score</remote-name>
            <remote-type>20</remote-type>
            <local-name>[review_score]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>review_score</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_to_ship</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_to_ship]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>days_to_ship</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_to_deliver</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_to_deliver]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>days_to_deliver</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_delivery_delay_days</remote-name>
            <remote-type>20</remote-type>
            <local-name>[carrier_delivery_delay_days]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>carrier_delivery_delay_days</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_delivery_delay_days</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_delivery_delay_days]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>customer_delivery_delay_days</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_id (items.csv)]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_id]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_category]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>product_category</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>purchased_on</remote-name>
            <remote-type>135</remote-type>
            <local-name>[purchased_on (items.csv)]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>purchased_on</remote-alias>
            <ordinal>21</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping_limit_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[shipping_limit_date (items.csv)]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>shipping_limit_date</remote-alias>
            <ordinal>22</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[qty]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>qty</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_per_unit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_per_unit]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>price_per_unit</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freight_value_per_unit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[freight_value_per_unit]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>freight_value_per_unit</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_price]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>total_price</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_zip_code_prefix</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_zip_code_prefix (items.csv)]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>customer_zip_code_prefix</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_city (items.csv)]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>customer_city</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_state (items.csv)]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>customer_state</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_zip_code_prefix</remote-name>
            <remote-type>20</remote-type>
            <local-name>[seller_zip_code_prefix]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>seller_zip_code_prefix</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seller_city]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>seller_city</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seller_state]</local-name>
            <parent-name>[items.csv]</parent-name>
            <remote-alias>seller_state</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_id (payments.csv)]</local-name>
            <parent-name>[payments.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payment_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[payment_type]</local-name>
            <parent-name>[payments.csv]</parent-name>
            <remote-alias>payment_type</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payment_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[payment_value]</local-name>
            <parent-name>[payments.csv]</parent-name>
            <remote-alias>payment_value</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_installments</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_installments]</local-name>
            <parent-name>[payments.csv]</parent-name>
            <remote-alias>num_installments</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_installment_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_installment_value]</local-name>
            <parent-name>[payments.csv]</parent-name>
            <remote-alias>avg_installment_value</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_zip_code_prefix</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_zip_code_prefix (payments.csv)]</local-name>
            <parent-name>[payments.csv]</parent-name>
            <remote-alias>customer_zip_code_prefix</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_city (payments.csv)]</local-name>
            <parent-name>[payments.csv]</parent-name>
            <remote-alias>customer_city</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_state (payments.csv)]</local-name>
            <parent-name>[payments.csv]</parent-name>
            <remote-alias>customer_state</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]&quot;' value='Avg. Days To Deliver' />
          <alias key='&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_ship:qk]&quot;' value='Avg. Days To Ship' />
          <alias key='&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]&quot;' value='Avg. Order Value (BRL)' />
          <alias key='&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:review_score:qk]&quot;' value='Avg. Review Score' />
          <alias key='&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]&quot;' value='Total # of Orders' />
          <alias key='&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]&quot;' value='Total Sales (BRL)' />
        </aliases>
      </column>
      <column caption='Measure Selection Filter' datatype='string' name='[Calculation_1337850604370006016]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='Customer State N' datatype='string' name='[Calculation_2471350333442125824]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='tableau' formula='CASE [customer_state]&#10;    WHEN &apos;AC&apos; THEN &apos;Acre&apos;&#10;    WHEN &apos;AL&apos; THEN &apos;Alagoas&apos;&#10;    WHEN &apos;AP&apos; THEN &apos;Amapá&apos;&#10;    WHEN &apos;AM&apos; THEN &apos;Amazonas&apos;&#10;    WHEN &apos;BA&apos; THEN &apos;Bahia&apos;&#10;    WHEN &apos;CE&apos; THEN &apos;Ceará&apos;&#10;    WHEN &apos;DF&apos; THEN &apos;Distrito Federal&apos;&#10;    WHEN &apos;ES&apos; THEN &apos;Espírito Santo&apos;&#10;    WHEN &apos;GO&apos; THEN &apos;Goiás&apos;&#10;    WHEN &apos;MA&apos; THEN &apos;Maranhão&apos;&#10;    WHEN &apos;MT&apos; THEN &apos;Mato Grosso&apos;&#10;    WHEN &apos;MS&apos; THEN &apos;Mato Grosso do Sul&apos;&#10;    WHEN &apos;MG&apos; THEN &apos;Minas Gerais&apos;&#10;    WHEN &apos;PA&apos; THEN &apos;Pará&apos;&#10;    WHEN &apos;PB&apos; THEN &apos;Paraíba&apos;&#10;    WHEN &apos;PR&apos; THEN &apos;Paraná&apos;&#10;    WHEN &apos;PE&apos; THEN &apos;Pernambuco&apos;&#10;    WHEN &apos;PI&apos; THEN &apos;Piauí&apos;&#10;    WHEN &apos;RJ&apos; THEN &apos;Rio de Janeiro&apos;&#10;    WHEN &apos;RN&apos; THEN &apos;Rio Grande do Norte&apos;&#10;    WHEN &apos;RS&apos; THEN &apos;Rio Grande do Sul&apos;&#10;    WHEN &apos;RO&apos; THEN &apos;Rondônia&apos;&#10;    WHEN &apos;RR&apos; THEN &apos;Roraima&apos;&#10;    WHEN &apos;SC&apos; THEN &apos;Santa Catarina&apos;&#10;    WHEN &apos;SP&apos; THEN &apos;São Paulo&apos;&#10;    WHEN &apos;SE&apos; THEN &apos;Sergipe&apos;&#10;    WHEN &apos;TO&apos; THEN &apos;Tocantins&apos;&#10;    ELSE &apos;Unknown&apos;&#10;END' />
      </column>
      <column caption='Review Score Label' datatype='string' name='[Calculation_2613776671693606914]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([review_score])&#10;THEN &apos;No Rating&apos;&#10;ELSE STR([review_score])&#10;END' />
      </column>
      <column caption='Order Ratio' datatype='real' default-format='p0.00%' name='[Calculation_2775976627048591361]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([order_id]) / TOTAL(COUNT([order_id]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Same/Different State' datatype='string' name='[Calculation_4933341587080986626]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [customer_state] = [seller_state]&#10;THEN &apos;Same State&apos;&#10;ELSE &apos;Different State&apos;&#10;END' />
        <aliases>
          <alias key='&quot;Different State&quot;' value='Out-of-State' />
          <alias key='&quot;Same State&quot;' value='In-State' />
        </aliases>
      </column>
      <column caption='Order Status (Grouped)' datatype='string' name='[Calculation_5772348124256980992]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [order_status] IN (&apos;delivered&apos;, &apos;canceled&apos;, &apos;unavailable&apos;)&#10;THEN [order_status]&#10;ELSE &apos;in progress&apos;&#10;END' />
      </column>
      <column caption='On-Time Delivery Rate' datatype='real' default-format='p0.00%' name='[Calculation_701717154163355651]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF [customer_delivery_delay_days] &lt;= 0 THEN 1 ELSE 0 END) &#10;/ &#10;COUNT([order_id])' />
      </column>
      <column caption='Fulfilled Order Rate' datatype='real' default-format='p0.00%' name='[Calculation_784822641041629184]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='SUM(&#10;    IF [order_status] = &quot;delivered&quot;&#10;    THEN 1&#10;    ELSE 0&#10;    END&#10;)&#10;/&#10;COUNT([order_id])' />
      </column>
      <column caption='Customer Country' datatype='string' name='[Calculation_784822641048932354]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='&quot;Brazil&quot;' />
      </column>
      <column caption='Seller Country' datatype='string' name='[Customer Country (copy)_784822641049821187]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='&quot;Brazil&quot;' />
      </column>
      <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='tableau' formula='[customer_state]' />
        <aliases>
          <alias key='&quot;AC&quot;' value='Acre' />
          <alias key='&quot;AL&quot;' value='Alagoas' />
          <alias key='&quot;AM&quot;' value='Amazonas' />
          <alias key='&quot;AP&quot;' value='Amapá' />
          <alias key='&quot;BA&quot;' value='Bahia' />
          <alias key='&quot;CE&quot;' value='Ceará' />
          <alias key='&quot;DF&quot;' value='Distrito Federal' />
          <alias key='&quot;ES&quot;' value='Espírito Santo' />
          <alias key='&quot;GO&quot;' value='Goiás' />
          <alias key='&quot;MA&quot;' value='Maranhão' />
          <alias key='&quot;MG&quot;' value='Minas Gerais' />
          <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
          <alias key='&quot;MT&quot;' value='Mato Grosso' />
          <alias key='&quot;PA&quot;' value='Pará' />
          <alias key='&quot;PB&quot;' value='Paraíba' />
          <alias key='&quot;PE&quot;' value='Pernambuco' />
          <alias key='&quot;PI&quot;' value='Piauí' />
          <alias key='&quot;PR&quot;' value='Paraná' />
          <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
          <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
          <alias key='&quot;RO&quot;' value='Rondônia' />
          <alias key='&quot;RR&quot;' value='Roraima' />
          <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
          <alias key='&quot;SC&quot;' value='Santa Catarina' />
          <alias key='&quot;SE&quot;' value='Sergipe' />
          <alias key='&quot;SP&quot;' value='São Paulo' />
          <alias key='&quot;TO&quot;' value='Tocantins' />
        </aliases>
      </column>
      <column caption='items.csv' datatype='table' name='[__tableau_internal_object_id__].[items.csv_E2D9FCC1990D42B584D4422B14414E18]' role='measure' type='quantitative' />
      <column caption='orders.csv' datatype='table' name='[__tableau_internal_object_id__].[orders.csv_699E561D72A54940BC1E7FD1BC006772]' role='measure' type='quantitative' />
      <column caption='payments.csv' datatype='table' name='[__tableau_internal_object_id__].[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]' role='measure' type='quantitative' />
      <column caption='Approved At' datatype='datetime' name='[approved_at]' role='dimension' type='ordinal' />
      <column caption='Avg Installment Value' datatype='real' name='[avg_installment_value]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Carrier Delivery Delay Days' datatype='integer' name='[carrier_delivery_delay_days]' role='measure' type='quantitative' />
      <column caption='Customer City (Items.Csv)' datatype='string' hidden='true' name='[customer_city (items.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Customer City (Payments.Csv)' datatype='string' hidden='true' name='[customer_city (payments.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Customer City' datatype='string' name='[customer_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Customer Delivery Delay Days' datatype='integer' name='[customer_delivery_delay_days]' role='measure' type='quantitative' />
      <column caption='Customer State (Items.Csv)' datatype='string' hidden='true' name='[customer_state (items.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Customer State (Payments.Csv)' datatype='string' hidden='true' name='[customer_state (payments.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Customer Unique Id' datatype='string' name='[customer_unique_id]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Customer Zip Code Prefix (Items.Csv)' datatype='integer' default-format='*00000' hidden='true' name='[customer_zip_code_prefix (items.csv)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregation='Sum' caption='Customer Zip Code Prefix (Payments.Csv)' datatype='integer' default-format='*00000' hidden='true' name='[customer_zip_code_prefix (payments.csv)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregation='Sum' caption='Customer Zip Code Prefix' datatype='integer' default-format='*00000' name='[customer_zip_code_prefix]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregation='Avg' caption='Days To Deliver' datatype='integer' name='[days_to_deliver]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Days To Ship' datatype='integer' name='[days_to_ship]' role='measure' type='quantitative' />
      <column caption='Delivered Carrier Date' datatype='datetime' name='[delivered_carrier_date]' role='dimension' type='ordinal' />
      <column caption='Delivered Customer Date' datatype='datetime' name='[delivered_customer_date]' role='dimension' type='ordinal' />
      <column caption='Estimated Delivery Date' datatype='datetime' name='[estimated_delivery_date]' role='dimension' type='ordinal' />
      <column caption='Freight Value Per Unit' datatype='real' name='[freight_value_per_unit]' role='measure' type='quantitative' />
      <column caption='Num Installments' datatype='integer' name='[num_installments]' role='measure' type='quantitative' />
      <column caption='Order Id (Items.Csv)' datatype='string' hidden='true' name='[order_id (items.csv)]' role='dimension' type='nominal' />
      <column caption='Order Id (Payments.Csv)' datatype='string' hidden='true' name='[order_id (payments.csv)]' role='dimension' type='nominal' />
      <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
      <column caption='Order Status' datatype='string' name='[order_status]' role='dimension' type='nominal' />
      <column caption='Order Total' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[order_total]' role='measure' type='quantitative' />
      <column caption='Payment Type' datatype='string' name='[payment_type]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Payment Value' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[payment_value]' role='measure' type='quantitative' />
      <column caption='Price Per Unit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[price_per_unit]' role='measure' type='quantitative' />
      <column caption='Product Category' datatype='string' name='[product_category]' role='dimension' type='nominal' />
      <column caption='Product Id' datatype='string' name='[product_id]' role='dimension' type='nominal' />
      <column caption='Purchased On (Items.Csv)' datatype='datetime' hidden='true' name='[purchased_on (items.csv)]' role='dimension' type='ordinal' />
      <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
      <column caption='Qty' datatype='integer' name='[qty]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Review Score' datatype='integer' datatype-customized='true' name='[review_score]' role='measure' type='quantitative' />
      <column caption='Seller City' datatype='string' name='[seller_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Seller State' datatype='string' name='[seller_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' caption='Seller Zip Code Prefix' datatype='integer' default-format='*00000' name='[seller_zip_code_prefix]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Shipping Limit Date (Items.Csv)' datatype='datetime' hidden='true' name='[shipping_limit_date (items.csv)]' role='dimension' type='ordinal' />
      <column caption='Shipping Limit Date' datatype='datetime' name='[shipping_limit_date]' role='dimension' type='ordinal' />
      <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
      <column-instance column='[carrier_delivery_delay_days]' derivation='Avg' name='[avg:carrier_delivery_delay_days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[customer_delivery_delay_days]' derivation='Avg' name='[avg:customer_delivery_delay_days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[days_to_deliver]' derivation='Avg' name='[avg:days_to_deliver:qk]' pivot='key' type='quantitative' />
      <column-instance column='[days_to_ship]' derivation='Avg' name='[avg:days_to_ship:qk]' pivot='key' type='quantitative' />
      <column-instance column='[order_total]' derivation='Avg' name='[avg:order_total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[review_score]' derivation='Avg' name='[avg:review_score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[days_to_deliver]' derivation='Count' name='[cnt:days_to_deliver:qk]' pivot='key' type='quantitative' />
      <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[order_id]' derivation='CountD' name='[ctd:order_id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2613776671693606914]' derivation='None' name='[none:Calculation_2613776671693606914:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4933341587080986626]' derivation='None' name='[none:Calculation_4933341587080986626:nk]' pivot='key' type='nominal' />
      <column-instance column='[carrier_delivery_delay_days]' derivation='None' name='[none:carrier_delivery_delay_days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[customer_delivery_delay_days]' derivation='None' name='[none:customer_delivery_delay_days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[days_to_deliver]' derivation='None' name='[none:days_to_deliver:qk]' pivot='key' type='quantitative' />
      <column-instance column='[order_total]' derivation='None' name='[none:order_total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[payment_type]' derivation='None' name='[none:payment_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[avg_installment_value]' derivation='Sum' name='[sum:avg_installment_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[order_total]' derivation='Sum' name='[sum:order_total:qk]' pivot='key' type='quantitative' />
      <group caption='Tooltip (Customer Country,Customer State)' hidden='true' name='[Tooltip (Customer Country,Customer State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_784822641048932354]' />
          <groupfilter function='level-members' level='[customer_state]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Customer State)' hidden='true' name='[Tooltip (Customer State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[customer_state]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Product Category)' hidden='true' name='[Tooltip (Product Category)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[product_category]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Customer Location'>
          <field>[Calculation_784822641048932354]</field>
          <field>[customer_state]</field>
          <field>[Calculation_2471350333442125824]</field>
          <field>[Customer State (copy)_2090655429956329472]</field>
          <field>[customer_city]</field>
          <field>[customer_zip_code_prefix]</field>
        </drill-path>
        <drill-path name='Seller Location'>
          <field>[Customer Country (copy)_784822641049821187]</field>
          <field>[seller_state]</field>
          <field>[seller_city]</field>
          <field>[seller_zip_code_prefix]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/42/mljs3ryd76gfqj1d92cyzkcc0000gn/T/tableau-temp/#TableauTemp_17qdqvs17uma2l1648e8s0qltwsd.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/09/2025 02:40:59 AM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='orders.csv_699E561D72A54940BC1E7FD1BC006772' table='[Extract].[orders.csv_699E561D72A54940BC1E7FD1BC006772]' type='table' />
            <relation name='items.csv_E2D9FCC1990D42B584D4422B14414E18' table='[Extract].[items.csv_E2D9FCC1990D42B584D4422B14414E18]' type='table' />
            <relation name='payments.csv_BAF121CFC2BC42F48EAF03852D69CF43' table='[Extract].[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]' type='table' />
          </relation>
          <cols>
            <map key='[approved_at]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[approved_at]' />
            <map key='[avg_installment_value]' value='[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43].[avg_installment_value]' />
            <map key='[carrier_delivery_delay_days]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[carrier_delivery_delay_days]' />
            <map key='[customer_city]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[customer_city]' />
            <map key='[customer_delivery_delay_days]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[customer_delivery_delay_days]' />
            <map key='[customer_state]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[customer_state]' />
            <map key='[customer_unique_id]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[customer_unique_id]' />
            <map key='[customer_zip_code_prefix]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[customer_zip_code_prefix]' />
            <map key='[days_to_deliver]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[days_to_deliver]' />
            <map key='[days_to_ship]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[days_to_ship]' />
            <map key='[delivered_carrier_date]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[delivered_carrier_date]' />
            <map key='[delivered_customer_date]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[delivered_customer_date]' />
            <map key='[estimated_delivery_date]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[estimated_delivery_date]' />
            <map key='[freight_value_per_unit]' value='[items.csv_E2D9FCC1990D42B584D4422B14414E18].[freight_value_per_unit]' />
            <map key='[num_installments]' value='[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43].[num_installments]' />
            <map key='[order_id (items.csv)]' value='[items.csv_E2D9FCC1990D42B584D4422B14414E18].[order_id]' />
            <map key='[order_id (payments.csv)]' value='[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43].[order_id]' />
            <map key='[order_id]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[order_id]' />
            <map key='[order_status]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[order_status]' />
            <map key='[order_total]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[order_total]' />
            <map key='[payment_type]' value='[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43].[payment_type]' />
            <map key='[payment_value]' value='[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43].[payment_value]' />
            <map key='[price_per_unit]' value='[items.csv_E2D9FCC1990D42B584D4422B14414E18].[price_per_unit]' />
            <map key='[product_category]' value='[items.csv_E2D9FCC1990D42B584D4422B14414E18].[product_category]' />
            <map key='[product_id]' value='[items.csv_E2D9FCC1990D42B584D4422B14414E18].[product_id]' />
            <map key='[purchased_on]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[purchased_on]' />
            <map key='[qty]' value='[items.csv_E2D9FCC1990D42B584D4422B14414E18].[qty]' />
            <map key='[review_score]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[review_score]' />
            <map key='[seller_city]' value='[items.csv_E2D9FCC1990D42B584D4422B14414E18].[seller_city]' />
            <map key='[seller_state]' value='[items.csv_E2D9FCC1990D42B584D4422B14414E18].[seller_state]' />
            <map key='[seller_zip_code_prefix]' value='[items.csv_E2D9FCC1990D42B584D4422B14414E18].[seller_zip_code_prefix]' />
            <map key='[shipping_limit_date]' value='[orders.csv_699E561D72A54940BC1E7FD1BC006772].[shipping_limit_date]' />
            <map key='[total_price]' value='[items.csv_E2D9FCC1990D42B584D4422B14414E18].[total_price]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>order_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[order_id]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>order_id</remote-alias>
              <ordinal>0</ordinal>
              <family>orders.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>99092</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[order_status]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>order_status</remote-alias>
              <ordinal>1</ordinal>
              <family>orders.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_total</remote-name>
              <remote-type>5</remote-type>
              <local-name>[order_total]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>order_total</remote-alias>
              <ordinal>2</ordinal>
              <family>orders.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21934</approx-count>
              <contains-null>true</contains-null>
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>purchased_on</remote-name>
              <remote-type>135</remote-type>
              <local-name>[purchased_on]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>purchased_on</remote-alias>
              <ordinal>3</ordinal>
              <family>orders.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>99092</approx-count>
              <contains-null>true</contains-null>
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>approved_at</remote-name>
              <remote-type>135</remote-type>
              <local-name>[approved_at]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>approved_at</remote-alias>
              <ordinal>4</ordinal>
              <family>orders.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>83576</approx-count>
              <contains-null>true</contains-null>
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>shipping_limit_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[shipping_limit_date]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>shipping_limit_date</remote-alias>
              <ordinal>5</ordinal>
              <family>orders.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>83109</approx-count>
              <contains-null>true</contains-null>
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>delivered_carrier_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[delivered_carrier_date]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>delivered_carrier_date</remote-alias>
              <ordinal>6</ordinal>
              <family>orders.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>66975</approx-count>
              <contains-null>true</contains-null>
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>delivered_customer_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[delivered_customer_date]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>delivered_customer_date</remote-alias>
              <ordinal>7</ordinal>
              <family>orders.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>92495</approx-count>
              <contains-null>true</contains-null>
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>estimated_delivery_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[estimated_delivery_date]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>estimated_delivery_date</remote-alias>
              <ordinal>8</ordinal>
              <family>orders.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1026</approx-count>
              <contains-null>true</contains-null>
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>customer_unique_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[customer_unique_id]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>customer_unique_id</remote-alias>
              <ordinal>9</ordinal>
              <family>orders.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>99092</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>customer_zip_code_prefix</remote-name>
              <remote-type>20</remote-type>
              <local-name>[customer_zip_code_prefix]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>customer_zip_code_prefix</remote-alias>
              <ordinal>10</ordinal>
              <family>orders.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19597</approx-count>
              <contains-null>true</contains-null>
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>customer_city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[customer_city]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>customer_city</remote-alias>
              <ordinal>11</ordinal>
              <family>orders.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3159</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>customer_state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[customer_state]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>customer_state</remote-alias>
              <ordinal>12</ordinal>
              <family>orders.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>review_score</remote-name>
              <remote-type>20</remote-type>
              <local-name>[review_score]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>review_score</remote-alias>
              <ordinal>13</ordinal>
              <family>orders.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>days_to_ship</remote-name>
              <remote-type>20</remote-type>
              <local-name>[days_to_ship]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>days_to_ship</remote-alias>
              <ordinal>14</ordinal>
              <family>orders.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>95</approx-count>
              <contains-null>true</contains-null>
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>days_to_deliver</remote-name>
              <remote-type>20</remote-type>
              <local-name>[days_to_deliver]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>days_to_deliver</remote-alias>
              <ordinal>15</ordinal>
              <family>orders.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>148</approx-count>
              <contains-null>true</contains-null>
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_delivery_delay_days</remote-name>
              <remote-type>20</remote-type>
              <local-name>[carrier_delivery_delay_days]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>carrier_delivery_delay_days</remote-alias>
              <ordinal>16</ordinal>
              <family>orders.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>115</approx-count>
              <contains-null>true</contains-null>
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>customer_delivery_delay_days</remote-name>
              <remote-type>20</remote-type>
              <local-name>[customer_delivery_delay_days]</local-name>
              <parent-name>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</parent-name>
              <remote-alias>customer_delivery_delay_days</remote-alias>
              <ordinal>17</ordinal>
              <family>orders.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>201</approx-count>
              <contains-null>true</contains-null>
              <object-id>[orders.csv_699E561D72A54940BC1E7FD1BC006772]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[order_id (items.csv)]</local-name>
              <parent-name>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</parent-name>
              <remote-alias>order_id</remote-alias>
              <ordinal>18</ordinal>
              <family>items.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>102092</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[product_id]</local-name>
              <parent-name>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</parent-name>
              <remote-alias>product_id</remote-alias>
              <ordinal>19</ordinal>
              <family>items.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18673</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[product_category]</local-name>
              <parent-name>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</parent-name>
              <remote-alias>product_category</remote-alias>
              <ordinal>20</ordinal>
              <family>items.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>175</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>qty</remote-name>
              <remote-type>20</remote-type>
              <local-name>[qty]</local-name>
              <parent-name>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</parent-name>
              <remote-alias>qty</remote-alias>
              <ordinal>21</ordinal>
              <family>items.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_per_unit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price_per_unit]</local-name>
              <parent-name>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</parent-name>
              <remote-alias>price_per_unit</remote-alias>
              <ordinal>22</ordinal>
              <family>items.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3485</approx-count>
              <contains-null>true</contains-null>
              <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freight_value_per_unit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[freight_value_per_unit]</local-name>
              <parent-name>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</parent-name>
              <remote-alias>freight_value_per_unit</remote-alias>
              <ordinal>23</ordinal>
              <family>items.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6544</approx-count>
              <contains-null>true</contains-null>
              <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_price]</local-name>
              <parent-name>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</parent-name>
              <remote-alias>total_price</remote-alias>
              <ordinal>24</ordinal>
              <family>items.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21818</approx-count>
              <contains-null>true</contains-null>
              <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_zip_code_prefix</remote-name>
              <remote-type>20</remote-type>
              <local-name>[seller_zip_code_prefix]</local-name>
              <parent-name>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</parent-name>
              <remote-alias>seller_zip_code_prefix</remote-alias>
              <ordinal>25</ordinal>
              <family>items.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2743</approx-count>
              <contains-null>true</contains-null>
              <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[seller_city]</local-name>
              <parent-name>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</parent-name>
              <remote-alias>seller_city</remote-alias>
              <ordinal>26</ordinal>
              <family>items.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>855</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[seller_state]</local-name>
              <parent-name>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</parent-name>
              <remote-alias>seller_state</remote-alias>
              <ordinal>27</ordinal>
              <family>items.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[items.csv_E2D9FCC1990D42B584D4422B14414E18]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[order_id (payments.csv)]</local-name>
              <parent-name>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</parent-name>
              <remote-alias>order_id</remote-alias>
              <ordinal>28</ordinal>
              <family>payments.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>92682</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>payment_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[payment_type]</local-name>
              <parent-name>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</parent-name>
              <remote-alias>payment_type</remote-alias>
              <ordinal>29</ordinal>
              <family>payments.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>payment_value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[payment_value]</local-name>
              <parent-name>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</parent-name>
              <remote-alias>payment_value</remote-alias>
              <ordinal>30</ordinal>
              <family>payments.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21446</approx-count>
              <contains-null>true</contains-null>
              <object-id>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>num_installments</remote-name>
              <remote-type>20</remote-type>
              <local-name>[num_installments]</local-name>
              <parent-name>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</parent-name>
              <remote-alias>num_installments</remote-alias>
              <ordinal>31</ordinal>
              <family>payments.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <object-id>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_installment_value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_installment_value]</local-name>
              <parent-name>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</parent-name>
              <remote-alias>avg_installment_value</remote-alias>
              <ordinal>32</ordinal>
              <family>payments.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21050</approx-count>
              <contains-null>true</contains-null>
              <object-id>[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout common-percentage='0.9632' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0368' show-aliased-fields='true' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:payment_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;credit_card&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;debit_card&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;voucher&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;boleto&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_ship:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:days_to_deliver:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[ctd:order_id:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[none:days_to_deliver:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_6165568666796306435:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_6165568666796331012:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_6165568666796785669:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:customer_delivery_delay_days:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:customer_delivery_delay_days:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_delivery_delay_days:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[sum:customer_delivery_delay_days:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:carrier_delivery_delay_days:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[none:carrier_delivery_delay_days:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[sum:carrier_delivery_delay_days:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[none:order_total:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[sum:avg_installment_value:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_4933341587080986626:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Different State&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Same State&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2613776671693606914:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;No Rating&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='order_id (payments.csv)' />
        <field-sort-custom-order field='payment_type' />
        <field-sort-custom-order field='payment_value' />
        <field-sort-custom-order field='num_installments' />
        <field-sort-custom-order field='avg_installment_value' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Measure Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Orders&quot;'>
          <calculation class='tableau' formula='&quot;Number of Orders&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='items.csv' id='items.csv_E2D9FCC1990D42B584D4422B14414E18'>
            <properties context=''>
              <relation connection='textscan.0sc6c4c12ejvio18yor571ld93oj' name='items.csv' table='[items#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='order_id' ordinal='0' />
                  <column datatype='string' name='product_id' ordinal='1' />
                  <column datatype='string' name='product_category' ordinal='2' />
                  <column datatype='datetime' name='purchased_on' ordinal='3' />
                  <column datatype='datetime' name='shipping_limit_date' ordinal='4' />
                  <column datatype='integer' name='qty' ordinal='5' />
                  <column datatype='real' name='price_per_unit' ordinal='6' />
                  <column datatype='real' name='freight_value_per_unit' ordinal='7' />
                  <column datatype='real' name='total_price' ordinal='8' />
                  <column datatype='integer' name='customer_zip_code_prefix' ordinal='9' />
                  <column datatype='string' name='customer_city' ordinal='10' />
                  <column datatype='string' name='customer_state' ordinal='11' />
                  <column datatype='integer' name='seller_zip_code_prefix' ordinal='12' />
                  <column datatype='string' name='seller_city' ordinal='13' />
                  <column datatype='string' name='seller_state' ordinal='14' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='items.csv_E2D9FCC1990D42B584D4422B14414E18' table='[Extract].[items.csv_E2D9FCC1990D42B584D4422B14414E18]' type='table' />
            </properties>
          </object>
          <object caption='orders.csv' id='orders.csv_699E561D72A54940BC1E7FD1BC006772'>
            <properties context=''>
              <relation connection='textscan.0sc6c4c12ejvio18yor571ld93oj' name='orders.csv' table='[orders#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='order_id' ordinal='0' />
                  <column datatype='string' name='order_status' ordinal='1' />
                  <column datatype='real' name='order_total' ordinal='2' />
                  <column datatype='datetime' name='purchased_on' ordinal='3' />
                  <column datatype='datetime' name='approved_at' ordinal='4' />
                  <column datatype='datetime' name='shipping_limit_date' ordinal='5' />
                  <column datatype='datetime' name='delivered_carrier_date' ordinal='6' />
                  <column datatype='datetime' name='delivered_customer_date' ordinal='7' />
                  <column datatype='datetime' name='estimated_delivery_date' ordinal='8' />
                  <column datatype='string' name='customer_unique_id' ordinal='9' />
                  <column datatype='integer' name='customer_zip_code_prefix' ordinal='10' />
                  <column datatype='string' name='customer_city' ordinal='11' />
                  <column datatype='string' name='customer_state' ordinal='12' />
                  <column datatype='integer' name='review_score' ordinal='13' />
                  <column datatype='integer' name='days_to_ship' ordinal='14' />
                  <column datatype='integer' name='days_to_deliver' ordinal='15' />
                  <column datatype='integer' name='carrier_delivery_delay_days' ordinal='16' />
                  <column datatype='integer' name='customer_delivery_delay_days' ordinal='17' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='orders.csv_699E561D72A54940BC1E7FD1BC006772' table='[Extract].[orders.csv_699E561D72A54940BC1E7FD1BC006772]' type='table' />
            </properties>
          </object>
          <object caption='payments.csv' id='payments.csv_BAF121CFC2BC42F48EAF03852D69CF43'>
            <properties context=''>
              <relation connection='textscan.0sc6c4c12ejvio18yor571ld93oj' name='payments.csv' table='[payments#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='order_id' ordinal='0' />
                  <column datatype='string' name='payment_type' ordinal='1' />
                  <column datatype='real' name='payment_value' ordinal='2' />
                  <column datatype='integer' name='num_installments' ordinal='3' />
                  <column datatype='real' name='avg_installment_value' ordinal='4' />
                  <column datatype='integer' name='customer_zip_code_prefix' ordinal='5' />
                  <column datatype='string' name='customer_city' ordinal='6' />
                  <column datatype='string' name='customer_state' ordinal='7' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='payments.csv_BAF121CFC2BC42F48EAF03852D69CF43' table='[Extract].[payments.csv_BAF121CFC2BC42F48EAF03852D69CF43]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[order_id]' />
              <expression op='[order_id (items.csv)]' />
            </expression>
            <first-end-point object-id='orders.csv_699E561D72A54940BC1E7FD1BC006772' />
            <second-end-point object-id='items.csv_E2D9FCC1990D42B584D4422B14414E18' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_id]' />
              <expression op='[order_id (payments.csv)]' />
            </expression>
            <first-end-point object-id='orders.csv_699E561D72A54940BC1E7FD1BC006772' />
            <second-end-point object-id='payments.csv_BAF121CFC2BC42F48EAF03852D69CF43' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0cckfq11h3u2vr13412m603g6zra'>
      <datasources>
        <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
      </datasources>
      <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
        <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='tableau' formula='[customer_state]' />
          <aliases>
            <alias key='&quot;AC&quot;' value='Acre' />
            <alias key='&quot;AL&quot;' value='Alagoas' />
            <alias key='&quot;AM&quot;' value='Amazonas' />
            <alias key='&quot;AP&quot;' value='Amapá' />
            <alias key='&quot;BA&quot;' value='Bahia' />
            <alias key='&quot;CE&quot;' value='Ceará' />
            <alias key='&quot;DF&quot;' value='Distrito Federal' />
            <alias key='&quot;ES&quot;' value='Espírito Santo' />
            <alias key='&quot;GO&quot;' value='Goiás' />
            <alias key='&quot;MA&quot;' value='Maranhão' />
            <alias key='&quot;MG&quot;' value='Minas Gerais' />
            <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
            <alias key='&quot;MT&quot;' value='Mato Grosso' />
            <alias key='&quot;PA&quot;' value='Pará' />
            <alias key='&quot;PB&quot;' value='Paraíba' />
            <alias key='&quot;PE&quot;' value='Pernambuco' />
            <alias key='&quot;PI&quot;' value='Piauí' />
            <alias key='&quot;PR&quot;' value='Paraná' />
            <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
            <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
            <alias key='&quot;RO&quot;' value='Rondônia' />
            <alias key='&quot;RR&quot;' value='Roraima' />
            <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
            <alias key='&quot;SC&quot;' value='Santa Catarina' />
            <alias key='&quot;SE&quot;' value='Sergipe' />
            <alias key='&quot;SP&quot;' value='São Paulo' />
            <alias key='&quot;TO&quot;' value='Tocantins' />
          </aliases>
        </column>
        <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
        <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
        <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
        <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]'>
        <groupfilter function='level-members' level='[none:Customer State (copy)_2090655429956329472:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]'>
        <groupfilter function='level-members' level='[none:customer_state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' included-values='in-range'>
        <min>#2017-01-01 00:00:00#</min>
        <max>#2018-08-01 00:00:00#</max>
        <target field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='# of Orders by State/ZIP Code'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Measure Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Orders&quot;'>
              <calculation class='tableau' formula='&quot;Number of Orders&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Measure Selection Filter' datatype='string' name='[Calculation_1337850604370006016]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Customer Country' datatype='string' name='[Calculation_784822641048932354]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='&quot;Brazil&quot;' />
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[customer_zip_code_prefix]' derivation='Count' name='[cnt:customer_zip_code_prefix:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Customer Zip Code Prefix' datatype='integer' default-format='*00000' name='[customer_zip_code_prefix]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[Calculation_1337850604370006016]' derivation='None' name='[none:Calculation_1337850604370006016:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_784822641048932354]' derivation='None' name='[none:Calculation_784822641048932354:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_zip_code_prefix]' derivation='None' name='[none:customer_zip_code_prefix:ok]' pivot='key' type='ordinal' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0cckfq11h3u2vr13412m603g6zra].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0cckfq11h3u2vr13412m603g6zra].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_1337850604370006016:nk]'>
            <groupfilter expression='[Parameters].[Parameter 1] = &quot;Number of Orders&quot;' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Calculation_1337850604370006016:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[Latitude (generated)]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[Longitude (generated)]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_1337850604370006016:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0cckfq11h3u2vr13412m603g6zra].[Latitude (generated)]' field-type='quantitative' fold='true' projection='EPSG:3857' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' max='30000' palette='green_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:customer_zip_code_prefix:qk]' max='100' min='-20' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_zip_code_prefix:ok]' value='false' />
            <format attr='break-on-special' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_zip_code_prefix:ok]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_zip_code_prefix:ok]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]' value='Customer State'>
              <formatted-text>
                <run>Customer State</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='center' />
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' />
              <lod column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_784822641048932354:nk]' />
              <lod column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#555555' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cckfq11h3u2vr13412m603g6zra].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' />
              <text column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]' />
              <lod column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_784822641048932354:nk]' />
              <lod column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]' />
              <lod column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]' />
              <geometry column='[federated.0cckfq11h3u2vr13412m603g6zra].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Customer State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Order Count:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontsize='12'>Monthly Order Count</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontsize='12'><![CDATA[(<[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]>)]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="# of Orders per Month (Map)" maxwidth="300" maxheight="200" filter="<[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]>">]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#555555' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cckfq11h3u2vr13412m603g6zra].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' />
              <lod column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_784822641048932354:nk]' />
              <lod column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]' />
              <lod column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_zip_code_prefix:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Customer State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Customer Zip Code (First 5 Digits):	</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_zip_code_prefix:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Order Count:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontsize='12'>Monthly Order Count</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontsize='12'><![CDATA[(<[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]>)]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="# of Orders per Month (Map)" maxwidth="300" maxheight="200" filter="<[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]>">]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#555555' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4172928333282471' />
                <encoding attr='density-color' palette='green_blue_diverging_10_0' type='interpolated' />
                <format attr='mark-labels-show' value='false' />
                <format attr='density-intensity' value='0.029787240549921989' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='density-kernel-size' value='1' />
                <format attr='has-stroke' value='true' />
                <format attr='has-halo' value='true' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0cckfq11h3u2vr13412m603g6zra].[Latitude (generated)] + [federated.0cckfq11h3u2vr13412m603g6zra].[Latitude (generated)])</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6E42246E-03D7-48DF-9C2E-C40282361D3B}' />
    </worksheet>
    <worksheet name='# of Orders per Month (Map)'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[Tooltip (Customer State)]'>
            <groupfilter function='level-members' level='[customer_state]' user:ui-action-filter='[Action - # of Orders per Month (Map)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[Tooltip (Customer State)]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' scope='cols' value='Purchase Month' />
            <encoding attr='space' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' field-type='quantitative' major-origin='#2017-01-01 00:00:00#' major-spacing='3.0' major-units='months' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' scope='rows' value='Number of Orders' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='-90' />
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='*MMM YYYY' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</cols>
      </table>
      <simple-id uuid='{B3DB869B-72D1-44FB-A17D-2AFC63CE0B5F}' />
    </worksheet>
    <worksheet name='Avg. Order Value by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Measure Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Orders&quot;'>
              <calculation class='tableau' formula='&quot;Number of Orders&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Measure Selection Filter' datatype='string' name='[Calculation_1337850604370006016]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Customer Country' datatype='string' name='[Calculation_784822641048932354]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='&quot;Brazil&quot;' />
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[order_total]' derivation='Avg' name='[avg:order_total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1337850604370006016]' derivation='None' name='[none:Calculation_1337850604370006016:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_784822641048932354]' derivation='None' name='[none:Calculation_784822641048932354:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column caption='Order Total' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[order_total]' role='measure' type='quantitative' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_1337850604370006016:nk]'>
            <groupfilter expression='[Parameters].[Parameter 1] = &quot;Avg. Order Value&quot;' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Calculation_1337850604370006016:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_1337850604370006016:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]' palette='blue_teal_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]' />
              <tooltip column='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' />
              <text column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]' />
              <lod column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_784822641048932354:nk]' />
              <lod column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]' />
              <lod column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]' />
              <geometry column='[federated.0cckfq11h3u2vr13412m603g6zra].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Customer State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Order Count:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Avg. Order Value:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]> BRL]]></run>
                <run>Æ&#10;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontsize='12'>Average Monthly Order Value</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontsize='12'><![CDATA[(<[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]>)]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Avg. Order Value per Month (Map)" maxwidth="300" maxheight="200" filter="<[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]>">]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='8' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[Latitude (generated)]</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{64FF89A3-81AF-45BC-8C74-484D6258D5E8}' />
    </worksheet>
    <worksheet name='Avg. Order Value per Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Measure Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Orders&quot;'>
              <calculation class='tableau' formula='&quot;Number of Orders&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Measure Selection Filter' datatype='string' name='[Calculation_1337850604370006016]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[order_total]' derivation='Avg' name='[avg:order_total:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1337850604370006016]' derivation='None' name='[none:Calculation_1337850604370006016:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Order Total' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[order_total]' role='measure' type='quantitative' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_1337850604370006016:nk]'>
            <groupfilter expression='[Calculation_1337850604370006016] = &quot;Avg. Order Value&quot;' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Calculation_1337850604370006016:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_1337850604370006016:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' scope='cols' value='Purchase Month' />
            <encoding attr='space' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' field-type='quantitative' major-origin='#2017-01-01 00:00:00#' major-spacing='3.0' major-units='months' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]' scope='rows' value='Avg. Order Value (BRL)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]' value='*' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]' value='' />
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='*MMM YYYY' />
            <format attr='text-orientation' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='-90' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</cols>
      </table>
      <simple-id uuid='{9AB6D58F-312F-468F-BFAD-361607806A34}' />
    </worksheet>
    <worksheet name='Avg. Order Value per Month (Map)'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[order_total]' derivation='Avg' name='[avg:order_total:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Order Total' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[order_total]' role='measure' type='quantitative' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[Tooltip (Customer State)]'>
            <groupfilter function='level-members' level='[customer_state]' user:ui-action-filter='[Action - Avg. Sales per Month]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[Tooltip (Customer State)]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' scope='cols' value='Purchase Month' />
            <encoding attr='space' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' field-type='quantitative' major-origin='#2017-01-01 00:00:00#' major-spacing='3.0' major-units='months' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]' scope='rows' value='Avg. Order Value (BRL)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]' value='*' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='-90' />
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]' value='' />
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='*MMM YYYY' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</cols>
      </table>
      <simple-id uuid='{C613061B-713A-46A6-A67C-AA1F6F37BB42}' />
    </worksheet>
    <worksheet name='Avg. Shipping and Delivery Times by Review Score'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Review Score Label' datatype='string' name='[Calculation_2613776671693606914]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([review_score])&#10;THEN &apos;No Rating&apos;&#10;ELSE STR([review_score])&#10;END' />
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[days_to_deliver]' derivation='Avg' name='[avg:days_to_deliver:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_to_ship]' derivation='Avg' name='[avg:days_to_ship:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Avg' caption='Days To Deliver' datatype='integer' name='[days_to_deliver]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Days To Ship' datatype='integer' name='[days_to_ship]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2613776671693606914]' derivation='None' name='[none:Calculation_2613776671693606914:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Review Score' datatype='integer' datatype-customized='true' name='[review_score]' role='measure' type='quantitative' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]&quot;</bucket>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_ship:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]' included-values='in-range' />
          <manual-sort column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;5&quot;</bucket>
              <bucket>&quot;4&quot;</bucket>
              <bucket>&quot;3&quot;</bucket>
              <bucket>&quot;2&quot;</bucket>
              <bucket>&quot;1&quot;</bucket>
              <bucket>&quot;Unrated&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_ship:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_ship:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]' field-type='quantitative' major-origin='0.0' major-spacing='3.0' scope='cols' type='space' />
            <format attr='height' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]' value='52' />
            <format attr='height' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_ship:qk]' value='52' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_ship:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='width' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]' value='44' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' id='legend-color' value='bold' />
            <format attr='col-width' field='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' value='140' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
                <format attr='mark-color' value='#f28e2b' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' />
              <text column='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Review Score:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Avg. Days To Deliver:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4e79a7' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_ship:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' />
              <text column='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_ship:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Review Score:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Avg. Days To Ship:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_ship:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_ship:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#edc948' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]</rows>
        <cols>([federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk] + [federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_ship:qk])</cols>
      </table>
      <simple-id uuid='{DB96E256-6624-4C22-AAE8-4C422E4BD6C7}' />
    </worksheet>
    <worksheet name='Carrier vs. Customer Delivery Delays'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[review_score]' derivation='Avg' name='[avg:review_score:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Carrier Delivery Delay Days' datatype='integer' name='[carrier_delivery_delay_days]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Customer Delivery Delay Days' datatype='integer' name='[customer_delivery_delay_days]' role='measure' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_delivery_delay_days]' derivation='None' name='[none:carrier_delivery_delay_days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_delivery_delay_days]' derivation='None' name='[none:customer_delivery_delay_days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Review Score' datatype='integer' datatype-customized='true' name='[review_score]' role='measure' type='quantitative' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:carrier_delivery_delay_days:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_delivery_delay_days:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_delivery_delay_days:qk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:carrier_delivery_delay_days:qk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_delivery_delay_days:qk]' field-type='quantitative' max='100' min='-100' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:carrier_delivery_delay_days:qk]' field-type='quantitative' max='100' min='-100' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:carrier_delivery_delay_days:qk]' scope='cols' value='Carrier Delivery Delay (in days)' />
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_delivery_delay_days:qk]' scope='rows' value='Customer Delivery Delay (in days)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:review_score:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='2.5' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:review_score:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
            <format attr='stroke-size' value='3' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:review_score:qk]' id='legend-color' value='center' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:review_score:qk]' value='Avg. Review Score'>
              <formatted-text>
                <run>Avg. Review Score</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:review_score:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Carrier Delivery Delay Days:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:carrier_delivery_delay_days:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Customer Delivery Delay Days:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_delivery_delay_days:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Avg. Review Score:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[avg:review_score:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.53773480653762817' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_delivery_delay_days:qk]</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[none:carrier_delivery_delay_days:qk]</cols>
      </table>
      <simple-id uuid='{3C50C12E-2041-4ECC-98A8-CA38E8351F8A}' />
    </worksheet>
    <worksheet name='Delivery Times by Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Same/Different State' datatype='string' name='[Calculation_4933341587080986626]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [customer_state] = [seller_state]&#10;THEN &apos;Same State&apos;&#10;ELSE &apos;Different State&apos;&#10;END' />
              <aliases>
                <alias key='&quot;Different State&quot;' value='Out-of-State' />
                <alias key='&quot;Same State&quot;' value='In-State' />
              </aliases>
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[days_to_deliver]' derivation='Avg' name='[avg:days_to_deliver:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Avg' caption='Days To Deliver' datatype='integer' name='[days_to_deliver]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4933341587080986626]' derivation='None' name='[none:Calculation_4933341587080986626:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column caption='Seller State' datatype='string' name='[seller_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]' scope='rows' value='Days To Deliver' />
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' scope='cols' value='Purchase Month' />
            <encoding attr='space' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' field-type='quantitative' major-origin='#2017-01-01 00:00:00#' major-spacing='3.0' major-units='months' scope='cols' type='space' />
            <format attr='height' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='85' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='*MMM YYYY' />
            <format attr='text-orientation' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='-90' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_4933341587080986626:nk]' value='160' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='Month of Purchase'>
              <formatted-text>
                <run>Month of Purchase</run>
              </formatted-text>
            </format>
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='quick-filter-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='center' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_4933341587080986626:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</cols>
      </table>
      <simple-id uuid='{953CC637-3E07-46AB-A0CC-5B265C1354B3}' />
    </worksheet>
    <worksheet name='Distribution of Payment Types'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Order Ratio' datatype='real' default-format='p0.00%' name='[Calculation_2775976627048591361]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([order_id]) / TOTAL(COUNT([order_id]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[payment_value]' derivation='Avg' name='[avg:payment_value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[payment_type]' derivation='Count' name='[cnt:payment_type:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[payment_type]' derivation='None' name='[none:payment_type:nk]' pivot='key' type='nominal' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column caption='Payment Type' datatype='string' name='[payment_type]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Payment Value' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[payment_value]' role='measure' type='quantitative' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2775976627048591361]' derivation='User' name='[usr:Calculation_2775976627048591361:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:payment_type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:payment_type:nk]' member='&quot;boleto&quot;' />
              <groupfilter function='member' level='[none:payment_type:nk]' member='&quot;credit_card&quot;' />
              <groupfilter function='member' level='[none:payment_type:nk]' member='&quot;debit_card&quot;' />
              <groupfilter function='member' level='[none:payment_type:nk]' member='&quot;voucher&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:payment_type:nk]' direction='DESC' using='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:payment_type:qk]' />
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:payment_type:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_2775976627048591361:qk:1]' scope='cols' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:payment_value:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:payment_value:qk]' />
              <text column='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' />
              <tooltip column='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' />
              <tooltip column='[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_2775976627048591361:qk:1]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Payment Type:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:payment_type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Order Count:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>% of Orders:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_2775976627048591361:qk:1]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Avg. Payment Value:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[avg:payment_value:qk]> BRL]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]</run>
                <run>&gt; orders</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9230387210845947' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[none:payment_type:nk]</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_2775976627048591361:qk:1]</cols>
      </table>
      <simple-id uuid='{89585178-B11C-43BA-9B6F-35BCB26254A0}' />
    </worksheet>
    <worksheet name='KPI (Deliveries)'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='On-Time Delivery Rate' datatype='real' default-format='p0.00%' name='[Calculation_701717154163355651]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF [customer_delivery_delay_days] &lt;= 0 THEN 1 ELSE 0 END) &#10;/ &#10;COUNT([order_id])' />
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[days_to_deliver]' derivation='Avg' name='[avg:days_to_deliver:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_to_ship]' derivation='Avg' name='[avg:days_to_ship:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Customer Delivery Delay Days' datatype='integer' name='[customer_delivery_delay_days]' role='measure' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Avg' caption='Days To Deliver' datatype='integer' name='[days_to_deliver]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Days To Ship' datatype='integer' name='[days_to_ship]' role='measure' type='quantitative' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_701717154163355651]' derivation='User' name='[usr:Calculation_701717154163355651:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_ship:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_701717154163355651:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_ship:qk]&quot;</bucket>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:days_to_deliver:qk]&quot;</bucket>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_701717154163355651:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' value='210' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' value='36' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' value='11' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0cckfq11h3u2vr13412m603g6zra].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='18'>&lt;</run>
                <run fontsize='18'>[federated.0cckfq11h3u2vr13412m603g6zra].[Multiple Values]</run>
                <run fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EC9E88C1-BF10-43C8-A794-AF543AE4405B}' />
    </worksheet>
    <worksheet name='KPI (Reviews)'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Fulfilled Order Rate' datatype='real' default-format='p0.00%' name='[Calculation_784822641041629184]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='SUM(&#10;    IF [order_status] = &quot;delivered&quot;&#10;    THEN 1&#10;    ELSE 0&#10;    END&#10;)&#10;/&#10;COUNT([order_id])' />
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[review_score]' derivation='Avg' name='[avg:review_score:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column caption='Order Status' datatype='string' name='[order_status]' role='dimension' type='nominal' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Review Score' datatype='integer' datatype-customized='true' name='[review_score]' role='measure' type='quantitative' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_784822641041629184]' derivation='User' name='[usr:Calculation_784822641041629184:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:review_score:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_784822641041629184:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:review_score:qk]&quot;</bucket>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_784822641041629184:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' value='210' />
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:review_score:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' value='11' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0cckfq11h3u2vr13412m603g6zra].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='18'>&lt;</run>
                <run fontsize='18'>[federated.0cckfq11h3u2vr13412m603g6zra].[Multiple Values]</run>
                <run fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2906B24E-3CF8-4B94-81A9-8EDCE958A1FF}' />
    </worksheet>
    <worksheet name='KPI (Sales)'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Fulfilled Order Rate' datatype='real' default-format='p0.00%' name='[Calculation_784822641041629184]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='SUM(&#10;    IF [order_status] = &quot;delivered&quot;&#10;    THEN 1&#10;    ELSE 0&#10;    END&#10;)&#10;/&#10;COUNT([order_id])' />
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[order_total]' derivation='Avg' name='[avg:order_total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[review_score]' derivation='Avg' name='[avg:review_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column caption='Order Status' datatype='string' name='[order_status]' role='dimension' type='nominal' />
            <column caption='Order Total' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[order_total]' role='measure' type='quantitative' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Review Score' datatype='integer' datatype-customized='true' name='[review_score]' role='measure' type='quantitative' />
            <column-instance column='[order_total]' derivation='Sum' name='[sum:order_total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_784822641041629184]' derivation='User' name='[usr:Calculation_784822641041629184:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]&quot;</bucket>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]&quot;</bucket>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]&quot;</bucket>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:review_score:qk]&quot;</bucket>
              <bucket>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_784822641041629184:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' value='210' />
            <format attr='height' value='37' />
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:review_score:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' value='28' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' value='13' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0cckfq11h3u2vr13412m603g6zra].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='20'>&lt;</run>
                <run fontsize='20'>[federated.0cckfq11h3u2vr13412m603g6zra].[Multiple Values]</run>
                <run fontsize='20'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{AEB8FA37-EF3E-47FE-A88D-0EE1E834F334}' />
    </worksheet>
    <worksheet name='Number of Orders per Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Measure Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Orders&quot;'>
              <calculation class='tableau' formula='&quot;Number of Orders&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Measure Selection Filter' datatype='string' name='[Calculation_1337850604370006016]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1337850604370006016]' derivation='None' name='[none:Calculation_1337850604370006016:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_1337850604370006016:nk]'>
            <groupfilter expression='[Parameters].[Parameter 1] = &quot;Number of Orders&quot;' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Calculation_1337850604370006016:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_1337850604370006016:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' scope='cols' value='Purchase Month' />
            <encoding attr='space' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' field-type='quantitative' major-origin='#2017-01-01 00:00:00#' major-spacing='3.0' major-units='months' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' scope='rows' value='Number of Orders' />
            <format attr='height' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='86' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='*MMM YYYY' />
            <format attr='text-orientation' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='-90' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</cols>
      </table>
      <simple-id uuid='{1CF794E2-8691-4AF4-926A-35626D1759CD}' />
    </worksheet>
    <worksheet name='Order Count by Number of Credit Card Installments'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>Order Count by Number of</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontsize='14'>Credit Card Installments</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[avg_installment_value]' derivation='Avg' name='[avg:avg_installment_value:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Installment Value' datatype='real' name='[avg_installment_value]' role='measure' type='quantitative' />
            <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[num_installments]' derivation='None' name='[none:num_installments:qk]' pivot='key' type='quantitative' />
            <column-instance column='[payment_type]' derivation='None' name='[none:payment_type:nk]' pivot='key' type='nominal' />
            <column caption='Num Installments' datatype='integer' name='[num_installments]' role='measure' type='quantitative' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column caption='Payment Type' datatype='string' name='[payment_type]' role='dimension' type='nominal' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:num_installments:qk]' included-values='in-range'>
            <min>1</min>
            <max>24</max>
          </filter>
          <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:payment_type:nk]'>
            <groupfilter function='level-members' level='[none:payment_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:payment_type:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:num_installments:qk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:num_installments:qk]' scope='cols' value='Number of Installments' />
            <encoding attr='space' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:num_installments:qk]' field-type='quantitative' major-origin='1' major-spacing='2' min='0' range-type='fixedmin' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' scope='rows' value='Number of Orders' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:avg_installment_value:qk]' max='100.0' min='0.0' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:avg_installment_value:qk]' />
              <tooltip column='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Num Installments:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:num_installments:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Avg. Installment Value:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[avg:avg_installment_value:qk]> BRL]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Order Count:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[none:num_installments:qk]</cols>
      </table>
      <simple-id uuid='{976CAFFB-45C7-42D8-AEAD-CF2C700E1865}' />
    </worksheet>
    <worksheet name='Product Categories by Total Quantity Sold'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[price_per_unit]' derivation='Avg' name='[avg:price_per_unit:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[product_category]' derivation='None' name='[none:product_category:nk]' pivot='key' type='nominal' />
            <column caption='Price Per Unit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[price_per_unit]' role='measure' type='quantitative' />
            <column caption='Product Category' datatype='string' name='[product_category]' role='dimension' type='nominal' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column caption='Qty' datatype='integer' name='[qty]' role='measure' type='quantitative' />
            <column-instance column='[qty]' derivation='Sum' name='[sum:qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:qty:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[sum:qty:qk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:qty:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:price_per_unit:qk]' max='500.0' min='0.0' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:total_price:qk]' />
              <size column='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:qty:qk]' />
              <tooltip column='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:price_per_unit:qk]' />
              <text column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:product_category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Product Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:product_category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Qty:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[sum:qty:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Total Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[sum:total_price:qk]> BRL]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Avg. Price Per Unit:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[avg:price_per_unit:qk]> BRL]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='off' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BEE5B002-96C4-4AA8-939D-6C3D8FA0C9CF}' />
    </worksheet>
    <worksheet name='Review Score Distributions by Order Status'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Review Score Label' datatype='string' name='[Calculation_2613776671693606914]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([review_score])&#10;THEN &apos;No Rating&apos;&#10;ELSE STR([review_score])&#10;END' />
            </column>
            <column caption='Order Ratio' datatype='real' default-format='p0.00%' name='[Calculation_2775976627048591361]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([order_id]) / TOTAL(COUNT([order_id]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Order Status (Grouped)' datatype='string' name='[Calculation_5772348124256980992]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [order_status] IN (&apos;delivered&apos;, &apos;canceled&apos;, &apos;unavailable&apos;)&#10;THEN [order_status]&#10;ELSE &apos;in progress&apos;&#10;END' />
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_2613776671693606914]' derivation='None' name='[none:Calculation_2613776671693606914:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5772348124256980992]' derivation='None' name='[none:Calculation_5772348124256980992:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column caption='Order Status' datatype='string' name='[order_status]' role='dimension' type='nominal' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Review Score' datatype='integer' datatype-customized='true' name='[review_score]' role='measure' type='quantitative' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2775976627048591361]' derivation='User' name='[usr:Calculation_2775976627048591361:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;No Rating&quot;</bucket>
              <bucket>&quot;1&quot;</bucket>
              <bucket>&quot;2&quot;</bucket>
              <bucket>&quot;3&quot;</bucket>
              <bucket>&quot;4&quot;</bucket>
              <bucket>&quot;5&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_5772348124256980992:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;delivered&quot;</bucket>
              <bucket>&quot;in progress&quot;</bucket>
              <bucket>&quot;canceled&quot;</bucket>
              <bucket>&quot;unavailable&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_2775976627048591361:qk:8]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]' />
              <tooltip column='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Order Status:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_5772348124256980992:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Review Score:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Total Orders:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>% of </run>
                <run fontcolor='#757575' italic='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_5772348124256980992:nk]>]]></run>
                <run fontcolor='#757575'> orders:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_2775976627048591361:qk:8]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_5772348124256980992:nk]</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_2775976627048591361:qk:8]</cols>
      </table>
      <simple-id uuid='{56E7A401-D6F8-4D85-BFFA-A017D0EAADD5}' />
    </worksheet>
    <worksheet name='Review Score Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Review Score Label' datatype='string' name='[Calculation_2613776671693606914]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([review_score])&#10;THEN &apos;No Rating&apos;&#10;ELSE STR([review_score])&#10;END' />
            </column>
            <column caption='Order Ratio' datatype='real' default-format='p0.00%' name='[Calculation_2775976627048591361]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([order_id]) / TOTAL(COUNT([order_id]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_2613776671693606914]' derivation='None' name='[none:Calculation_2613776671693606914:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Review Score' datatype='integer' datatype-customized='true' name='[review_score]' role='measure' type='quantitative' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2775976627048591361]' derivation='User' name='[usr:Calculation_2775976627048591361:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;1&quot;</bucket>
              <bucket>&quot;2&quot;</bucket>
              <bucket>&quot;3&quot;</bucket>
              <bucket>&quot;4&quot;</bucket>
              <bucket>&quot;5&quot;</bucket>
              <bucket>&quot;No Rating&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]' value='100' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]' value='Review Score'>
              <formatted-text>
                <run fontsize='10'>Review Score</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]' />
              <wedge-size column='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' />
              <tooltip column='[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_2775976627048591361:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Review Score:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Order Count:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>% of Orders:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[usr:Calculation_2775976627048591361:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{58709FFF-299F-433D-9D35-8D7B1C8C4056}' />
    </worksheet>
    <worksheet name='Total Orders per Month by Review Score'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Review Score Label' datatype='string' name='[Calculation_2613776671693606914]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([review_score])&#10;THEN &apos;No Rating&apos;&#10;ELSE STR([review_score])&#10;END' />
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_2613776671693606914]' derivation='None' name='[none:Calculation_2613776671693606914:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Review Score' datatype='integer' datatype-customized='true' name='[review_score]' role='measure' type='quantitative' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <natural-sort column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]' direction='ASC' />
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' scope='cols' value='Purchase Month' />
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' scope='rows' value='Number of Orders' />
            <encoding attr='space' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' field-type='quantitative' major-origin='#2017-01-01 00:00:00#' major-spacing='3.0' major-units='months' scope='cols' type='space' />
            <format attr='height' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='87' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='*MMM YYYY' />
            <format attr='text-orientation' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='-90' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Review Score:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Purchase Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Total Orders:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</cols>
      </table>
      <simple-id uuid='{B8537218-E385-4678-BC6D-FD26CB10940A}' />
    </worksheet>
    <worksheet name='Total Sales by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Measure Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Orders&quot;'>
              <calculation class='tableau' formula='&quot;Number of Orders&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Measure Selection Filter' datatype='string' name='[Calculation_1337850604370006016]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Customer Country' datatype='string' name='[Calculation_784822641048932354]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='&quot;Brazil&quot;' />
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1337850604370006016]' derivation='None' name='[none:Calculation_1337850604370006016:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_784822641048932354]' derivation='None' name='[none:Calculation_784822641048932354:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column caption='Order Total' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[order_total]' role='measure' type='quantitative' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column-instance column='[order_total]' derivation='Sum' name='[sum:order_total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_1337850604370006016:nk]'>
            <groupfilter expression='[Parameters].[Parameter 1] = &quot;Total Sales&quot;' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Calculation_1337850604370006016:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_1337850604370006016:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='500000.0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]' max='5000000.0' min='10000.0' palette='tableau-map-temperatur' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]' />
              <tooltip column='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' />
              <text column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]' />
              <lod column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_784822641048932354:nk]' />
              <lod column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]' />
              <lod column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]' />
              <geometry column='[federated.0cckfq11h3u2vr13412m603g6zra].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Customer State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Order Count:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Total Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]> BRL]]></run>
                <run>Æ&#10;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontsize='12'>Total Monthly Sales</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontsize='12'><![CDATA[(<[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]>)]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Total Sales per Month (Map)" maxwidth="300" maxheight="200" filter="<[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]>">]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='8' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[Latitude (generated)]</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AE2850A9-38D4-4706-93E7-52BA13935C15}' />
    </worksheet>
    <worksheet name='Total Sales per Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Measure Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Orders&quot;'>
              <calculation class='tableau' formula='&quot;Number of Orders&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Measure Selection Filter' datatype='string' name='[Calculation_1337850604370006016]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1337850604370006016]' derivation='None' name='[none:Calculation_1337850604370006016:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Order Total' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[order_total]' role='measure' type='quantitative' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column-instance column='[order_total]' derivation='Sum' name='[sum:order_total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_1337850604370006016:nk]'>
            <groupfilter expression='[Calculation_1337850604370006016] = &quot;Total Sales&quot;' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Calculation_1337850604370006016:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_1337850604370006016:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]' scope='rows' value='Sales (BRL)' />
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' scope='cols' value='Purchase Month' />
            <encoding attr='space' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' field-type='quantitative' major-origin='#2017-01-01 00:00:00#' major-spacing='3.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]' value='*' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]' value='*#,##0,&quot;K&quot;' />
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='*MMM YYYY' />
            <format attr='text-orientation' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='-90' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</cols>
      </table>
      <simple-id uuid='{ABC200AE-6660-4870-A48F-81EBF60459DB}' />
    </worksheet>
    <worksheet name='Total Sales per Month (Map)'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
          </datasources>
          <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
            <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[customer_state]' />
              <aliases>
                <alias key='&quot;AC&quot;' value='Acre' />
                <alias key='&quot;AL&quot;' value='Alagoas' />
                <alias key='&quot;AM&quot;' value='Amazonas' />
                <alias key='&quot;AP&quot;' value='Amapá' />
                <alias key='&quot;BA&quot;' value='Bahia' />
                <alias key='&quot;CE&quot;' value='Ceará' />
                <alias key='&quot;DF&quot;' value='Distrito Federal' />
                <alias key='&quot;ES&quot;' value='Espírito Santo' />
                <alias key='&quot;GO&quot;' value='Goiás' />
                <alias key='&quot;MA&quot;' value='Maranhão' />
                <alias key='&quot;MG&quot;' value='Minas Gerais' />
                <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
                <alias key='&quot;MT&quot;' value='Mato Grosso' />
                <alias key='&quot;PA&quot;' value='Pará' />
                <alias key='&quot;PB&quot;' value='Paraíba' />
                <alias key='&quot;PE&quot;' value='Pernambuco' />
                <alias key='&quot;PI&quot;' value='Piauí' />
                <alias key='&quot;PR&quot;' value='Paraná' />
                <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
                <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
                <alias key='&quot;RO&quot;' value='Rondônia' />
                <alias key='&quot;RR&quot;' value='Roraima' />
                <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
                <alias key='&quot;SC&quot;' value='Santa Catarina' />
                <alias key='&quot;SE&quot;' value='Sergipe' />
                <alias key='&quot;SP&quot;' value='São Paulo' />
                <alias key='&quot;TO&quot;' value='Tocantins' />
              </aliases>
            </column>
            <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
            <column caption='Order Total' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[order_total]' role='measure' type='quantitative' />
            <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
            <column-instance column='[order_total]' derivation='Sum' name='[sum:order_total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cckfq11h3u2vr13412m603g6zra].[Tooltip (Customer State)]'>
            <groupfilter function='level-members' level='[customer_state]' user:ui-action-filter='[Action - Total Sales per Month (Map)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[Tooltip (Customer State)]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]</column>
            <column>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]' scope='rows' value='Sales (BRL)' />
            <format attr='title' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' scope='cols' value='Purchase Month' />
            <encoding attr='space' class='0' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' field-type='quantitative' major-origin='#2017-01-01 00:00:00#' major-spacing='3.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]' value='*' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]' value='*#,##0,&quot;K&quot;' />
            <format attr='text-orientation' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='-90' />
            <format attr='text-format' field='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' value='*MMM YYYY' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]</rows>
        <cols>[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]</cols>
      </table>
      <simple-id uuid='{81F33E76-54BA-4A7F-ACAB-3E7C22062A44}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='text-orientation' id='dash-text_97' value='0' />
          <format attr='text-orientation' id='dash-text_98' value='-90' />
          <format attr='vertical-align' id='dash-text_99' value='auto' />
          <format attr='text-align' id='dash-text_99' value='right' />
        </style-rule>
        <_.fcp.IndividualControlFormatting.true...style-rule element='parameter-ctrl'>
          <_.fcp.IndividualControlFormatting.true...format attr='background-color' field='[Parameters].[Parameter 1]' value='#00000000' />
        </_.fcp.IndividualControlFormatting.true...style-rule>
        <_.fcp.IndividualControlFormatting.true...style-rule element='parameter-ctrl-title'>
          <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[Parameters].[Parameter 1]' value='center' />
        </_.fcp.IndividualControlFormatting.true...style-rule>
      </style>
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='orders+' name='federated.0cckfq11h3u2vr13412m603g6zra' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Measure Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Orders&quot;'>
          <calculation class='tableau' formula='&quot;Number of Orders&quot;' />
          <members>
            <member value='&quot;Number of Orders&quot;' />
            <member value='&quot;Total Sales&quot;' />
            <member value='&quot;Avg. Order Value&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0cckfq11h3u2vr13412m603g6zra'>
        <column caption='Customer State Name' datatype='string' name='[Customer State (copy)_2090655429956329472]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='tableau' formula='[customer_state]' />
          <aliases>
            <alias key='&quot;AC&quot;' value='Acre' />
            <alias key='&quot;AL&quot;' value='Alagoas' />
            <alias key='&quot;AM&quot;' value='Amazonas' />
            <alias key='&quot;AP&quot;' value='Amapá' />
            <alias key='&quot;BA&quot;' value='Bahia' />
            <alias key='&quot;CE&quot;' value='Ceará' />
            <alias key='&quot;DF&quot;' value='Distrito Federal' />
            <alias key='&quot;ES&quot;' value='Espírito Santo' />
            <alias key='&quot;GO&quot;' value='Goiás' />
            <alias key='&quot;MA&quot;' value='Maranhão' />
            <alias key='&quot;MG&quot;' value='Minas Gerais' />
            <alias key='&quot;MS&quot;' value='Mato Grosso do Sul' />
            <alias key='&quot;MT&quot;' value='Mato Grosso' />
            <alias key='&quot;PA&quot;' value='Pará' />
            <alias key='&quot;PB&quot;' value='Paraíba' />
            <alias key='&quot;PE&quot;' value='Pernambuco' />
            <alias key='&quot;PI&quot;' value='Piauí' />
            <alias key='&quot;PR&quot;' value='Paraná' />
            <alias key='&quot;RJ&quot;' value='Rio de Janeiro' />
            <alias key='&quot;RN&quot;' value='Rio Grande do Norte' />
            <alias key='&quot;RO&quot;' value='Rondônia' />
            <alias key='&quot;RR&quot;' value='Roraima' />
            <alias key='&quot;RS&quot;' value='Rio Grande do Sul' />
            <alias key='&quot;SC&quot;' value='Santa Catarina' />
            <alias key='&quot;SE&quot;' value='Sergipe' />
            <alias key='&quot;SP&quot;' value='São Paulo' />
            <alias key='&quot;TO&quot;' value='Tocantins' />
          </aliases>
        </column>
        <column-instance column='[Customer State (copy)_2090655429956329472]' derivation='None' name='[none:Customer State (copy)_2090655429956329472:nk]' pivot='key' type='nominal' />
        <column caption='Purchase Date' datatype='datetime' name='[purchased_on]' role='dimension' type='ordinal' />
        <column-instance column='[purchased_on]' derivation='Month-Trunc' name='[tmn:purchased_on:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='45112' id='62' name='Product Categories by Total Quantity Sold' w='23563' x='500' y='6999'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-top' value='8' />
              <format attr='margin-right' value='8' />
              <format attr='margin-bottom' value='8' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='6889' id='95' name='Delivery Times by Month' param='[federated.0cckfq11h3u2vr13412m603g6zra].[tmn:purchased_on:qk]' show-null-ctrls='false' show-reldate-picker='false' type-v2='filter' values='database' w='25000' x='49063' y='6999'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='8' />
              <format attr='margin-left' value='4' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='10111' id='1' name='KPI (Sales)' show-title='false' w='38251' x='35812' y='13888'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-top' value='8' />
              <format attr='margin-right' value='8' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='6110' id='15' type-v2='text' w='50000' x='24063' y='889'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#000000' fontsize='24'>Brazilian E-Commerce Dashboard</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-right' value='8' />
              <format attr='margin-bottom' value='8' />
              <format attr='margin-left' value='8' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='10111' id='32' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11749' x='24063' y='13888'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-top' value='8' />
              <format attr='margin-left' value='8' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='32889' id='33' param='vert' type-v2='layout-flow' w='25000' x='24063' y='28888'>
            <zone h='32667' id='46' name='Number of Orders per Month' show-title='false' w='25000' x='24063' y='28888'>
              <layout-cache minheight='186' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='margin-top' value='0' />
                <format attr='margin-bottom' value='8' />
                <format attr='margin-left' value='8' />
              </zone-style>
            </zone>
            <zone h='111' id='47' name='Total Sales per Month' show-title='false' w='25000' x='24063' y='61555'>
              <layout-cache has-max-size-h='true' maxheight='1' minheight='1' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='margin-top' value='0' />
                <format attr='margin-bottom' value='8' />
                <format attr='margin-left' value='8' />
              </zone-style>
            </zone>
            <zone h='111' id='48' name='Avg. Order Value per Month' show-title='false' w='25000' x='24063' y='61666'>
              <layout-cache has-max-size-h='true' maxheight='1' minheight='1' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='margin-top' value='0' />
                <format attr='margin-bottom' value='8' />
                <format attr='margin-left' value='8' />
              </zone-style>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
            </zone-style>
          </zone>
          <zone h='32889' id='34' param='vert' type-v2='layout-flow' w='25000' x='49063' y='28888'>
            <zone h='32667' id='9' name='# of Orders by State/ZIP Code' show-title='false' w='25000' x='49063' y='28888'>
              <layout-cache minheight='201' minwidth='202' type-h='scalable' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='margin-top' value='0' />
                <format attr='margin-right' value='8' />
                <format attr='margin-bottom' value='8' />
              </zone-style>
            </zone>
            <zone h='111' id='4' name='Total Sales by State' show-title='false' w='25000' x='49063' y='61555'>
              <layout-cache has-max-size-h='true' maxheight='1' minheight='1' minwidth='202' type-h='scalable' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='margin-top' value='0' />
                <format attr='margin-right' value='8' />
                <format attr='margin-bottom' value='8' />
              </zone-style>
            </zone>
            <zone h='111' id='27' name='Avg. Order Value by State' show-title='false' w='25000' x='49063' y='61666'>
              <layout-cache has-max-size-h='true' maxheight='1' minheight='1' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='margin-top' value='0' />
                <format attr='margin-right' value='8' />
                <format attr='margin-bottom' value='8' />
              </zone-style>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='4889' id='63' type-v2='text' w='25000' x='24063' y='23999'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#333333' fontsize='14'>&lt;</run>
              <run bold='true' fontalignment='1' fontcolor='#333333' fontsize='14'>[Parameters].[Parameter 1]</run>
              <run bold='true' fontalignment='1' fontcolor='#333333' fontsize='14'>&gt; by Month</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-bottom' value='0' />
              <format attr='margin-left' value='8' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='9556' id='64' name='KPI (Deliveries)' show-title='false' w='31625' x='24063' y='61777'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-top' value='8' />
              <format attr='margin-left' value='8' />
            </zone-style>
          </zone>
          <zone h='9000' id='65' name='KPI (Reviews)' show-title='false' w='19562' x='79938' y='889'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='17778' id='71' name='Review Score Distributions by Order Status' w='19061' x='74063' y='9889'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-left' value='8' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='34110' id='72' name='Total Orders per Month by Review Score' w='25437' x='74063' y='27667'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-bottom' value='4' />
              <format attr='margin-left' value='8' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='37334' id='80' name='Carrier vs. Customer Delivery Delays' w='25437' x='74063' y='61777'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-top' value='4' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='27778' id='82' name='Delivery Times by Month' w='31625' x='24063' y='71333'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-left' value='8' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='37334' id='84' name='Avg. Shipping and Delivery Times by Review Score' w='18375' x='55688' y='61777'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-top' value='8' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='17778' id='70' name='Review Score Pie Chart' pane-specification-id='0' param='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]' type-v2='color' w='6376' x='93124' y='9889'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='padding-top' value='8' />
              <format attr='padding-bottom' value='0' />
              <format attr='padding-left' value='4' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='6889' id='92' mode='dropdown' name='# of Orders by State/ZIP Code' param='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Customer State (copy)_2090655429956329472:nk]' type-v2='filter' values='cascading' w='25000' x='24063' y='6999'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='8' />
              <format attr='margin-right' value='4' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='4889' id='96' type-v2='text' w='25000' x='49063' y='23999'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#333333' fontsize='14'>&lt;</run>
              <run bold='true' fontalignment='1' fontcolor='#333333' fontsize='14'>[Parameters].[Parameter 1]</run>
              <run bold='true' fontalignment='1' fontcolor='#333333' fontsize='14'>&gt; by State</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-right' value='8' />
              <format attr='margin-bottom' value='0' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='9000' id='66' name='Review Score Pie Chart' show-title='false' w='5875' x='74063' y='889'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-left' value='8' />
              <format attr='padding' value='4' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='19222' id='76' name='Distribution of Payment Types' w='23563' x='500' y='52111'>
            <layout-cache fixed-size-h='151' type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-top' value='8' />
              <format attr='margin-right' value='8' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='27778' id='73' name='Order Count by Number of Credit Card Installments' w='23563' x='500' y='71333'>
            <layout-cache minheight='222' type-h='scalable' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-right' value='8' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='6110' id='99' type-v2='text' w='23563' x='500' y='889'>
            <formatted-text>
              <run fontalignment='0' fontsize='8'>Data Source: </run>
              <run fontalignment='0' fontsize='8' italic='true'>Brazilian E-Commerce Public Dataset by Olist</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run auto-url='true' fontalignment='0' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.kaggle.com/datasets/olistbr/brazilian-ecommerce&amp;quot;'>https://www.kaggle.com/datasets/olistbr/brazilian-ecommerce</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-top' value='4' />
              <format attr='margin-right' value='8' />
              <format attr='margin-bottom' value='8' />
              <format attr='padding' value='4' />
              <format attr='padding-left' value='4' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='2778' id='85' leg-item-layout='horz' leg-item-order='reversed' name='Avg. Shipping and Delivery Times by Review Score' pane-specification-id='3' param='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' show-title='false' type-v2='color' w='17688' x='56188' y='96000' />
        <zone h='4667' id='83' leg-item-order='reversed' name='Delivery Times by Month' pane-specification-id='1' param='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_4933341587080986626:nk]' show-title='false' type-v2='color' w='6250' x='49188' y='71889'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='padding' value='0' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='2444' id='97' type-v2='text' w='7125' x='85250' y='90000'>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontsize='11'>← Early </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='11'> Late →</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='13667' id='98' type-v2='text' w='1313' x='78125' y='73222'>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontsize='11'>← Early </run>
            <run bold='true' fontcolor='#f28e2b' fontsize='11'> Late →</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{8965EC4C-6FC8-46A6-ADE5-58D900DF43E5}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='# of Orders by State/ZIP Code'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Avg. Order Value by State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg. Order Value per Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg. Shipping and Delivery Times by Review Score'>
          <zoom type='entire-view' />
          <highlight field='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Carrier vs. Customer Delivery Delays'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Delivery Times by Month'>
          <zoom type='entire-view' />
          <highlight field='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_4933341587080986626:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Distribution of Payment Types' />
        <viewpoint name='KPI (Deliveries)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI (Reviews)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI (Sales)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of Orders per Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Order Count by Number of Credit Card Installments'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Product Categories by Total Quantity Sold'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Review Score Distributions by Order Status' />
        <viewpoint name='Review Score Pie Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Orders per Month by Review Score'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Sales by State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Sales per Month'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true'>
        <device name='Nexus 9, 10' type='Tablet' />
      </device-preview>
      <simple-id uuid='{EC4A1652-5130-4326-8B71-8821CE33786C}' />
    </window>
    <window class='worksheet' name='KPI (Sales)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{26028A0A-12AD-4CFB-AF13-5B22C45EA38E}' />
    </window>
    <window class='worksheet' name='KPI (Reviews)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]</field>
                  <field>[federated.0cckfq11h3u2vr13412m603g6zra].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.0cckfq11h3u2vr13412m603g6zra].[avg:review_score:qk]&quot;</value>
                <value>4.089647106681582</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{E2A4A45A-E402-4F5A-8A37-F5809B9251C1}' />
    </window>
    <window class='worksheet' name='KPI (Deliveries)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8706E703-317F-48EC-8A3C-B3D6E5B26302}' />
    </window>
    <window class='worksheet' name='# of Orders by State/ZIP Code'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0cckfq11h3u2vr13412m603g6zra].[cnt:order_id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{B4BCC8DF-F439-4660-A139-6D0ABF38DAE8}' />
    </window>
    <window class='worksheet' name='Total Sales by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:order_total:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{E63B8C64-6C7B-4196-B41B-74E09A63D730}' />
    </window>
    <window class='worksheet' name='Avg. Order Value by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:order_total:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{DFBE23E7-B8C7-4E3D-A674-B84BE3148323}' />
    </window>
    <window class='worksheet' name='Number of Orders per Month'>
      <cards>
        <edge name='left'>
          <strip size='174'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3A8D7C4A-9074-4105-B7C7-4C401B36FBD8}' />
    </window>
    <window class='worksheet' name='Total Sales per Month'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{259839BD-1105-4BF9-88FC-12271C29D792}' />
    </window>
    <window class='worksheet' name='Avg. Order Value per Month'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6F5F25B8-81FC-497A-8CCE-C7EF84E7CC70}' />
    </window>
    <window class='worksheet' name='# of Orders per Month (Map)'>
      <cards>
        <edge name='left'>
          <strip size='174'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D0A444E5-4D20-4C4D-ABDA-E1A47080A886}' />
    </window>
    <window class='worksheet' name='Total Sales per Month (Map)'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7F7EECDF-82FE-4CF6-8945-626FB7981331}' />
    </window>
    <window class='worksheet' name='Avg. Order Value per Month (Map)'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9235C9EA-52CD-4207-B6C1-6B139A375C10}' />
    </window>
    <window class='worksheet' name='Total Orders per Month by Review Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{00561A70-F31F-46DC-809C-25BE1607EA54}' />
    </window>
    <window class='worksheet' name='Review Score Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8314EA3E-6244-43C8-9C49-6637EDDA927B}' />
    </window>
    <window class='worksheet' name='Review Score Distributions by Order Status'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_2613776671693606914:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{691891AD-7DB6-40C4-8A5E-C4ADBCA68970}' />
    </window>
    <window class='worksheet' name='Avg. Shipping and Delivery Times by Review Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0cckfq11h3u2vr13412m603g6zra].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FEC2B9EF-EF96-48D2-9529-91301D9E7C1E}' />
    </window>
    <window class='worksheet' name='Delivery Times by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0cckfq11h3u2vr13412m603g6zra].[none:Calculation_4933341587080986626:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6969CD7E-F037-439B-A8F6-D7C8D0BA4B69}' />
    </window>
    <window class='worksheet' name='Carrier vs. Customer Delivery Delays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:review_score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_delivery_delay_days:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{15B7F350-62F5-4665-A6BC-4622C8B53162}' />
    </window>
    <window class='worksheet' name='Distribution of Payment Types'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:payment_value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1E76D028-6740-4C53-9719-CB6ED49AF61F}' />
    </window>
    <window class='worksheet' name='Order Count by Number of Credit Card Installments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0cckfq11h3u2vr13412m603g6zra].[none:customer_state:nk]' type='filter' values='cascading' />
            <card pane-specification-id='11' param='[federated.0cckfq11h3u2vr13412m603g6zra].[avg:avg_installment_value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E429D7C9-C096-4667-9A60-5C17A43436DB}' />
    </window>
    <window class='worksheet' name='Product Categories by Total Quantity Sold'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cckfq11h3u2vr13412m603g6zra].[sum:total_price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{254A3C9C-BFCD-4BED-A3A2-8E1FA098DBF6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='# of Orders by State/ZIP Code' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy913NkWXbu99vHpE8kvEehAFQB5avad89M9/jhpRgiJ0TyBqVQMKQX6UV/
      BP8N3QdFSA8KkQxdDs2lhpw7tqe7p03ZLg9T8N6mzzxm6+Fgn0qgEkAikSiguvKLQBQKmXlc
      nrPW2t9a61tCSimpo4466qjjtYN20gdQRx111FHHyaDuAOqoo446XlPUHUAdddRRx2sKY/cf
      XNfFsqyTOJY66qijjjpeIl5wAJZlkc/nCQQCJ3E8ddQIUkocx8F1XQB0XQdA0zSEEDXZ/vr6
      Ovl8nlgshuM4R95mNdB1HV3XsW27ovdLKRFCoOs6c3NzdHZ2IoRACIGqhzAMA9u2/f+HQiFc
      1/WvZenvLwtCCJ48ecLAwACTk5MMDg6Sz+cZHR31n9VgMMjg4CATExOcP38ey7KYnp6mo6OD
      0dFRTNNESolhGFy+fJlsNsvMzAznz5+nWCwyOTnJyMgI+XyemZkZBgcH+eqrr4hEIv61u3bt
      Gvfv3+fKlSvkcjmePHmCaZoUi0XOnTtHJBLxr7H6TLk6E8MwWFlZ8V/v7Ozccc0Pc10ikQiB
      QKAm9/XrhhccAEAgECAcDr/sY6mjhpBS7jBStTL8Cq7r0t7ejm3bZDKZE3MAQgjfYFcK13XR
      dR3TNFlcXGRwcJCNjQ10XScUCpHJZGhsbKRYLGKaJrqu8+zZM7LZLKZp0tnZSSQSwXEc39FW
      ariUszkMlEEVQvD48WMsyyIcDlMsFikWi1y/fh3DMHAcB03TWF9fRwiB67qsr6/T1dVFNpvl
      /fffxzAMisUigUCAL774gsHBQUKhEMVikdXVVS5fvoxt26ytrXHhwgVSqRTXr18nGo2Sz+cJ
      BoOsrKwghODp06d0dXUxNDTE7373OyzLesHg73VdXNelpaWF9fV10uk06+vrJBKJQzsAdU1D
      oRCaVme0D4uyDqCOVx8qyj0uaJqGYRgIIYhGo9i2XZOouDRyLPd3BWUUS6PNw8CyLDo6Onj6
      9Cm3bt0iFAr5RjSZTBKNRgHIZDKEQiG6u7vp6OggmUzy7NkzotEo4XCYXC5Hd3d3RYarGuOv
      IKWkt7eX3/3ud1y4cAHXdYnFYsRiMW7dukUgEKChoYHBwUGCwaC/v2AwSCwWo6mpiZs3bxIM
      BgmHwzQ1NZFMJpmammJ2dpaRkREcx+GTTz7xnaqu6/T19XH37l3C4TCapvHGG2/4UX5TUxMT
      ExOsrKzgOM6O+22/70V9b4FAgI6ODjKZzJGMd6FQIBwO11mLKiB29wEUCgVc162vAOqoCK7r
      Yts2yWSSYrFYVQQHextHtb3S19TfNE0jGAxSLBYrdj6lEaqmaZim6RsfXdd9Q6beUygU/NVC
      oVDwjeP6+joAuVyOdDrNuXPnsCxrXwN/FOMvpcQ0TdLp9I7Vh67r5HI5pJREIhEMw/CPWQiB
      ZVkYhuEfq5TSf7YLhYK/DxXhF4tFwuGwTxUJIXybEIvFCIVCJJNJNE1DSkkmk8EwDP9nr/yh
      EMKnaRzHQQjBwsICa2trRCIRBgYGqqaAdF0nGAwSjUZ3BD51Suhg1B1AHUeGKhzY2tqq6iGu
      JvpTBsWyrKpWHqWOoJrIXBkZwzCYnJxE13V6e3sPRUVVc6wKu8+5nIOsFru/D9M0MU0T13V9
      +3CYfSiKZm5ujo2NDTKZDLFYjMbGRtra2vwcTjXfoxDCP17lnIPBIMFg0HdgdeyNugOooyZw
      XZdisUgulyObzVb8uWqMr0pmHsXYqtu+lF+vBirifPToEX19fcTj8ZrnQ8rx6sfdwF96TUqv
      VTUwTZNUKsXm5iZdXV2Ypulvr5qAYa/jLP03FAr5K6K6E9gb9axJHTWBpmkEAoFjr8ZQEd9R
      I21lOEqrf6qBMsbDw8NMT0+Ty+WOxGfvd+1UYv9lqLfs3tdRjXQul8NxHCKRCLZtUywW/aRx
      rY5V0WKu65LL5chkMkd2MN901B1AHTXDy4q0ahlhl1II1ULx5WfPnmVsbOyFiqv9roumaX6O
      IRAIEAqFCAQCLyRUX0bUXw612K/ruvT19VEsFmtWLKCwV9WRlNLPz9SdwN6oVwHVUVPUkgNX
      D/duOuI4ePajQJWCRqNROjs7GR0d5fz5837CU3HeKjErhCCfzyOEYGtri2KxCMD8/DyhUAgh
      BM3NzbS1tfnn+iobMHUdpJS+czyu89ldNKAS4qrE9zgr415F1B1AHTXDYbvI9+Pey0We4XAY
      y7JeMIrVrDzKOZejwnEc2traSKfTTExM0NTUxPLyMpqmUSgU/Ioj5cRs26ahoYFgMIht21y5
      csX//eHDhyQSCf/9rzIMw2BiYoJwOPxSGuhK7wspJdls1qcN4/F4vV+gBHUHUEfNoGma31R0
      FOxFO5T+fXcVTzX7OCrKOQ/XdRkaGvKrXTo7O2lqavKjYMuyfIpHdRSrY1GJdNM0CQaDpNPp
      qpujTgtM02R9fZ1cLsfly5ePVCpcLVReoFAoEAwG/ST0caHWTZfHiboDqKOmME2z4iX+YQ14
      ad36URO3R8V+fQuWZZFIJGhsbERKucMhqtr8vVZKmqaRz+fJ5XKEQqFX2viDF/3PzMwwPDxM
      sVh8aR3j5RoHVXLYcRyKxaJfNqppmv9TikKh4OcsVJ5G9YjsDnLU/aD6IZQTqOUK8zhQdwB1
      1ByqaaoSVNPJe9ga9N2fKd1nNQ9nJQ91tYZOCMHExIQv0fAqCzMKIbBtm76+PsbHxxkZGTlW
      /n8vlO4vn8+Tz+dfOE5VDKCaA4UQZDKZHZ9VFV77JcZVUj8QCPgr4tIVwWlzBnUHUMeJ4zBO
      YD/jsd9DVvq5w3LAtSgXrRSKFlL5jlcV6po5juOvhJ4+fcrIyMixV+XsbopT+zJNk9nZWVpa
      Wnb0Iriu62snAX50v9vQl75nLyegXl9eXiaVSnH+/HnfGSgnc5qcQD0bUkdNoKiPdDp96BzA
      fhHVQR2uux+mWj9cu8s5j3NJX1qS+rLVRo8TlmXR1NREPB7n2bNnx87Bl6JU9qNYLLK5uUk0
      Gn0h/7L73ip3TypncVAvhqZpbGxsEI1GyWQyfj6oUCiQz+f9ZtvT8B3XHUAdNYGqbKll1FrJ
      srn0PeUiv6M+aC+LrlDHPjMzQywWe+UrVXZfN8uy6OnpAWBhYWFHw2ApBVOrfe/+3k3TZGlp
      ib6+vj3v0dJ+i2q/d8MwSCaT5HI5GhsbcRwH27ZJp9Nsbm6ytbXF5uYmm5ub5HK5sgqqLxOv
      9l1Wx6mCUgg9KvYy6nu9bzdOsnGqWhiGwdTUlN9Qdtp6HWoB27Y5e/YsW1tbbG1tEQ6HCYfD
      xGIxvxFOKZnWEko3anFxkXg8fmz3jWEY5PN5JicnOXfu3Asy4apfxLZt8vk8yWSSVCrl61md
      xP1azwHUUTOUKjEeBuUiv4Oiwd3OoTTZ+6oY/t3HqTTyc7ncCR1RbXBQf8fFixd5+uQJn33y
      axriEXRdp7BxG0PX6bv039F3pr9mMhGlx6JpGg8ePODGjRs1d7AqOTw6OsrVq1eB/Zsi1X2q
      FFqj0ajfJ/IycwR1B1BHzVCulO4gHEWEbffvtTL+5SqHao1yx6q44W9C89deUFHwhYsXmZu8
      yWD0FokoxPtcpIQ/PP07IpG/pqm57UhGWlXzqIqffD6PYRj09/cfmXsvVxAghODZs2f09/cD
      B3fEl+Z6VMXcSTiBugOooybQNM2vpqi0YqbahGo59cdaRv67t1tr7NXkpmSRX2aS9CSg7pP2
      7gvIwiNaGp4b5POdW0xOj9PU3Fb19nVdR9M0pqamyGQyfvXOmTNnSCQSFZco7wUl16G0jTRN
      82mcpqamA7evZClUX4KUkkKhgJSShoYG4OU1k9UdQB01RaUUUGnjjOI/D1vfX2r4a2389/p/
      rbBXCWEtcignjf0a/HRd3x4cUyS/NU5L+87XVzZ1mno7jxSl67rO6Ogo7e3tDAwM+ANoyjVw
      HRYqn2AYBoFAgGw263d4NzQ0VHQfqgS1ai5TdFehUGBjY4NwOEw0Gn0pukWv/t1Wx6lCJRTQ
      bnG3anBQeehht1VLQ79XaeF+7yn99zTViVeLcn0XXmQueHj/KzbmvuDNsws0Rt2Sz8BGxuBS
      a/uRroEQ3ihMpcFUy3LL0molVfkG3jmm0+mKtqGMvZprUQo1Y1tKb3Kb6io+LtQdQB01Q6U5
      gHIUS2mN/V4VEWrm62GGsO/+rIoAVcJ6v/1Vg0pWI+UchNIGMk3zpcklHDcUrRUMBnEdB93Q
      mZ6eIjf/r3w4ksPcZX22MmAFL9PQ0OBTLNVcCymlL6kRiURqdDYeFD1XOn9AGWtFB1WCUu6/
      3GvKCajpZsflBOoOoI6a4TBRW+kNrR7WyclJisUi/f39NDQ0vPDwb2xsMDs7y9WrV/1a7koM
      t67r/tjGrq4un4PO5/PMzs5y7ty5mjiASo3/XvSPGpZimuYrXwaqqJJ8Ps/o6BOePviUns4E
      MjvBW+fyLxh/gNlVg0Jqlk9//ffEW4a4eOmaP6f5MHBdl42NDa5evXpkymc3HMfxKR/lANS9
      VE0RxF6Q0lMxzefzxGIxIpEIuVwOIURNnVrdAdRRMyiOtRK5hlJYlsVnn33G2bNn6ezs9DXc
      wYvY1Vg/y7L8qEnXdZ87DQQCLzR+qWHxKtK3LMuPKEv14Ts7O3cMUFfbq8To7K7xrjTyLwfH
      cWhpaWFra4vW1tYD910NVM5FHUstnIz6Pkuvt2ma/nf225//J9qia/zocoZoSGIaYOxBbV88
      Y3O+exnbXWY1eZ+vPp3hg+/+lHw+X7GDNk2TlZUVWlpajiWBb9s2qVTqhW2rexBqVzyg7meV
      IP63f/k/iUV03vvwL2lsaqkJVVh3AHXUBFJK8vn8CwJaB31GCMHs7Cytra0MDg76Btp1Xe7c
      uUMmk0HXda5fv+7f8GoQ+/j4OFJKzpw5Q3NzM19//TW6rpNKpRgYGGBxcRHbtvnhD3+IlJL5
      +XmWlpYQQvDWW2/5pXs3btxgcXGR8fFxXNeltbWVS5cuVVTHrX4v/bfa62dZlu+wjmMFYBgG
      k8/GmZ1+zHsf/IhgKLxjUMthNHoUz25bFhLpC6i5roNVLHLzi1+zvLTE1a5lBjtyVBIY6xro
      AQgCjmvzcDlzaB0mXddZXV3176XjQDmJCMXXKxqoVvsuTQ7nk7O807fFH37j8uFP/ppoNHZk
      J1B3AHXUBMqAVfKgllb+gEfttLe34ziOT8/Mzc0hhOD73/8+s7OzPHz4kMHBQcB7yO/fv89H
      H31EOBzmF7/4BcPDwwB8+9vf5t69e0gp+fDDD/n000/9UsD29nauXbvGvXv3GB8fZ2hoiM3N
      TaSUdHV10dPTQzKZ5NNPP+XSpUv7nmup0a9FtKcooPHxcTo6Oo68vXLwGo4ixOQEj27+PUm7
      D6eYQtds+gauMHTuApZl+YnHQqHgrxhs2/aradQ8g9mZKWYe/RM5O0Sk6RLp1AZuYRlhLfOd
      S1vEuiR6lYxIwADNWmRxYZ7unt6KAwsVQCQSCVKpVHU7rwJK72hqaoqzZ8/WxAFIKZFIdE3n
      8eMHxINbxMMu55ruc/fWJ3zwnZ/UHUAdpwOlnO9+RlGVvpV2u4bDYV9qV5XHpdNpmpqaKBaL
      NDY28vjxY//9amiKqqKIRqMUi0VfX0aV6AE7yiqDwaD/oM7MzOxIRo+NjbG2tkYgEHhBK6Zc
      xFfrjmPXdX39/3LbrUVzmm3btHd0Y1n/LWujf8t7vU8wDRAC7k+PMR/+72lsaiOdSpFMbtF/
      doC52Rlsx6atrR1dN9B1naXFeR7c/CdiIYfrZxYImZKtzDP0uCQakhi6R/McxTYFTcl759e4
      /fhTWlr/tOKoWpVVKk7+ZQmuOY5DPB5nZWWlJtuTUuJKryhgZXmBQPZT3rziYBrQ3eLyxe0x
      3n7v+0eWzqg7gDpqAkUJxONx0um0H82XQj2Quwe7dHd3c+fOHbq6uohEIhQKBRKJBEtLS/T3
      97O2tkYsFvONn+Lo8/k8wWCQXC7nG/z9oBKCS0tLvkQxeMZ3enqaDz74ACEEa2trO46vnFE+
      rgaxxsZGVldXaWlp8YeR1KJsVsGyLHp6z7I49w5F+7ckoi5CwNX+JF89+hmzWphMJo10i6Q2
      v83s6MckIgVW2n7CW+98CyEESwvPeKNvlqa4JLxtf0KB2hpaIaAhKnELSxQLBcxAsCIqyLIs
      Ojs7GR8f59y5czVPAu8F13V92ee1tTV/nnO10teKVtva2mDq0T/y7sAGpuGVyiJgeWmOLz7/
      Pd/58AdHWgXof/M3f/M3pX9QnOA3vRuxjtpD1Uibponrujt47NLqiN0PRDQaxTAM7t+/z+Tk
      pN+yPz8/z+joKFtbW34OoFAo0NbWRjAY5P79+0xNTTE4OEhjYyOWZdHe3k42m8U0TRoaGtja
      2qKlpQXHcVheXmZiYgLDMLh06RKO45DNZunq6iKXy/H06VNSqRSmadLb21uR9G8tIaUkkUjw
      6NEjbNumubn5WHhsKaGnb4g7j5Osrq3SnnAImtDXnKavaZPh7iznuwuI/BjXBgt0NrssLCyS
      sRO0tnWSTueZm/qaoW73SFH+QXgyo2HHv0//2UFs267IAbiuS0NDA+vr634J6sv8/jo7O3n2
      7BmGYdDY2Fi9AxLeivXmH/6dkbanNERA277WmhDcGyuSz9lcvfHe0Xom5K6roxonwuFw1Rut
      4/WFGrenVA4V9iqPU9G1qsxRN7OigtTtadu2T+coo1jakFPaQ6A+5ziO/5ndxkNxxUJ4Q0uU
      /k7p/mslSHYYqLGDExMTNDc3E4lEjoXGUJOrlhbnmX74Mz66uOAbmHIo2vDZaBeB+Hny6zc5
      01pgsMuuuQOQUmI58GgmyJrzBh989Kf+arJS2k3lL549e8aVK1deCEaOE6oU9PHjxwwPD/v3
      12FhmiZ3b/2WXvM3dDV7z5EQnhPQhGBlE+4sXOZP//J/O1LpaZ0CqqNmUA9oNput+IFTD3Rp
      AhieT18qfeBLJzUplOviLX3gShu/9tq3cha1TuxWA+V0EokEGxsbNDY2vjDCsBZQ17a7p4+N
      je8yt/p39LXt7WgCBrw7uEA6t0Rrj4srj8bxl4OUEkd6zmZsuZU/+rM/oVAsIDjcjlRCvb+/
      n7GxsR2jKKtpIjzsvoPBIO3t7aRSKV/b5zDQNI1UKklh9VM6L1n+dRbbP+DlWDTt6FIR9XkA
      ddQMruv6E8FqVQdd+nupYS7tHK50W/slb0+D8VewbZumpiZ/wtpxdYGqyq3VpQk6mg5eZYSD
      0Nbo0T7VVvfsezwl/xqGgRkIeDScPLxWlG3bNDY2kkqlWFtbY2tri3Q6fSzzBnZDCEEymfQ6
      oKtYvWmaxt1bH/PucBZT96J+XYCuPb/fXQmaZhz5Xq07gDpqAtUHkM/nj4WyKBf1H4X73G3w
      VdPNSRt/wJcxtizr2DlsIQT5onbIGPtokFJiuxLL8X4cV30H3uuWDaFo/IVZvYfdh5SSkZER
      //fV1VUsyzpWbR3TNFlfX8cwDOLx+KG/u0gkwuz0BB3mbaKh7bxamXs9ZEIxnzzyvVGngOo4
      MlQkmc1ma2b8Szn7SipwqnEGpcd6Ggw/eJHv5uYmS0tLDAwM1LSpqByEELS2tZLKQvPh2YpD
      w3ElK1mbyc0CGcslYmr0NgTojBromkBKeDoXYWD4A5ztCppqHX0+nycQCBCNRgkGgywsLOA4
      DoFA4Niqg3RdZ3p6muvXrx96H4FAgOWlBTZn/p03+veXlI6EQNobbG1t0dzcXPU1qjuAOo4M
      VdpZbcnbblRyM+/ezzdBQTMYDLKyssLKygojIyMANZ2xXA5SShKNzaytmzQ3HO++AOZSFr+f
      TXN7KUvGdgnrgmttEb57JkZPQwDpwlJuiKs9/TuUNqnytnJd15cT0TSNyclJLl26dGwOIBAI
      YNt2VRpGQghGR59wsXmB4AFFmEJAd2OG2dlpmpubqz7eOgVUx5GgSiWrif73cxaH5eRPSwRf
      LUKhEEtLS+RyOa5fvw4cPFWqFrBtm6GhETYDf8zk8sG9FEdBpuhwezHL72bTzOUttmyHhbzN
      7+fT3F3KkbVc0jlBJNbsD0QxDRNN1GY4SktLC5lMBsMwjk1rX9M0QqHQoT9nGAbBYBAnN0ck
      WNm93NNSYHZm+kgrxLoDqKNqKN48n88f+iY8yLBXo69zUKL3oH2dNKamptja2mJ0dBTDMF7a
      cBjHcRgavsr4SjvOMTbO5mzJbKpIynLQNIFuaGi6IGO7zGcs8rZLKgONjS1IV/qGX/WXVDsl
      S1GUXV1dhEIhP7dyFJQ7Dk3T2Nzc9KeDHQZqddJkTBCrsAI/EpTI3CSFI1SJ1R1AHYeCMq5K
      Fte2bbLZ7JGN6O5u12qM+O4ftTqp5DMnDSklb775JtevX8e2bVZXVwkGgy+F2rJtm4aGBHqo
      k1T2ePflGfPyr2lCgNipWqo+o1Dtd6UonwsXLnD79u0dPSdlj2UPZ6Oay9T83tL3GIbB3Nwc
      fX19h6LuhBDYlsWTu//OjYFMRcJ54FVldYSeMDr6sOrrUncAdRwIZUyLxSLJZJJkMkk6nWZz
      c5ONjY0DqYr9HjQV3e1Xp38cOE3GH7wGTMdxKBQKDA8PUygUuH//vj9/9riRyWTIZzcIHSML
      FDYEA4kArUED15HYtot0JO1hg6HGIBFT0NIAyY2lso77qN9VNpvFMAyam5tZW1vbU+0gHA6T
      zWawrCLBYJBAIEAoFPJGQGYy3Lt7k1/94mcszE8TDof9EZG2bZNOp0kkEhU7AMMwvP3lMiTM
      6YqNv0J/h8PY04dVF1/Uk8B1HAgppd/dWzoFqZIHsly5pvrsXqWce227ljrrp8Xw74ZKqHd2
      dmLbNjMzM3R3dx97V7KUkoKb4NZEI2fbtgBBviDJWxrnuh0CNVCGCZsaV9rDZGyXeys5NvMO
      zWGdKy1hrraFiBgawoSYfMDmxvskGpsPfb8dBMuyOHv2LLdv3+aNN954oUs4Go2ytbXJV5/8
      HQE9S9uZ72EYYbKZDQq5Tcg/ojW2QW+Hw2dfjDL17ALdfSP095/l0aNHO2Son0tkPy8vVh3n
      ap+maZJKpXj89acMtx8+MR0JQnd8lqWlebq7+w79+boURB0HwrIstra2Ds1tVmLgd9dk72f8
      lQM4rCHYvY+XpRB5FASDQQzD4OHDhwwMDADHe9xKgmJ5eZH52UksyyIcTTA99YzvnP2c9sba
      7MdxJWs5h7lUkazlEgvo9MZNmsPPKZknMybLfMRb734fwK8uq1WFWTQaZXp6mng8Tjwe39Fp
      HYlE+K///k90hL5guM9iatGgUIRYRBI0pd8IB/BkCtbWNdYLPVy68QPiDU10dXX5arXFYpHb
      X/6aQDDIhcvvYlkWszMT9J8dJhKJIITwnM0ffslAw0Mu9lXHv82tCqaLP+KHf/Tn/jlWivoK
      oI4DYdt2zYw/PF/K77Uy2G9be6li1mp18LKhht+UXpNgMMj83AyLiws0t7QD+FLbxwXLsrAs
      i0SiiY6OLr9KJpdN83BSY7FBcvls9fr+CromaI8atEf3Nj0jfRbm/K+5+VWYt95+H6gdHagm
      v3V0dHD37l0uXbq0QzY6l8uhyRztjQ66BoPde9ObXa0wOS/48w9m+Xr6Z4wvXCGTHiYeb2Bj
      Y52l8X/jzYEVLEfw1S9+SSSk09lk8Yt/6Sbeco5QKAKZe3xvaJbI4QuHfHQ0Se59/YiNjXWS
      W5uc6R+ouNmtvgKo40Dk83k2NzcrrvTZi/Yp/Xf3eyox/gdhLwdV6jxOE/0TCoV8HjqbzaLr
      OplMhs3NdeYf/wOFosXI23/NwsICFy9eBI4vL6Lrul8emctlmZ58ysSj3zPYkcS1U6xuQtCE
      gS5JJARNsf23t7Lp8P99VqAhIggHBR9cDXD7qcXSuouhw7legyuDBtoeCnRL6/Ag+d/w/gff
      OnLNvkoqK6OomsHW19d9yfFgMOgLBBYKee7f+mcutt8hvE9J5voWfPlA56ff9rSR0jnB4kaA
      rBUgZBQZ6ioQUBLO25ASMnlB0fZWQ7EwhANH01XKFuD3D2NYgUtMPhvjJ//hp1x/492Knpv6
      CqCOPaGMpaZpGIZRkQOoxPir91Wzrf2O9aDXTovhV9A0jd/82ptm1t3Tz8z0JI9u/4yW8Bpv
      DuYZmw9j2zaxWMwfFn8c56AM5J2bn7C0tEhDcJO28Cw/vlb09f4dF+6MCW4+FVi24Oqg5HyP
      3NNw2Q4MdOl853qQu2NFJuZtHBd++HaQaFjw75/nOd9n+NvfjYKtEYl4YxaP6gACgQCrq8tM
      P7vL+nqSUFDn0rUPiccbAJfJyQkELo1NrTQ3NROJROnqf5+nT+5z/fzeydxoBAzD0+XRNUhE
      JYloAdjZxVt6jYSAeGTv77BgSSxLEot4uYJ80XMauu4J8pV7HkIB+N7VND//6msGO1ye3v8t
      wxeuEg6HD3x+6g6gjrIoLfeUUmIYxo5BLuVQCe2z377Kbe8wx3uSUHLWqqLpIF0hTdOYn5tD
      S3/B4sNPePL4HWR2lO9emPON4nB3ji9Hf0NT5xusrq76MwpqDSEEU5PjRAu/5D9cLmwbml3n
      p8Fbw5K3hiGTl/zzp4L+DvbtWF3dcnk0aTE57/D2xQArGxbPth2Bmhq2F0xDkF5bQNO0Q0s3
      qJ4B9ZPP53hw8//lzYEZAq2Qyho8+fIORTtCPFzE0B0iIYtnUzp3swZGuJdQpJX+5v2vddD0
      DPbSOsQiYOrs6dAqxVePijx8ZvM//UkEx4X/61+z9Hfp5AqSj24EaEm8eNE04TmHj67k+H9+
      20C80eD+13c503+W9vaOfemgugOoY0/kcjl/dONRug3LGcJS6eejGP/TQOko2mRi/DGulWJp
      9mvijT2Ywfi+n8vlcqQ3C7zzTo5c8bdEAjsNSDgIN7oe8JuxIGeHrhxbOaimaafIeZEAACAA
      SURBVKTSGVqCxQMlCABc16s+OSgfULAkXz6yuHjWoKtV4+EzWFp3mV91+I8/DGPoe59PW8Ih
      sniLP/w+wOXr3yEYDO3pBIQQfsWNqi5Lbm0x+ewxwVCUfGqWiz2LRMOeY2tJ2LQkwHaK/jkI
      AYPdLq60sOxRXHdsX/pHYeQs/OGxp2GkaRA24dqgpKulOlpnMyUZ7jOYXXboatXpbtX4o/eC
      PJm2mZhzyjoAhcYY/NkHabYy47A6wa3xCGbjG7z77T8mkSifxa87gDr2hEoMQmUR9mFr+ctR
      QgcZuVJa6rRA0zTGxp4STP4Xelpd3nnbJZVdoWAJ9hWxaYBgr2dMo6FyTtCLLDU8GiiTyRAO
      h2smEaGMphCQTS7TX2Glz+isF/0f5AB6WnWunjP59c0Cnc0ahiF4Y8RgaU3ns/tFvv9mkGCg
      /Pdt6PDuSJ6Vzd9y9/MN3vvuf/Tn/e5GKBQildzEsi1isQRfffkxduprzrQsU9wUdES86p1y
      +yiFULLLAahUfGiox2Wox/tdSlhYFfzhscbbw5K+tr0psnJIZlxcKeluM5hb8RzAZlpyd9Ti
      63Gbj24c3KTR1ezStb1yGend4snMx3x9r4vvfPi9su+vO4A69kQ4HPY11FXn72FRieOo1JiX
      i/ZPOvpXcB2HzibX19VvikPVCmYl0DVoDs4hhGRlZYWBgYEjOwBVaTQzM83Y0/tEgzZ94S9p
      TVR2vGc6BXdGBbbjDSkvh3hY0N+p0xjT+P6bQaYWbQa6dKIhjUuDGkKDdE7u6QDAM9BdLRLT
      uMdnv9H56Md/tYOaFEIQCASYnJxg/MHPaYmusLjVjCazfPvK8Ta1lYMQ0N0miYQcfndL4+IZ
      waV+uec12o07oxa5guThM4v1pMvbFwO4UmIYgj/+VpCWhsMFPUJAa8Ll67WZPd9TdwB17Akp
      JdPTntpgd3c3uVzOf/h2o1zkXglfXQtN/9OB4+vWDQeKCCFIpVI+xXHYcxdCEA6H/e/k2fhj
      tqb+AZEq0N8s6WtzKo5WW+Iu3S2Czx8JvnO1/HHEIhqxiGewGuMajfGd1vjyQOWdZS0Nkkvu
      XX7770ViTedINLZydmAAEOTzeR4/uMn1nhnamiQjzhxIKja6x4FEDH78vsuTKcE/fiZACvrb
      JTfO7e0MCkXJ+pbLn30YBgG//LLAetKlOa5xZfDwXXizKxAwBKGgRFqbe8pq1x1AHTtQGmHl
      83kuXLjA+Pg4o6Oj9Pb2YpomgUDAzw0cBUcZ6nK6jL8XbckaRPzlsFVoos0w0IWLbVkYhnEo
      rRlV3rm4MMOTh18hhEur+YR3zqewXS95eZivQQg41yP5L38Q2M7+ydxaQAjoaHQIB+6zkXrI
      8oTOveSfYheTrCyOEzY2aGrw6JbAKbBoQmznb4YlI/2SdBZuPtawXcEb52TZlYmuw7evBQiY
      3nPx7WsBNA3eu1LdMsZ14R9+L2hOhBi+cXnP5+wUXK46Tgtc1/UF3nK5HPl8Hk3TGBwcJJlM
      8vHHH9Pe3s7Q0NAOPlZVvhzGKB+Vwz9tDkBKyfSypwcTCUkaopAveNHgUdHfNMfTL/532htd
      vvr9ba69+xeEI9GyTkBVIiknrmkatm3z+We/xcjf462+FUBRVBCo8msImF7uYnYFznZWe2aV
      QwhIRCERdQkFXP7+d//Ij9+DGzeOf4bBURAOej/vXJL8/FOdwU6HUBn5fkMXtDU996SJmPfF
      xCPV7be7FS70wdyaTa6wN2VYdwCvOZTQW6FQ8PVmisWi336vhrU3NTXxgx/8YMe0qtKEbGmt
      fSXGea8l6UGfOY1wXZfzwxdYXWlkPZ9lamuL4tImUsJQ4hYDnZXTK+Uw0OlwtsNB0yBbGOPL
      z/4Pzl77K9ra2nwnYJqmp0Y5O8PC3ATxRDMjF64C8PTpI1r4mAvnK6vyqRQfXJb86rbGmXb3
      0CJmR4EuoLfdoa/99Et6KLQkJI1x90j3gSu9sZkSr/RTsDeFKiUUHcHKpsbFfaSv6w7gNYQy
      pLZtUywWyefz2Lbt88PluHvVId7Q0EAqleLhw4c+JaSaldR7KnUAu51AJZ3BpxGO4xCNxojH
      h/2VjaZpFItFPvmvK5xpnzwSTSLEc4omEoT3h5e5+fD/Rl74C9o7etB1HcuyeProNrmlf2Og
      Oc3GRoSJMZOFmYcU0tN8a9iqqfEHj7aQkuNMf5SF0AAOV2FzGnCuTzKxqNEYdw9NVblS4srS
      /3uXvVwlba4Av7lr8MUjeO+9N7l27cae2607gNcQruv6FI+K8GFvo1uqXmhZFn19faRSKVZW
      VnAch+npaX7wgx/4ejWH1fEv/f2ow95fNhT9Zds2gUAA0zTZ2NggGo0SCgUxwt247iTUkCcP
      mvCtkVW+ePq3TE2+Sa4gkYVluiJPeeecVyu/lDSYfvw1N7rvcub88cwUdlyv9n0PNYdjg66x
      wxi+KhjplzyZcvnlLZ0fv+VUHBTIEuPvSs/pagIQnmPQdj0vN5/qTC4FGDgT5/ob79PQkNhz
      23UH8BpCOQDV5XsYSCkpFAqEQiEGBgbQdZ22tjYeP35MQ0MD3d3dRxIte5Uif8CvrMnlciwv
      zTH17DFh5shbASLNF5mbX8Dug+OoSHz73AZb6V+i656ejDIojgPrW0WiYpTu5uMbKD8+J7h8
      9uV/V9p2e4WUR9PQOQkMn5HEow6/vKXxk7cPTwm5igLa4/WvxhtZl+e4+lYPwWCQzq6efbdX
      dwCvIVTnZDVDq0sjdMuysG2bRCKB4zhkMhlfEgHYsbJQnw+FQj5NVEo7vYrQNI10OsXHv/4X
      sNfpbU5zoWmTeFhSsASrycd8Z1geW2WKJp4nc0uh6/Dh5QxCHG+FTsGSNJyEARa16LA4GQgB
      +PTnIT6Hd8769rmrfIChCQTeynluVfB0qZ1sehQ3+wihaawODBCL7d2RXncAdfjYT5qh9PXS
      9ykDruahjo+PE4lEMAyD1tZW/z2KKllYWGB5eZmBgQEaGxspFAp+wvlVg5SSXC5Hwpjmo+vr
      O14LByWNsZNzbi+jDv5MOzydFZzrfrnfnVArAF56+qEmmFkW9LVVfs2EEGhIHAkgSRVdpraK
      pIsuMVOjvzFA3DR4uthKU3MzyY1JtlKSy2/+Ma2tbX5l38LCAm1trUSjz0vT6g6gjh2o1AmU
      vq5WAS0tLaysrGBZFouLixQKBYLBIJlMhmg0iuu6LC8vc/HiRWZnZxkbG+P8+fM0NDSQyWSO
      /+SOAZrQcGtJ8L9CaGuELx/XbntSwtwqLKzt/768Bd4yQL6SHqC9EVKpA2RCdkE5gZmkxT+M
      bvFgLUfWdokYGldbwvQH+hgY+gkL4/9KY1wn2vIu9+8/ZGHmMZFYgq3VRxQKRS699Vd861vf
      9rd7Yg5gr6EgdZwMSg17OSN/kMqnKiONxWLouk5LSwuO45BOp2lqaqJQKJBOpxkcHCQQCDA0
      NMTGxgZTU1NcvnyZUCi0o/T0VYHQNFz5ejoApQWULXjVSUdFtgC3RgXDvXLfstKwBfPrry4N
      NNAj+cXngqV16CjTE7AX0kWX386kubWSReoCzdTYsuA3M0Xe7G6iMHqHpek8AVNgOzcZ6sgx
      fMbGdQVLhuDBTBdNTU2+EKMQ4mQcgOJ/8/k8kUhkz6HgddQeymArI1vK6e82+PvRMkryuBSl
      ZaRKYz6RSCCEIBaL0d7ejhCCTCaDEIJEIoFt29y7d4+mpiY6OzsJhUJYluVv/7TTQ0KI19YB
      aBoM90nujcF7l46WkJUS7j/zBs4M9+2/raIFd5/JV9cDAFeGXB7OaLQ3VZYLkFKykXd4sJbD
      1cAwNCxHx9ZCOLpkanORsw2LNDS0EAlKmmNpEjGIhGBlQ+fWRA+6YXL/9q/I5zJcv/HWyTkA
      BcdxSCaTxGIxfzJSHccH1eSVzWaxbfsFp1uJ0T+MTHNpp6r6Xdd1v9KnUCjQ0dFBS0sLm5ub
      fPXVV7S1tREKhVhcXKSxsZGBgQGEED6PedoghMBxX08HADDUDf/ymUbRdo/UZ7CWhJVNwZ98
      UInqLLhS4Er5ypJvXa1w+wlspj0Z54MeKwnkbZe8IxFA0YZsUWA7eRyrSMayKLb8iLARxAgG
      CLR2kNI0fv90HFs2EAvc5q3hNIYhmJzS6O3rJxKJnowDUNGh0pQpjRzVQ66kauuoDZRBzuVy
      FQ3X2L0aqHSE40EopXdc1yWb9QZhh8Ph7aHkywghGB4exrIsHjx4QEdHB42NjcRiMf9+OS2r
      Al3XkaIG/McrCtOA9y5J7ozrvHeheupublVwbv+KxZ2QO0ctvooY7nf59V2ND69I2iqQ4o4F
      NLoiJrPLNg4u4ZAFUlIUktZAB2e7e7BXv6S3dZN0LshKqoFcwSQaN8jajXzyKEY43ED/2S5+
      /fP/RDQSOjkKyHVdDMPbvbUtcKWMlG3b/hjCOo4ORbnlcrkDp3pVur1aGWDlEMLhMNeuXWN+
      fp7h4WGKxSKGYfjCZ48ePaK/v5+WlhZs267JeRwVUkqCwSB9g2/zxZNprg0UCJqvXm36USAE
      tDZIPn8geWPI0wg6LFwXppc1fvjm4RyI8+pWEANwrhf6O12+fKDx1jlZtqRXQROCxqDOm+1R
      vpgqEorb4EKhILC2QoxcPIeZ+j3vXklvN+ZlgSz5ImylZ2kPCQp2CMdZpUWMc+myjeWcUBLY
      tm2y2SyxWIxoNEomk8FxHCKRCKFQaIeuTH0VcHQoh1ttg9ZhB71Ug1wuh2mauK7L3NwcfX19
      5HI52tvb/WBgamqKVCrF0NAQxWLxVKwCbNvm3MhV1ls6+fj2Lzjf/JCzna+4ZTokijZI4Q06
      38sB2LYn4VBuiMz9Z4L2RrficYqGDlcH4N6o4I0Lx9dn8TJgGhCLSubXIBHz7ufdnb0KYVND
      JqP8D5c15osZVjIOlgzQ3t1NKLXB1evpF7qyQwEINUs6miWeU3iOoHZCDsAwDOLxuC8iFgqF
      fHlhpaWiksSWZRGJRNB1ve4MjoBaCq8dV7eubdsMDQ3x4MEDpJS0t7eTz+cRQtDe3k5bWxs3
      b94EoL+/36ePThIql5FoauZb3/tL7t36FeGN39HRdPLO6WVASrg7LvjwqkMs/OLrroTFNbg7
      oZHJeZX7VwdcRs54rzsOLKwL3r9cudMUAq4OSP71c42VDYeettqcy0khaMLyJrQ3e4qnmpDo
      4sVndnpZQwN+OBIi7wTJF+Dz+0FS+RYGOpJVrb5OZK6eEMI3/kIIPzGopAlUBUg2m90z0lNR
      7asmHfCqYDfvf1B/QC2gvvu+vj7f4avkbzabxXEcrl+/TiqVQtd1AoGXPPJpDyjqUjcMzgxe
      Z2nDeOX56Upg2TCzIphf08pG9lJ64yPvTmic75X89DuS791weTorSGa2NW00GO5zeTojDnXN
      NA3iEUkq82oHha6U9HS42Jrk13eh4EgsV2K7lDAhXrL40bTgxrBL0NBIBHWWVwJEAwKsFTqb
      quujObHBqqoiZWtri1QqBUAmk/ETwoZhEI1G/bry3d5QRV6nIQp8FXCYASKw0wGUSwAfF9T3
      WioxrWBZFrquk0wmuX///qlbEUopWVmaIxE9mvzzq4KVLcF//p3G9SFJaxm9seVNmFzS+OGb
      LkPdEl2HlgT8+B3Jr24L8kV4MiP48rFGLHz43Mmb5yWLKzrjs+KVFIdTIm+6LunvdljLSCzH
      xXbBkc8F71wXfntX8MYFh2jJKuvKoMMP37b44IpVddf5iToAxf0rmKbpU0C6rhMMBgkEAmWH
      hyhDUU8U7w21qrIsq2b8/3GuuDRN84sAVlZWfE2h0n1rmkZnZ6c/1zYajZ6aAfGO4zBw7hLj
      K+3Yr04vW9XobJL8jz92GJ/3yjh348GkxoW+F+cGmwb0tkv+5Q+C6WXBn37LZaTv8PdUPAI/
      eNNhbUMwMVflSZwCbMf5hIKSzx9rWI6LU/KMOS6k8y/Ke6hHc7BH0rhPAnk/nOiTEwqFCIVC
      BAIBIpEI4XD4BX34vR5uTdOIx+MEAoFTFwmeBqjKn3Q6TSqV8strS/V7FPar79/dKHac0b+u
      60xNTZHNZmlrayt7TJZlcf78efL5PPfu3WNsbMwvIT1pOI5DKBTm/Bt/yb2pOK+wzl1F0DRo
      TcC7F1w+/lpjbrUymWZNwFvD8OcfSX70lkswUH3lVND0NImW1oTvdAsHVzm/AHVvv2w6WZ12
      NAxvXXDJFsBxntNhjusl2QOB4xH2O7HwWdM0QqHQjr8dptFI5Q7qKA+lzqki/704/L06gUs/
      87Lgui6ZTIbr16/7Qmu7YVkWruty48YNisUik5OTzM7O0t/f788xPkkpCV3X6es7y5M77WQL
      qbKJ0W8aWhPwo7dcbj4R5AqSoW7PoJu6xHH31ryp1e010CVZWBd8fEfQ2y5ZWNG5MeLQEK3M
      mCsqRr1b40WN/eOAEJ6ekS4EAV2jLSHZbNL4ty9hoEMQDcLCqqDoCD646h6LwN+JrgA0Tdvx
      s9vgvEqaMKcNysGq7l7Xdf3Iv5qyzuOMjtRKz4ugQziO408XKwfHcchms0gpGRkZoVgscufO
      HVZWVl4IKl42VOECTqbs8O9vKqIheOeC5M6Yhu1ANg+L64L+jpcTUb93UfKtixKroKELyUYZ
      SqocpJQ+5267XsTtuF5y9mVAE15prKFB0BBc6nf44TsusRispyU3Ljp867pNc8PRl5Oeo3v+
      HEsp62qg31SoFZJpmjVtmjouJxAOh1lYWKChoaHiGQGO45DL5RgcHETTND7++GOi0SiBQKCi
      bufjghACoUcoWserx3/aEA7CxX6vPDMUgFzRU+6shVDcQdA1r4TyjXMunz+C+VXobIHgPk5Y
      Rf6uBGf7dyG84W1CPtfZP04IIdCRaLpH+0gNQiY09Dic76183+q5VBSc6gdQAaDk+TQxIUBs
      zyM4HdmzPVCneI6Og1ZRpeW0JwUhBLlcjunpaTo6Og618lO0keM4XLt2jenpacLhk+NdhBBs
      bGxguktETnYxciK4dFby4TWXwW6XaAh+eUuneLgCtKohhJeXeHsE2uKCz+9rFK398xKK+nFK
      nICU7KCEjv+4BZoQ6JrA0LzfD923g3cOsuR371y8OQKWA5YjKTreisd2JamCW18BfJOh6uhP
      OwKBABMTE/T09FRd0ZPL5Xz6CCAYDOK67o6Zxy8Lc7NTdLecvFTFSaEp7v0MdLo8mNJeumin
      acCVAclAF3x8R8dy4Mo5h86W570HCmq4zPaI3e0/Hm3MgIq4BS8nj7Z7ZjB4KwCP1tp2AOoF
      CS4S24H1nF13AN9UHMeNdxyrBMMwWFxcRAhBT09P2cRvpVCd45ubm9i2TUNDA5qmvVTdIE3T
      WFtb52zH6VMufdnQdbg2eDKlUEJALAw/fttlKw23RjVuP/YooavnXNqbt6k6KdGEx8G7UiAA
      DeGtJqronldUi38c29s/TkdQ+lT6dl56eQzPCbgUne35K4CJoGBL0kWn7gC+ydA0jWAw+EIP
      QDUaS6paqJZOwDAM8vk8y8vLXL58mVwuV/X2lTDb0NAQa2tr5HI55ufnuXjxYs2Ot9LjsPJb
      hOrq5qcChmo+e1tStLyhM7+8pfHBNZemhhKuHFHye/XYTTcpSuY41wGl29a2B6VJwJbguC4F
      ezvX4Up0TaALRXfJ050DqONokFIeSVa71BjXugpI0zRc12VsbIwLFy74MiBHgWVZmKZJT08P
      ly9f9nMblZy/qkQ6alOZ4zho9vxrlfx9VRAwvUTx+5fg7hOD20801pPCXwFoApJpWNnwjKjt
      yn2rgRxXkrddcpZL0Xa3Z/aqzz5XKz3uLmUhhO8ENMEOQTgvwQ1F28VyJYXtfwVgalp9BfBN
      h5rOtdu47mUY94rya2n8lbTH2NgYvb29aJpWs2EvjuPgOA6BQADLskgmk4TD4X23b5qmf36m
      aVIsFnEcx59bYRgGruv6PQh7QQiBbVvozmpZbZw6Th5CQE+rpCnmcPOp4MmU4OIAWJZXtvro
      GTTG4fvvuAhUNP3is5K3XWa2ikwni+Rtl+aQQV9DgPaYgTLHL7ONRhl9Z7vKR9v+m8ptqMSw
      wHMKpi6IBeoO4BsLKSX5fH5PCYj9On+PsyJIzX148OABXV1dNDc317xkU9M0MpkMmqbR2tpK
      oVDANE1fFkOdn6ZpBAIBpJTcvXsXKSWNjY309/cTDAYRQrC1tcX09DStra10dXVRLBb31FVS
      4y7DgeK+M23rOBy82nXv91rx6ZEQXB2U3BwVPJ4QIGF2VZCIurx92cWV23QKL1I4jit5upbn
      9zNpRjfzOK4kHtC51hbhe/1xmsMGRsn3v1ui+TigrokhngdrhhBIXcN2HWxN4DhejsJxJYYm
      aAjpdQfwTcdug37YbmuoTZu8EIJAIMDq6irT09NcvHjx2Or1XdclGAxi2zaffPIJb7zxBpub
      m7iuSyKRIBwOYxgGmUyGmZkZ1tbWuHDhAvF4nGQyyZ07d4jH42SzWSKRCJcvX2ZqaooHDx4w
      MjJCPB6nUChg2/aOFYEQgrWVedoaX0FlslMIKaWvjum6XmRraIKA7v17VCSi8IMb3nd1d1xQ
      cFy+fcN9gbLZvafNvMMX8xnurWaxtkuI0jmXwmKG7pjJOz1RjO1nR0Xhh4Vyesr5HMbxqd4C
      RfA7usByPL7flhJXCiTeNaw7gG8wlKGzLItMJuPTPorWKBQKL/D8CvtJRBwGqiHNMAzm5ubI
      ZDJcvXp1my45vkoZx3G4cuUKm5ubPH361Hc2uVyObDaL67oUi0XOnTtHW1sb8XicXC5HPB7n
      zTffZHNzk1gsRiQSwbZtBgYGmJmZ4ZNPPuHMmTNEIhFaWlp8KWgpJbqus746T1/7N1wEqMbY
      3aikeGzbhYItyTsujisRCIKGV6dTTi//sFAflxIW1zX6ezwVV71ks+VKObOWy3LGxpISoQs0
      XcO1XbaKNqs5Gymfb6OaYywt64Tn9I1+iMa00gYzR2rbQ3NcdNdLAgsEuqg7gG8slAEPBAI+
      555Op9F1nWg0SrFY3LE6OI4kr67r6LpOPp9nYmICXdcZGhryefrjhBp639raSnt7u3+uQgif
      44/H41iWhWVZpNNppJRks1l0XaehoWGHYq2u6/T399Pa2oplWdy+fZt4PM6NGzfQNM2n2pLJ
      DRoHj/XUvlFQjUrOtga+i0dj6JrnAIqOS8H2KlkMTYDQMDQvitVrSK1Yjksk6JVsltbSl9uF
      53xKqKFtB+b3ExzROZXW9CuHuGN/FUJpDZmaILTNSWmud45BYzv5XfVR1vFKQEX8pRUuaphK
      OBwmm82+UH55GJqoFKVznDc2NtjY2CCdTtPQ0MDw8DBA1bLU1UDlQXYfo3pta2vrhc+UaiaV
      wnEcUqkUmqYRDof57ne/y9LSEr/61a949913CYVCHv9vpOsJ4EPA46RhI+9weynL+JbXs9EY
      0LnRHqE1YuBuNzIJ8Xy1UA6lFTuHqeGfWvTUNjuagZJy0L3QGDIYbg6xnLPYshxcVyIkdEcD
      9DUE0Y+4MpG7fleGX1ZRT+p1GUsMDUKGhu26ftexpO4AXhuo1YBlWaRSKYLBILquvyADcVjj
      ryJ9Jcmwvr5OJpMhGo3S0dFBf3+/b3RfpvHfC0ftClbUkWVZdHZ2kkwmsSyLUChENpumIbBZ
      oyN9PeBKSBYcfja6yc3VHM522C0dya2VHH9xvpHeeICIqXmUxXYd+3P65rmez47t7jFW8YX9
      u/BwWnDlXOX3RdgUvNUVwXIkTzZybOQc2qMm19vCDDQFfEdVLf2jKnVgJx1VbdpD286d6EIS
      0DWvTFV6q6u6A3hNoAy767p+g1i52QBQ2c0rhPCF5qanp8lkMsRiMb+KRnH8iu457ESy0w4h
      BJubmxQKBeLxuEcXpTPEgtWN5ntdIaXk/kqWL1eyaEGDWNBEaGBZLht5i19Np/jL4SaawjpC
      QEDXMLf1chR95G5TSE4JdaNvZ04P4s1TWSjY0NRQ+TELIehtCPBRv8a55iA5yyVianTHA0RM
      3UveHiL5q5yY5UqSeYf8dsI2GtAImxqGJo7cSCa8A/ecC+A4LrZTVwN9raBpGqZp+jSNMtCl
      2G38y1UACSEIh8OMjY2Rz+fp7u7m3Llz31hjvxvK+T169IiRkRE/R7C1tUpnuF4BdBi4Er5e
      zePqGtGgSSxioOuCfMGjVmYyFsmiQ29DAF1jexXw/LOqYUv9gPcedIF2gCF2JXz+2Juze9jG
      PV1AW8SgOWxgu3IHPy8OYfxdKXFcL7E8uVlgaqtAxpIEdEFP3KQ/EaA1YmIcIeEhhLdqUo7G
      841eQFh3AK8ZVFOTql7ZjxIppxSqnMjCwgKGYXDhwgVs2z4V9M7LgqpoamlpwTAMbNvGNE1y
      yQVi9QqgQ0GIkh8NdE1g6oKi5unxFBxvYErIKJFqUNVp29vwqmSkr+IpNM8cS/bnzTeSnjRE
      Z0s1x+1x61455XOZZb/56oAVtMpleJVOLjPJAo9W8zxez5EqOgR1jXQxhKkJIqZOogbKyMoR
      CCkxJNiaqEtBvG5QRj2fz++rvVOuKsg0TYLBIBsbG6RSKfr6+g50It80qIqf9fV1enp6/BWU
      EIJMcv61mABWS+hC0BExkI7EslxyRYdM3qFQdLAcl8aARkNQ8ytrSg2rcggaXtOTGq6ibVMm
      qiJnL4zNCwa6q1+xKapJ306q6tsGVh1X6ep59/Pk0Vbe6iVnuaxkbGZSRWbTRTaKDos5i/m0
      xXrOoeAc7fnafQwCtqeQ1VcArw3UgPilpSVisdi+hrtcaaji9J88ecLm5ibvv/8+tm2f6ByB
      w6AWPQ3gyUyPjY1x9uzZHV3FhULhtZsCVgtoAr7TG+fmco6lXBHbcdE0gW27FPM2b/XG6IqZ
      Zat6lIFXTWHqPUJ4K4n9mrAyOZhdhZ+8f8QeFwHaNrVS2qz1XIdf4m4f+dPiSQAAIABJREFU
      q6kJDE36lT3e+7zVi+V4P67E82gVaBEpuCV9A7ubxqT0ZgBkLRfbBVODkOnlUcx6I9jrASml
      X7kyOjrKpUuXDjSEuyMWXddZW1sjkUj42j2n3fjvVjA96vEq6icajRKNRv1ch6ZprK6u0pZ4
      9XMfs8teM1RPm45lS8bnbIZ6DExDkM1LFlYd+jp0AmZtivCFEHTFDP7nKy3889gms1kL24KY
      LrjRG+fPzicIm+WJCtXsJIXqeFd/3797Vkr4+plgqFfWRLSvlGN3tvMBjpTkbYllS2zp1d6H
      DI2Qob3Qv2BogqawQUfUZLPokLEcoqZGdyxAU8ggYpQ/f+VkCo7Edp7TUV6i3HMKGctlIWWx
      lLEoOJKwIWiPmLRFTYJG3QF846Fq4VOpFIZh0NjYSDabPXB27m5jqfR1enp66O3txbKsY+3k
      rQVq2dymyl1XV1d9iWnlXDRNY2N9ldb4qz0EpmhJbj0ugoD2phCZvORv/2uO//WnUTqaNR5N
      Wtx5avHT74ZpSdSuC0sIwXBzkP/leitrOYeCI4kHNFojBkF9/7JkpYSplfQIHMTBuxKml+H7
      b9cugNlRkSQlBVuSLXrnorR3bBsyriRsaARMME2PsspmBa1hkwstkogpyNkuYUOjNx6gN2Hu
      6QBdiRfdFz01UhcI6AJpgjA0bFeylLYYW88znSyStV1ipk6ywcWRkvaoWXcA32S4rksqlSKf
      z/vln4rK0XV9TwO+22iqZrL19XXOnDnzShj/WiMYDDI6Okp7ezumabK+vk4oFCIQCHgaQOtr
      DLS/2tdkM+2SiGnYjiSZkeg6DHTpTM7btDQGWNtyaW8+nrShJgSJkEEiVL1JKpVF3g9PpqGz
      FWKRqnf1ApxtTt/ZXgUUbJeC4/H7lutV9cytuEzPSDqadZCSty6baJrgP/88xx9/FOJie4jO
      mEHBkQR1QXPYoCGoo+/RAOBIL4Gct1xytutRQYaGJgSa5q0KVrM28/8/e2/2JMeVpfn97uLu
      sea+IbElVgIgwLXIqiKritU93dPVy5TZmCTTmEljNmYyPc2/ogc9jR70JJNJI9OMpFFL3Zru
      nq6NtbFIgiQIEhuRJHYg9y0W3+7Vw3WPiExkJjITmdgYn1kSzMwID3ePyHPuPec737cSc22h
      yVKUMhBolICqLyl7qtsEflGRpilLS0s0Go3W9GquyxOG4baGVLTWzM/P09/fv6vSzc8TjDEc
      O3aMOI758ssviaKIq1evEscxQgjS5iz+c24Cc3faNbSthXsz7v/3DSlmlwwLKwYLFPy9VYvd
      azRC+OIbwesvrT//Yqyjk7Zr8o/eRebCbYbMgatjMC33+VXCsZqOH1b86E2fYkGwsGS58nXM
      e28FTM0Y+guKI/0Bp4YKHOkP6CtsHPzd+bYZULHJ/X5tqyeQGCem10gMK5ETuWumhshkAnt0
      5wBeOOQsn5WVlZbYm+d5XL58mTRNKRQKHDx4cFMtnrUf+Lx5fOzYsW9l8Ac3M1Eulzl+/Hhr
      BwUwNTXF+Pg+RHwf7zk2gTHWcv12ykCvC1TXbiUcGHEXNDqo+PhSxPiwYnretMzGn4Tf7W7j
      3iwM9a9f+8/NU/KhslwXSEmB3sKl5g+R5Kql7YE1LQWestx/YPgojrg3bTh5SHPxK8M7rwa8
      fz6kGUKxsI0pfOF2Tp4UBEpgpMBTspU0LBAoQdVXjJU9Gomhv6AZKLidRdBlAb1YyLn9Kysr
      RFG0KpDHcczo6ChjY2MIIbbsvds5PayUemGHvDaSzRZCEAQBc7MP+OiDX7CyNEWpILDWcOz0
      jxkaGuLWrdvI9AHec/zXtLBsOXpA8fpJR2P68FJErWnprQoOjSpu3E85flATxQla773N4V4g
      jOGzScEfv7XR6t+xdqLUtHj9npIIkbN81r9iKQRWWCwCT1psRrFMrSA17TmHRc8w1i84dUTz
      nTOC+SVDGME3dxPKRcGVbxJefUlvObFqCSVPIgBfSyzgS9BK4klACcarHhYYLDpNpaovGSlr
      +goa6CaAFw5hGK6iJ+Y4evQon376KQAzMzMcPHiQYrHYcr7KdwRrn6eUYmFh4ZGuWs8zpJSU
      SiVqtRpKKTzPWyUaV6vVuPzp3zLRc41Sv6XguWbjrz/voaenih+UGaiKJ+oAtdsY6JEM9LQ5
      rG+ddkY5Y4M+FvjpDwtY4NUT3rYmXZ8lXLsN+4btuqU6S0anxJVWoqxxq6wlNYINiDgtdHoL
      59PH/poPREFbZAmqZXewmXnDuROaE4c85pcMF65ub3ElhEs4eC7hWGjpH1kLUkLVVxzqFQwV
      NUq2mUixsTRjg7Br/uLDMMQYQ7HYnWh53mCMYXFxkSiKVnH8Pc/jxo0bBEHA4uIiY2Nj3Lt3
      D9/3GRsbY3l5mfHx8ZY0cicKhQLXrl1j//79LVetFwX5VHOuaSSlJAxD5uZmmJm6z9LCXUz4
      gDRa4a3jMwz2rE6Od2clSsLlWz7nJpoMbENP5nlBzm7phIBNa9PPKv79rwTvvmroqz78u7z2
      H6VOJC03oPG1K7Hk5ZxHId9J7JZz2U6Ql7CSDn0klc1LWGtpJJaVMKURd8XgXihsJGVsjGFw
      cJDZ2VmOHz+O1pre3l5mZma4desWpVKJyclJDh06tKoUorVuafrvtl/A00QuW51f2+UvP+Xu
      9feJEoGnIg70L7KvGHFy3BB4jsO9XnlnfNDd68Ge5gtrAp9z7Ts18p9HTN51Xr+9lfV/n+vj
      uEEtiZVuYlaLrIG7xdfJZwKeJnIrS3feNvuZyLyBRSvZNbtqoC8W1iaAzmnASqVCT08PcRy3
      zGCGhoYYHh5Ga82lS5eo1WoUCgXSNMXzPOr1Ol9++SVBEFAoFF6Y+r/v+/i+z+LiAlcufYq3
      8gt+fGaFJAWlyNyTto4XNfjneBaC2uMgTuDCpOCd18yGZTohBBKnOySkJbWZtIQQKPn0VvM7
      QaclpMzsH3OXNWHbE9RdKYgXDDnNM2/adiJX6uycis0DepIkjIyMcO/ePV566SWiKKJYLHLl
      yhVef/110jR1UgfPMXIJbCkl9XqNTz76DcvTH3FydJbDx1xv43lu4naxMaYXwPPtI3WapBBI
      5Zg/umPH8zwF/xxCOOZSPpmc73DA4innECa6TeAXC7nd49LS0rYE2nKz9IWFBe7evUt/fz8L
      CwvMz88jpdxUNO55QOfA1vT0FJfP/1+cGJpk8Ezywq/ev+0wxsk+nJrYePW/FvJ57XKvQR78
      IXdes9nKH6znrDW7CeAFQr4DKBaL1GrrG5OspTvmSJKEgwcPcuPGDSYnJwnDkHPnzrWmiJ9X
      5OWeu3fukKYRlz/+3/nuiRl6y89vQuti65iahziF8aGnfSZPFrksxqo/deESYq6UCl1LyBcK
      OW89TVOklNtq3Oa6/xMTEy0T+SRJnvvSj1KKL7+8yK1rv2akeIN/+tqL0cfoYmu4dFPw0sTz
      u4DZKTotMltOaQBYlkPD/ZWYpTDtJoAXDXng7vx+PW2f9RKDMaYV8PMewkaPfV5gjGHqzjW+
      c/j6QzTOLl5s1JowtwLf2YHhy/MOIdqrf1f5dyWgZmK4sRgyOR8y00i6WkAvGoQQ9PT0oPX6
      E4VrHb7WPnetbv52TeKfJeRTzEntK3pK9rke1Opie7AWzl8VnD6yfbvHFwGd3gidvgjLkeHe
      SsyNpYhLs81uAnjRkPvVViqVVav4rQZx0frgiFU/ex6TgNaaGze+Zl/PzHMv1NbF9lBrwv15
      ODDytM/k6UGJNuXTOaU5qYtGbJlvJizHaTcBvKjQWlMoFFYF760G8o0e87wlgSAIWFlepFp6
      caaXu9gart4WHNq3O4YvzyucbzEtm0oBFLSg7EkGCppeX3V7AC8ycrMSY8xDK/vN6vrrBfrO
      nz0PPQGtNc1mk4Xp67xy/GmfTRdPErUm3HjgDF+eszXLriCXo2gmhsUwpZk4f4GKr6gGivGq
      RzM19HQTwIuH3PvXWkuSJG4VkCUBWF3ieZ7pnY9CEAR88Ou/4ZXRTwm65Z9vFb65B6ODluBb
      6M9srSU2UItSLs80ub0csxKlVH3JgR6fo/0Bh3p9Clqy0Ey6CeBFRL1ef4gJlPcD8qCf67lv
      dzX/POwEnIDdVXrMh4z0P+2z6eJJwli4ckfyvXMpicl1cDaWcn7RYDKXsMn5kPP363yVOYH1
      +IpTjSICeHWsxJH+gDj1uj2AFxG+//DSp1Pf/nGRH0dKuerrWYGUkvu3L7Ovv/mtLAF8mzF5
      V9BTMVQ7Bv2MdWqf3wakmU/wg1rMzeWQxTjFSliMU+6uRMw0UpqxwVeCst+1hHzhIISgUChQ
      KpXWDfadwXo3m7rP0m7AeRx8O+u/32YkKVz8Bl4+6gxdUtMeiMpdzJ4X5EOcnV9bfi7u2pup
      U34T2ejvcpSSmrayq7W2mwBeVBQKBXp6evC8hwvgaymej8Kjdg7PmlR0mqYcf+ktLt/pfdqn
      0sUTxPQCaG0pFdz3D0khPCewmcdvLXJevrXYkJh2ArMt7wJnQN/5tyczlc/+oqakJdjsHlio
      +IqilhS8rBxs6SaAFxlKKSqVCpVKBa1Xt3u2Evjz3cKjykdbCf5PcpZAa82+8f3E+hC1rTlf
      dvGcI07hs+uCs8cseTUypz/C86PtZq0lMk6uYaGZMtdIWGymLEcpsXEmLyuRYa6RMNdIWGim
      hIltlbikAE8KRsqaI70BVS3RQFUr9ld8hkoaLzOGsXS1gF54CCHwfb/letVoNFq00E5j760G
      8Rw7bR7nr7sXO4bcznFhfo67d2/R592iWNj1l+niGYO18OU3kt4ey+iAK3+sjfiPI+u8npTK
      XsFYaMSGemxYCl0j2wXsdjN7OUypRYbUWnwlMFZRQVHQmUm8gr5AcXaoSKAkd1cihoqaEwMF
      hkqabEMAdBPAtwZ5byAIAhqNBvV6fdXvYO+SwJNY+fu+z9LSIl9e+A3F6GOGe2MOHzTPrYNV
      F1uDtfDVHUEzMbx20n0eVbbCNTaXQtj5hyA/Tqctps7cwvbic21xvYwwMdTilEZsKXmSQInM
      htOyFKYsZsmhmOn6e0oQaJXp/kOgJUMl5wO8v+pR1JKBosKTouUNYG1XDvpbByEExWIRz/NY
      XFxsefxuJwmsffzTFoxTSrG4uMC18/8L5/Y9YKBqeIZISV3sMW5Nw/HDD6/Sd8PFLMnKLnHW
      ORWAUc4neK9c0nI7AiWcGX2nI5npqP83E4sSltRa1hvpSbOZAClyOQhBwXM+1gC1huj2AL6N
      yPWCisXipvTNRwX1rVJL93oHEAQB1y7+gjcn7jHU2w3+3yYIAaP9cG9G7nrD11gXXMPU0owN
      9cjQTIxrvu4Rq0gAWrlAXfYVfQVF2VMUtHQWjtIln4IWlH1BoN3PZMdW19h20kqMJTWu2auE
      e64UgsUVwUdf6u4O4NuMUqkEQK1W2/GHOV/9d04br0Vnr2EvoJSiqOYofAsnP7uAlycsv/xM
      MHlHcOzA7gVla10wTbMVd2Jczd1TefDf/c+0kk6rBwtaClJj0dnKvaAlUWpIjWr9zlOSqi8p
      aNEqdYWJZTl0zeEwMW4gTkiUaNf+p+ct+wa6fgDfagghKJVKpGlKs9kEVq9qOiWhH3WcrZaC
      drsBrJRibm6OS9eXkKFgfMgy0kd3F7CLsDZf8brvWwbjz9CgxTsvW35/CaZKMNzPrs6AiLyE
      8oSYbEpAJQvqeZrRMhd2k4gC+NrteLSEkifxVLskG6dul1KPHYU0NVBNHbson47WWjA7320C
      f+uRN4fDMFw3MOcBe7NSz6P6B3vF+tFa43sevu8zODiIFLN8fEWSpHBmwrB/CAq+SwZPksnx
      IsFYS5xCkjdVcQFKS+Gaoc/IffQ0vH4cfnlB8t6bZlfq87mSppbORN1Ym9Xl84bs3iDvX6z3
      Gkq4gF/QbjWfq3y2/gaz/2+xfKTAk1lCzN4/ay3GCLTqmsJ3gQukSqlNSzl7XcbZCZze/zd8
      8dn7TPTf5txhy+snLEs1uDApuHBdUC5ajo1bDo2C6OSH8+xdz7OGnAETG1dKiI11PHMlKAiJ
      QjxT/Hop4PaUYGoO9u2CB7AQAiUhwK3+3c/c/z/NHdCjGtxaCkralYbIEkTFcwNgnhI0Irh6
      U/DDc6abALpwA1+lUonl5WVgYxvIZzEJQMrpkaucGE9aZZ+eMrx71hIlloUVy2eTgo+/Egz3
      G0b6BIGGahH6ym6H8Mxd0jOEXEcnzuwE3YpTYlQ2SfoM3bvJe4KXj1qu3BBUSpZq6fGPqQQo
      JVrMmZxm+SzDV4JqQWGwlGKDBYpZQpACPrkmeemgobfSLQF1kcH3fZRSmY6OWHdg61lLAMYY
      PC9gtulhSVb9TgjwtWWgF959xTC/YnkwD3dmLc1QEkdZo0051oWvLb1ly3A/DFbdbkEKR8Hz
      tHvcM3TpXawDa0FrODgK124K3jj1+GXH/POun5P3XgqBEU7/vxo46Qdwn3FPSYwR1EMol9zA
      XDcBdAG4XYDnea25gO2iM2k8KURRxOjYOGHzX/DJ5P/J60cXWyu1HLn4VbFgGR+xHBoVBNqg
      pfsjSRLBSsOyVIfFmuDeDEzesTQiQRgLUgOespQL4HtQCKCnZBnqheE+Hnq9Fw359KknBWi3
      gtRKtBrBzwqW6/DVXcGP30zxNPz9B5J6s60L9G2CFE4RdKmZEqcWJQXVQCK129G8csLywUXJ
      9053S0BddCAIAqIoemjlvx0/4c3ooHuBMAw5evwl/vH6SeL4Q1Sw9pyyf8k8UsXqnwe++xrs
      hZwkZ7OyhzFuwMZYiGJYasDCsmB+WXLjvqUZuSMfHHG9B+8F+2sSQiBxUgTCkwTZR0IJ0OLZ
      qv//5qLi9JGUYvb+D/TAjfuC0xPPoRrcY8BapyM0VYuZaySEqaORRqlCCbcr6CkZ3jhlef9z
      2U0AXbShlKJarbK8vPzQTmA7XsJPeieQpgY/KBGmkgKrk48WglRYbAdzQ0nRauStB5GxPzpX
      98UAeitwcLitpGIMRInl3iz88lPBd8/sTt35WcBXtwUXvm7LKGSpEa0ER8YsJw+AeIb8dkuB
      WTUNe2DUcGdKZmXLp3deTxqJheUwZaGZ8qCWUI8NRe0+72XfEGhJmBgWm9BITXcSuIs2lFL4
      vk9vb29LPXS7Kp67aTyz9rgbIYoi3v3RT/jg6gBRsvo5IlNHzKco/Y4x/sc9RyldE/nIPnj5
      iOVXFxTzy491yGcCzcgpa77zsuWHr1h+cM7y7lnLO2fhu6ctUSL49UXFDquFe4L9w5ap+fb3
      YwNO6uDO9NM7p6cBYyxh2haTm6rHLGcTzI3YsBI5ZdEHSwlekHQTQBcPI5eRXishvVXslfTz
      Rsc0xmCMQVdPs7Cy+jFuiMYlgYIS+Bkverfr1+OD8O7LKX+4rFYFoucN9SZ88Y3g6LhT1hzo
      ceWx4T4Y6XP/vnLMEkaWxdrTPts2kjQv4zloBe+9kXLhmqTefHrn9aQhhcBXkkC72YWezAMg
      0AJjncfAUpjyYCXFK3UTQBfrQAiB1ppCYWcdtN3eBXSWlnJ/grVIkoTR/ce5NVMkSVc/1/G5
      2197laD6qy4JXPxacHeGdQW6nlUYa7k9b/i/P7J8diNhfDTdsIynJLxzznDhupu1qDefvvFK
      koqW01UOKRzTJX2O3ofHhZJQ9iRVXzFa1hzs8Rkpa6q+ouhJhHBSEbdnLUqn3QTQxfrIBeMe
      J1DuRqDdajJJ05SjR4+jR/6K316uPrU/+moJ3nvVcvWW4PPJ56f4/OHdOv/9Rw/4f2dvcV7c
      4X++PM21uXDDx/eU4NxxS5jA+xfEU00AxsD1uzA+uPokrAXBt4sJJLNG70hZM1712F/1GK96
      jJY9egsaLQQ37ymOjAgGKl010C42gdaacrm84ap7M3Su2ncDW5GTiKKIU2dep6beXLULeNLQ
      Cn70qiFKLD/7VJCkz5ZlZieMtXx8r8a/+Wya23GCCRRNrbi4GPJvPpvm6/lwQ0P1/gq8dNAy
      twznrwnC+AmffIZG5P6trGnAy0xGeW7xyZ/T04SWMFjSjPf4HOoLGO/xGSgpyp7EV5L6kubk
      qKQadE3hu9gAebmlVCq1dgI7DeaPmwQ6jbGNMZtqDiVJwlvf/T7vXznAvbmnQ3Izmd3eq8ed
      MN1vvpA0n1JwfBQaseHnN5dJhEJqzWCvR7noEQSaxcTwsxvLLQGxtRACygU4fdhy44Fgbsnt
      BJZq8PmkYG7Z1ebX+0p38WulATOLgoWVh89xZMDyYE7QjJ5+mepJQQinDFrUkpInKWqJFAKB
      4KtvPN44JhmpanoD1aWBdrE51ivBbMc0Zru2k2ux3efEcUyxWOKNH/4rPvzVv6WvfL3FDd8p
      mpHF1yBzL1XrgljO+197b1rxUsCJA4bCA8FvPhe8e9ZS8MUzRUuMjWUuTKlHgn3DimpZYUwm
      gRylzIUJcWrxNhB+kxJePQ6DPYbffiF465TgD5dgfEjwwZduQGvD693ord3s/qzzHCldAzjw
      Hv7diYOW31+U3Lwv+affSzNzlU2O/wLCWtcHuXhd4AnBuUOSMIWm150D6GILKJfLLC4u7tgH
      +EmXP+I4xvd9Xn7zr/j4wr/l3ZemdvxH3wwt/93/usx//ZMSE/s092cNv/08ohgIxgYlr53w
      Njy2tS5eTYxZ+qvw9x9Kvn8WRvqe3lI0jBzNM/Dh/ix8PS1pNATWGrCWOHEJzhiLxaI7VSY3
      Oe6BERjpt3x4WXL6MJw+7Jow/+6Xgj/9rnnsJLwZjGlLNq9FfxX+/PuGb+4J/vpXkoOjlrfO
      vLhbgdzsPYezfoSPvpRUC/D2WScJGiARdC0hu9gCpJQopVaZyW8VT8suMkkShkfGuDfyY765
      /+84sm9n5/DlNzE/fiPg1oOUw2OKi5Mx3z/ns29Qtjxn1yJT3l2l2NhXgX/ypuW3FxXjQ4YD
      w5a+yo5OaceYWRT84lNBpSQIQ0OxAGNDkpEHZR54C4RRjLVOPCyOUrSxvD5aQq/hzObvZ2pX
      i6MpBW+dSZHCXf9KQ1AM2JUJ6c3kvLfi/XB4zDI2aLkzDZ9dE7x64sVKAvnO0/kX28wrQGCw
      fH5dMdxjeflI/minF6RlVwuoiy1ASkmhUCCOXSH7eUgCUrop0OWFaY4N7ey1k9Ry60HKn74d
      8PcfhISxK/1US2JDSd5cPiFdkxykcAqkP3ol5dJNwT9+LBgbhNeOW4rB3unq5LddCPj6Hhwe
      M7x5svN8YWJfhf/xsyZfzjdpJClY8IAf7Kvw5lgpMyPpKHNBq8xlcb65ed8jMW0d/a/uwGCv
      RD/GxHAe2CyuLAVukluyXWN2S+DB4THBf/yd4MwRm+0a2p+NZ83kZrtIMyvI3K7SAMsrgvlF
      +P53Vz9WZZm7mwC62BKCICBJEhqNxtM+lUdCCIHv+3z8wc854P+SgZ6dHWepZplZNPzifMjC
      iuHGfTdmHCebP08IgRZZULSrA0sxgDdOWF4/Dpdvwt9/KKiW4JWjlpF+9/x8G7+9ALca1sLd
      WcHNBwKtLK8dtyzWBKcOPSyNUA0U//qNYa7OhVxfCFECjvcHHOkLMg/ZzuO2exz5v6l1vrOr
      msVWcGtKMjH+eHxcy+rABqCtzQxptnYM03HOQli+c8byd78XNBPBD19PqJTarlsb9TqedaSZ
      dWWcWVdaoFGDi9cUf/SKYW0BL/+MCrtmaRaGIcYYisXiEzz9Lp515AychYWFFhNnq6v6ThbP
      k9gJKKWYenCfz37/79k/0HCmGAIqQUhfOaG3bCkFj24GXrkRs1iznD2quT9nuHU/xfcVU/Mp
      544qtIIDI2qVIfd2EcYwswCfTUqUtJw4YNk3aMmHsPMSy9pGswW++Abuzzutei0EE2OWgyOw
      sAL359yQ1rljlqu3oFQQDPdbXp4wLa2jtYFuQ3YV7WTUGUyTLLanmdVgbJyJugSwkr/9reLP
      3jb09+z8/iRZUItS63YAgtWSHhvc+/we5b6+YlUScxpOl2/BlVtkRkgCLSS+FASeIPCgXLT0
      lC2+5wgAuTy4VhbPc03nwMvppju+xF1BYixh4t6HMDVYC5e/loz1Sk4fdPdrPXR3AF1sCTkt
      dCe9gLUicXudCIwxDA4N8ca7/yXGGhe8pKS2ssLVBzeJ7k5ybPgBx8Y2380M9UkOjAhKBcn4
      kOD+nM/tpTEkM8wvrzDSrx77Dz/wYHzIsm8w5dY0XLol+Oiq4JVjMDbgFEaLa9gtxkKUwsWb
      gv1DhmrJlaO+vu8SysWvBQeGBYO9lhMHDMN9Tur60GiHtwPAGn+H9ZJMbgiTGEiMaa2UtWwL
      xaXQWmDmXumBBxP7LHdnJX3VnQuyuZo2WFyCccnLyXRruXqXtfY5abZryFVgXTJ1SSzFcnDM
      MjDgrgkrUMKSpoI4FkQxWCOIE2g0HY00jAVhBFEiSJLMEEdaPOUShFYCT1sKvqVchJ6Kpbfs
      Gu4iu0cukbovKXY3eSjpxOBUdrHzy4JT46tVW/O/u9aOqLsD6GI7qNfrNBqNlv7OdtEZ/Pc6
      EawNblJKpJT4vs/f/vX/xk9ePo+/xSXQxRtFlrz3CKOEVwZ+xmDP7o0ap8ZyZzni6lzIdD3B
      JJLGYgE/9tFScmwfnDviykfWWu7NwcfXBYP9KUf2Of/bQEs8Kbl6QzLU68TRlmpQCGzmidxu
      2uYqp5sJ4uVG8MZaFpuG+WZCM3GNw7Kn6C8qiloAol2iyZhDAFpKPCn4D79W/OS7KYUdsoDi
      zMw8To0b7hNO10lL0TJCh9XN6Ch1ySI/J8g0crTEz669mVii1NBM3GN85a6js4QSaEFvoJ2W
      vmg391PjPJIBJLSSRjOEegiN0OkPNZq21TdKUuHmH7KPjZTgabcT9T3XQFfS/X/guenlaskN
      t63XRO8czsvvQpzRdxPrmFG//Ejxk7cslUI7WXfu4Kzt7gC62CYlGN2oAAAgAElEQVQKhQJJ
      khBF0Y6au+sFnL1KAmvdzPKEJaVk/OAEl299ztnD8aYskjCG85N9VA/8BW+cPMsn5/9ArQmD
      O+wrrEVqLDcXI/5mconPZupE2Sq3rCTfH6vw5miFhXmPv/tQMtoPUQLzNTh+KKW3J2W+Zqk3
      NYFSRKGHloKFuiV6ILlTP4etX+PtlxY6zMM3P5/Olb+1luXIactP1xNqkcHXgr7A3UevrPFV
      bhoDqRSkxs05aOGE5apFF9R2CilckJVC4On2Kl6K9jna7HEWscq+shlbYmNahjbuPKXzM1AC
      YwW+AiMFqbEsh04ps5G4UlbZk8SpRQrP6eiQl1qMK0lZ8CQEWlEqQm8lv7ntxYG1nf4S2Y4q
      0ycyFqxx1NxGBI1Q0GjCXENyZxrCyPVWsLnJu0AIi5TW+VgULL1lQaBty6RHCIFUlpv3BcfG
      oBy0E0Q+w5Kfl+kmgC62i9w5LEmSHa/gn2QSWA9JknDm5Tf4x7+9wInxryj4q38vhFu1zSwp
      PvlmhKNn/5IjR49jrWX+3iece2n3Vv/1xPDZVIOPpmokEpTn6KWLqeHX91YYLWteOSA4fUhz
      f0Zw/iuB7wvuzgVcuqcwqo/R8TPUrMfg+BCBVyCOI5bDBd589U0++eiXrNR/Rm/FrGItrddX
      yNk2rSAB1CLDcuT05WcbSauWXPEliXECYwDCgrRt60QlobcEK42dva/5+dRjQ5ha0tSilCDQ
      Lpjb7DFJqwQk0NK2AmtqoJEYEmNRwmKVxE8tWlq8zNlMaNd3sRZWopTIWGqxYabuht/6ihpP
      ikxCwV1YIzHMNxKWwpTUQkFLBoqgpEJ1lMVytMo9AI9kQ9k1/2Y7t9QSJY58EMaWWiRohK4v
      kiSWMJIkCSSxJIzcLuT+LPzrf24e6pHkR86ZQt0E0MW2kctE51TLnQbvnUwX7waMMSilaITw
      80/FuraO5Z5xYu847/3Fn2KModls4vseaTj3WCvatWgmlsnFkBiLpzVaSzdpLKAWGy7NNpno
      CyhVLCcPCmLjc7NxlgMn3uBoIaBULmGNpRgU8KRGK0WpWCKKIpIkob78gMIaGmxu87jqnmQl
      olVEng62T2IstTjFWJmVWFYP5ear8k48WIBKcWc1bmPd9a+EKc3EfcY8JRFIfN8ihSDKDHmM
      BS0tkAV2QUfz3K3H1+oZedLVyvMZhyg1eFK0kk5soJS45BOlrqySGstCwxmtTNcTmomhx1dY
      60pIgVKbT8vtAEI4n2Ot3TUUjaWUWqLEtJrbvgZfOutSKQQ3H8Dt+/Kh93jVcbGsxF1LyC52
      AKWeISuoHSAvBf35T/8lcRyvO2RUCALX/EySVtN7L+DKG9k32Xnkq0YLbvVrLFFi+fh2Hz2H
      /jk/OnCUxKbUGnVsahHWkkQxSIORijiKMcYglSQ0FaKk3Yhcj+veHiJyzd6c9aMEBEpQ8SU9
      gcLio7MVsSddQGwmJuP9i4eOfeG64MwRs6MEEBtLIzYsRyZLPFD2XA+ioF3939WzbZagQAqL
      1u7cEiUoaUmUZTQva9LmQTGf18jvfclTlDxDxZcMlz0S40pABe0YNO7eWJajlPlmwmw9IUwN
      qYGegqI/MRirHr3If0y0dmm4PoTOyrDGZjuUEK7fUnz39MP3Pb9mYyEylpUo7SaALraPXCp6
      p32AjY75JHcBYRi2WE3rnUse/PcCthXoBUUtONIb8PF0nTS1IFxyShOLB4wUPZJE8NX9fnr2
      /QUTR0/RbDaxqcGXuh2sZfs6jDGkJsVKKFcrhAmUzMYG9p2ln5xV43wToBIot9q3TmdeCih6
      Ek8JImNJIoMWtExIdEfQsZadq7LmvHZjqccuCXpSZENn65y/hURY/GxGoJidq05dTyVPAEq2
      J7Q7k1WgoSdQJFlDODEu+fUVFEVPOfaQMSTWJeNGYoiMpWycd7S1O9vpbOlWdPxdtHsi4GeN
      HSnau9ib9wUDVSeBsR4E7l45x7DuDqCLHUAIQalUWrU6ftwy0NOQi9iIxdTZMN5tpKat1SKs
      peBJ3tpXZnIh5JPpOnH2utoKBkSZxdlBLpsjvPbanzA+foharW3DpdXDf75uNejGcZM0YWH6
      Av5QVi6wotUM7oQQroafBxPbKqMIAgXDJU1BC2qxyTT23Wq7HhmMtSgpKWqLRVH22u/pmcOW
      y7cFB0Z2QAPNdhVKuBV/ah39NKd0dsJY224MA172HE+qVo/A4mijkvW9oLV0wd5Xgt7YJQLH
      HHKN15xSKgBPObct37ohurLvdgp7Ef9ttiuLUtMxzAaekq3kn1NypXCS3EO9G392851DlFga
      cXcH0MUOoZSiWCyysuI0eJ9VvftnBXmZJc2+IKNhWhguKf7FmQHOTRe5vRwzX4NmvY+Xjv4R
      b559k95SFS01URRt+fWUUlz+8jMODjzAYIiNG5rKefqdkMJpw0grELLNq8+/lILeQNETSBLj
      GsMrccpK5jWrpKHsuXJLYhQF7Wrr+4fh0k3J/LLd9jS2loLAk1SNajV9Ay0p+O2GrOyo4Quy
      Ya38/4W7FkXbrCbvDWxUzpPCNbfLvszooBAmjirazPoB+U5oX8VD4Mo/AwXd2nHsBHl/Ym3N
      3lrXf6hl99nY3PIRCp7Cz2YI8vJbFMPUnOS1o+ah4+RU3TB1g3VxakhMlwXUxWPA93183ycM
      w8cu4Twt0bgnhZxamZgOto1wgU4gKEmP14Y0p/rgy9nXOH7qBwwNjmAyWktitleOElKwvLJI
      j59mq1kn2eBtEKWUACHBWLcDaCeAPNhaLCL7N5umNYZG4pgm9dhg65ZAOQ363kAxUFSsNOSO
      rDFVFozBMW0srrRT8mWrWeukICRS2qxn4ZJcfolCiNYA1pbuWT7YZnJdI1fqWQrTrDGcTToL
      QX9BUtCSqi/pLTjf3e32iTqZV/n3nX0UY10PqB47JpYrT7nXLHgWLWUrqYHg+h3BQNWumhvI
      k0gztSRpngAMiXU7mW4C6GLHkFJSLBYfOwF0+ga8qEnAWDel6SZUs1KKksQpXL5ZYLp5nGKp
      zOzUDd77yV9RLBa3teJf/VqGsNHg0MRJrp3/LX3VJp5s1/rXC1O5uJ3I+xPAF18n3LyXohW8
      csJjZEBybzrl/NWYMDFMHBX4nqCRWKZqMc3EBeKSJxmtaBqJRzNWW1LrXO98tICqL9slM9pN
      bIlFZat8Yd3KX8n1Bfq2C5s1lZNsNmApSlkKDc3YIKWgoAUVLRkqaXqyEtBGkhSboTP4Q3uR
      kF+DxbGcmomhFhvC1FDSlkCJlu5SnqDDGK7dkvz0ndXZNrVuMK6ZmNZuJi8llbp+AF08LrTW
      lEol6vX60z6VJ4CdRZd8ACfNGoaZpA0At6c1Sc+f8d6PvtvSWFJKEYYb+/E++vXAWkOl0kOq
      R0nTG629vrGbK492liFu3k9551Ufa+AfPwr5y3cDPr4U86M3A5aaKb88H/Lyy5JalDDTSFgI
      U+qJoagEzTRACUGEwdM7j8rrBdaWWF7Wp9DQ0unZrMSzFhuVXiAfLMtkNxJYDt0sREELZFG3
      JDECvX5PYSuvnQf/XFNJy7wZ32GiRIdsBG1jJsHD+kZC2Ica/SablXCJxP0rMwpsUXd3AF08
      JoQQBEHgmCl7LO3wtCGEYKWpuT2tmBhNEcJNu349XeTeQh/95QaBarLUKGBFQNFbYbDSoFww
      aGVppoJyIVu5Aks1wc3FI7z57jmiKMpEyeRjs48EgAWtPYbGv8ODuXv07k9c0NjOgawzxElT
      53M8NWcYH1Ju+rSg6C1LbOIomULASpxybyWh4kv6As1Cw1CLDAs1yUojq8vTserNyhc9ZR4a
      xtsMa7V+hHD5Tdh2TwBWa+RDu6wF+SBUdjxhV8liqGy3lMtNeCpvSIuWFET+3NSA2AXu57q7
      MpwcRZC4JnugHDOpoKUr/3Q8tt6EvtLD3giuwNjuf2jlGFGeFHiquwPoYheglEJrvalf76Pw
      NNlAW4WUktOv/znT9TkmP3sfY0JEYYLxoz/gzVcPUK+tUKstoxdXmJiYYHl5kam5OZZmprDR
      FAvLDb5z5DqlAM5flVB5g9ff+mN8P2gF/d1gH0kpUVbh+T6e0lSLMhNw254dpbGWX5wPWVqx
      /Pk7AXFiUSqvrVu8bCq3LBWBkhSUpDeQVH3XuG3Glmo55fNJJ7/gZSycvCFpwSUqJRkbdCqo
      /dXNDV5sJvWwHLqSiMDRUlGuHp4zgnL2jJujMJlBjwvoSohV5RdhAQkK2+obKOkYUD2BopkY
      +gqqlRh85WYD8l3Hjt6j7BxzdlKOzh2MFC7gl33Zet88KSh4kqK32qZVCrdTWVvjy2c0XOPc
      bTGkFHjSyWF0E0AXj41Oz+AXtY5vrSUMQ06dPosQ0Gi8jTGGUqlEmqbEcUxf/wADg0P0LS8z
      OzvLiRMnOHRogjiJEUIQhiH/8A9/TX//AK++9wb9vQMkSbKr8wauPi7xtYdEcOf6HzhxOnHB
      V2xvByCl4K/eDfjgi4g7Uylnj3ucvxJz9pglimFp2fJyWbGSWkZKLpT0F1wyqHgKpS1HDkcU
      VELJl/QXdUtfxzFqXGN3paaZmpWcvyyYXRS896Zh3+D6n6FmYrm3HHF3JaYeu6bpcElzoMdH
      CNnaAVhc8G/EKVFq24HbuJWvEq4nAzkbS7SG34QQKCxSC/qy5b2vJKVQklpLQUsqvnI1+tRm
      zWfb2t1stQzV0jPK3ztWl+eEcKqrZV9SzCRCpHDXsfboK3UnHrf2ZaVw7ClL1si3Lmk5baRu
      Auhil5APVD3uSr4zgTxru4LOYC2EQClFs9lc9XuAnp4e7t+/z/T0ND09PW7aGFfb/5M/+Wco
      pVoJZS8ghEBJhZACn5CC5xgf26mPA/RV3PDUu68G/PZCyHLNcmRc83e/D4kSy9kTmmIgIJEc
      6PEpezJbcbtJXmPh/kqCwVJQkuFSymBJU9SyRWv0laBSSRgbcOqis4uCX10Q/OT79iEnsdRY
      5hoJd1dibi7GLEdpNhxmMy5+u46UM67C1M0rpNZS0hKQCGERqv05sxlV1K4JvgLwFfQXFZ5y
      E9B581XgfJOj1CIwbjUt2jssN2W8+b3OG+9rP++dyJlYuTKrsU6xVEnR2rEATN6VHNtnWbsF
      ECIzudESTzlBOincLEAz6Q6CdbFLKBaLCCFWNYO3axu50ffPSgLoxGbnFMcxhw4d4tq1a7zy
      yisuMdh2gkiTdNWuaS9gjMHXPl7pANjpHTUq33nFaThba/mjNwOMheEByfHDmsQYYuuohZ4U
      VDxJWftEGXNmup4w13SaObGxBFpSTwyNxDJQVCjhAre1El/Z1jTvUC/EqaQRGqql1ecTG6dO
      Ot9IuVuLmG8mVH1NNVDUIoML5e0dQD7VnGYyDql1QRvcNK1p7VrbNfL14ElB1Xc7m5xJk2bl
      mzjbyXiO04vOjuI8uLbmLrbZY9oeGm630cn+caUoJ/+wsGI5MOLuo1zndZUEk8lpNxPDg1rM
      TL07CNbFLkFKSalUIggClpaWWsFuN5KAzIrCz0uT2RiD7/uMjo4yOTnJ4cOHieMYtRvdwm2e
      x9j+49ycvsxL+xs7omMCrUZqah2TJLHOUCUfJspr1c1swi1MnarmXDNhcimkEVvGqx5FJQgy
      Rc+ydgNdqqM0laSCX3+ueeOlh4N/fh6JcV63ibHUE0PVt63SiexIqhJafY+CdmUnLdvlHykE
      XvZxaz//4decqSd8NRfyoB4TKMl4xWOs4sprUWJJrHOmEW4fgdBtKmonpfNxkJezmrFtTQR7
      mZw1SJbrksB3vROLa3CvkuTAJY8wE5H7ZiHi2lzI/VrUTQBd7C6UUpTLZZaXl1sNzZ0mgWet
      BLQdxHHM4OAgU1NTJEmClHLP5CU2gjGGEyfP8o//z39iYrRBcRtMm07nqLz8kE/ExsZNk6bZ
      WHFOw0yNzeSb3WMEgqqnCJSrkydZg1Zldex8qKugFZ6Eb+6C1imHRte/T1oKilpS8SRjJY+q
      pyh7kv6CoidQqwxi8lp5ogUCSUHbFm0zyOSgOyeE15rjWGuZqSf8/MYyn07VmQ8TN91c9nlr
      X5mXh4qZ9ES7tLZ2Ib9bGzxj27pI7d2Hmz1ILfRXLZ4n+Po+TIzyUDM8LxuFiWGxmfL1YsTl
      +SZ3V7oJoIs9gOd5+L6/qj6+HTyPptzrwRjDkSNH+Prrrzl58uSOB7t2ilaNWw/zH//Q4Kfv
      NB/JWlnrpZvXnd1Akcm+XO07FyHLG5lOs6YtJVH2JONlj9S6Cdb+TDah4isqgaTia5R0uwdP
      icwVa+Nk70lXj6/HnmO9pK60NFzS9BX0qtW2EI7FI5D4qj0FrWVbOyefA1ivN5JauDYX8vH9
      GlNhgpSCMDVcW2yihOBgj09/QbXoojrb3XTe30f1ALaLTrOeTuMGY51XwGDv+s/L6bKpgcUw
      ZaYRc78W0zRdP4Au9gCd/sFp6uQg92oVn3sTAHum3rlTGGMol8tIKVlaWqJcLrfux5OAtRbP
      8/jpf/bf8uHv/hOLtf9EfyXddGWa89zz4J/a9nBSWwjOUQuFcDr0ndx+gauZD5ecaUJsDEoI
      Cspp7FQDRY+vqAZOSiH/XCQGBnstFyYlYWzXnQsQwgm2eVLQX1DEmXJnb8HtBNYrIfoqH7Bq
      UytbFMwOBs7apq2xlrsrMXNhglQCpaRLhokrbTUTS8lrl/S0bA+trWXzPA7y+yOFK/u498Il
      TJ1pH2kFRR9WatCTOfk+pCtEe/BNZ0Ng9aSrBdTFHiE3i9nNMs5aiqnWmpmZGWZmZtBaMzY2
      RqVSeaYSQRzH7N+/nxs3bnDq1KknmgAAoijC8zwOH3uZzz/4gANDNQ4Nxw/pxeTckXzln2bB
      vxNeJhikjBtKEqJtQG4tFDP2j5dx5ItatoThRJYlPCUp+U4vqJFp3ISJbT3+8JjHR5ckP3h1
      /TKQFM6foOS11TDX8zjIkctGdH5v17m2POG170muPipcySVfdZNTK10TNm8erw34j7uLXevQ
      pqTzNNbStmYa/Kyf4qaAYbm+8bko4Wwj+wqagz0+9cRQ0kk3AXSxN3hct7BOrKWGdh7z1q1b
      LWXS3//+97zzzjuUSqXW6+dy1bKjA5rX4+M4xvOyleo6xjC7AWMMxWKRQqHA7OwsfX19TyQJ
      dM5lRFHE8PAY0Wv/kvMf/5YvJj/nj9+IKBdWBxnRwUvPGTNSto9T0AI/G7ByPyOjMTpaoSDj
      1xtHUwy0oMdXaNkevMpr83HqKJ1zjdQJymWBfXQY5pcLNCNLwV///cjpk9u9Fznyo+bJbi0D
      KH/4eMVjqKi5U49JScGCQjBa8qh4siU9vV167VbRUeVpeRqb7F8l8ga6O4F6U9BTclz/tX00
      JVz5yyqJDODEQAFfCcbLXRZQF3sE3/epVCosLy8DjzcgllMmN/IeGB0d5cCBA8zOzjI3N8f8
      /Dy3b99GCMGxY8cYGBjgk08+obe3l1u3bnHy5EmWlpY4deoUU1NTLC0tceTIkT3bOeS7gEuX
      LjE8PPxYCaCTPrpRU1muofukaUoYhoyO7eMv/9l/wcULx3j/ygccGbzNkX3JqonYdkkEkOKh
      kk8u59CJfMfgSyh4ktQRY/BaWjlrArC1LMZOZXOmkbDQTNFStHwHUpMyPQ8HR3d8mzZF58fH
      rvke3LXHxtJXUBwo+8w0EsLUUtaSiZ6At/aVKXmSJLWZPg+rOPmPg7xe36lTlGtH5UNuep36
      UrmQ7QDWnIOxzovBMa6y0pGSBEqwXEnZITGsiy42R64RVK1Wd81CsnNV24mFhQXu3bvHwsIC
      xWKRr776irfffpszZ85w5coVtNbMzs4ShiHf//73V4mtxXG8583ZXOBtcHCQ+/fvt3Yde/l6
      a5GmaUtv6MzZ13jvz/4brt3rJUrcij2XOrZZQ1FJRyXUsr3a9DI3LSXFqq882PtZI7TsCUqe
      XDf4t87H2lbTeClKaWYG7qmBt04bvpwURPHe3J/O+KnW4f83E8OdpZhbSxHVQHG0p8CJ3oC3
      x8q8d7DK4b4g65O0Bd0ed+9orWPpLDRTpmsxM7WE+UZKI87mGzooq+vh6H7DzGLb+yBJ29Lj
      +e5LS5cIWo5iXSmILvYSuXWk53m7srrOV7+djl3WWqampmg2m7z22mtUKhXiOObatWurGtC+
      73Ps2LHWFO6TRpqmHDx4kCtXrjA0NLSjHdHa4bG1x9jKCrTRaACOqXX05X/Czy/+nILfoK/U
      YKiaMrVUYXa5Sl9hiZMH6vSWbJurv0mdXQmQ1hmwwKPLIrnQWkELBgq6FZyUFNy4LxC71UXd
      AKL1H7fi7+wJrERuUOrmYsSDekxqLP0FzXDJo+JL9DozA49SWX0UEuNed76RUM+SYVFLUqNQ
      UlPIIvVGt9RTtHwXZpfgZ+cFP3zVMthhxGMgG4xzySFKuyygLvYYuVBcXnffrZ6AlBIpHfPj
      5MmTjI+Pt1bySimOHz9OuVxmbm4OKSVa61YZCdzKX0q5ymJxryGlpF6v02w2d7QLWI/lst2y
      Q94bieOYiWPnGD90ktm5WaZnpvimVmfi5ARvHjjM3Tt3mLz1CeW5Dzl9KGJuaWOa4arz2eJ5
      5KYx1lqqvlPjLGrFjTuaSiD40esp/h5tlPKE1ZJ1EKvLX43YsBKlzDUSvlkMWz2NZmxazmQI
      p5WUX+/j5qsoM35ZDFMWQ2e1WfVd7T5KDAWtVhn0dMJauHxDcvIATC/Ab74ULIUw0NN5jQJF
      u7SU7wy6CaCLPUcQBKRpuqueAXnw6+/vJwiCVhNXKcWZM2f4+OOPW14FZ8+epb+/HyklaZrS
      29vL1atX+d3vfofneQwODu7aeW2EIAiYn5+nr6+P3t7eTRPPXgvq5fcuiWMEgqHBYUaGR12S
      TlIa9QbDwyMcPPBTrlye4LfXPqDUO87NmfO8emRlxxPFna8fKBgsaQItCDNXsTRWXJjRfPdd
      g34CkSkXY1tYMswtGw6NKYSAmcWUa7cSbqwkxHVFUUqM1Hj9kkDJFsup05/4cfcrBifzEBlX
      CspF59Ksv/LIa5GwsAxfPxAMDqQMVDqG2rLzM9n/qIzFZGxXDrqLJwAhBMVikTRNdzwcth6M
      MRw9etTR+rJyT5qmjI6OMjQ05NQmtSaOY06ePNl6nud5fO9732v9Pn/eXiEvO83OznLgwIEN
      ew6dJa7On+0EDzFf1gkiUkhSk2KNIUlNh/2j8yRoAkePn2Hf/iMEQcDvf51wY+oPHBxOHhJq
      2w5yGqYUuKEwX6EE1BBotXsTtI9C7hMweTvh0jcJfdUCTZFy4VrM9W8sK8MpwihUw2N4TDNc
      1vQVVGbj2WYPbVYe60TndDVrnqeEyKaiJWW/rV7qBtdE63nr6QsJAacnDD/7UFIsWwIfmpFg
      peHmKSw4qi6OxaQlKBRfXO+WgLp4AsgDm+/7RFG0a5IIOc10LUW0s9+QJMlDQTUP9p0lob2E
      lJIwDNFaUygU1t0JrWXu5HgcZsmjZjCEEGilMdaAffjxufppXmr73g9+woVPB1i+9T5HRxcp
      FbZf+jBZ8zdOXeOZbABLKsHtaegtg3hC1JR8BwCwf0QxeS8mKSXcmUuwgXFfwuJJj31jgsMD
      HtVgtfn7VoM/tMsuOfXUBWSbDaw53f/YqJblo/NXVniqLQW9kb5QfxXGhkAHln0jhovLlv/w
      exisCF4/AUM9mTQELrF8ckVQKHTVQLt4QhBCtHoBLYmCXSpzbFQy2Yg1BA8H3DwZ7FXpJUmS
      TeciOofm8vPZqYbS2uc96jhSyFYNY6PH5gNlb3/vPa5c6uUXX12hR37DeP8CR8YSkhSCR9Ts
      jXUsnygzJo9MW5/+yi3J/JLg7TPprksoPBIChvskN2cSlpdSQj8hbriFgSedntFQSdNf0Fgr
      SGy7/JOXVx6FfKq6c6hMCtEyolECqoFCSUGYWJzajzN/yWct8lX8emhGML8Cbx5LsNJw4ojl
      0EHLUk3yq0uKoaLi9WPQW4GvboNVlnPHu3MAXTwh5AmgVCpRq9X2JAls9LPN2Cud2M1G9VpY
      aymVShvuONbuZLbb4F1PRC8/7naw0a5BCNEq4R07cZbjJ88xPz/L9INb/OzirzFWcbDvHmcO
      r1/e6pxshcx0PROUU0Zy7Y7lvddc+WIz5OWjvLkJ7SGprd6vTk2dXPaipyIw92F5CYKKRSy5
      wF71FCUkZc/1B3by0ei0pjTGJQHXMLcYK1rNXYWl7EkKOpfXaMtb59hox9UIQSiLUk4wzgny
      QaWc8voZw8ys5Refa06Mw1f3DKP7I+6tdEtAXTxBCCEoFApYa3edfbNZkN9qbT1nF60tLT0u
      tNat2YOtHHMzg5DtYKfXsFkyjePYSVsrRbFY5qXTr3Pk2Mukacr7//A/cWzf148M4tA5cCaY
      vCvoq1rKBQBBatqCdLlMc/76qYVaZGjGrlGqpKDoScrZShnaFEdrLZ6SeHJNUqQd+FuvIwUT
      +zVfnY85MOHRnDHIoseg9inVFD0FR3BdW6nb7m6lPYVssa1k64J9mDGB8nJPQefn3n7+Rq8m
      RL7Dcl+5YJ9BUFBwaJ/h0FjCF5OWyTnQgzHLtlsC6uIJI28Ix3G8J45Ym5VOthJQO3cNu5EI
      8qRy584d+vv7tx3U89d/1I5gt5JGjs0SamfTvVartRL7d37wn/Or3/0fvHPiBuXCw011KWg5
      UikBZOJmswuCc8dcszM1bhArD+A60+9XmZxEPU5pJpZ6lJJYt/pPjZN6K3mSRmKZqccsh6nT
      J/IkgyVNb8GZ0OQicMY6+Qpj4eWTHp6EsSHJ8HCJW0sRYz0xidX0BZoDPR77KrpVQ4d283fL
      95OO6yafqm7/vJFYFpsJK5G7dl85aYyeQLXkqzebrZhdFAz1mVaykMLdz0CK1g5JScuB/Qmi
      EjPbSKgtdhNAF08JuzUd3Im1wftxj9P5/eOUrPIm8Pj4eKRrNf4AACAASURBVEsa41HY7uut
      97gnNfBmraXZbNLfP8j3fvxf8Q9/8z8w0pdgRYGRyhzNWLEcVukt1phbVpw5tEQhgMW64dPr
      bonbV3F170ZsqUUuyGecmdbUqhSCpdBNDTdTQ5xC0XMBrui5pvJsPebOcsx8IyEx0Bs4G0dP
      uoAK7ZW/K8ms1jsaLCl8HTBc1mChEkj6CgpftU2Jcmw12eaCdBacvIbtSAjS7WrqsWE5dEqj
      YWKdyBsaT7mS0GY7jeU63JqGV04bEgRSCrQVaAG+FgTKme/YrAeRWMNK7GQ4ugmgi6eCXNen
      c6W9m9iNlfBGpaPtBOcgCLh+/TrVapU0Tbd1nTu5J3sd9DdKrtY6j+Oe3j6+/8f/ijQ1lEol
      7t29RUF7HBwZZW5uhoMCrk7+kn59hct3BIfGLEfHDVqKTBrCUI8N9cQ4u0Xc6j/IZCdWMpP3
      OM29CkSrpt9MLAvNlJl6wr2VmDA1jJU9Ai3pK6StBJAPfsksCueflCQrn2hJy7YyyMownde/
      0/umsKuYR3ntP80MdpqpYSUy1CKTKZ66e2AsbLZcunhdMD6a4mmLSd0uw8uuy5NOksPLBPi8
      1gS2pOqpbgLo4umgsxm614NPj4vNdgSwedAVQhCGIUePHn3ihjBPGmmasri4SKVSbTXUDx0+
      2nqvJyaOYYzhwMEjfPrpefA/AnsDLeMWoyYvz8SppZFkdo/SEgvwlXSqpUBBg69UJoks0cI5
      jqXWEiWWlSillhj6A01iOhVMs9W4cFOwhrx+DlHmdhZluhC5w5j05CqLxZ1CZF3kvFfR+lxl
      5aC8nLUYpixFacvIfrC0cZheXIHpJcFLJ9u+yvmcgpOQzktAAk+5uYveQBGl1kl1P/5lddHF
      1pHXj621LSrmRiqfzxI2a4x27mDWXkOSJARBQK1Wo1gs7v2JPiZ24z1I03Tdwbqc/SWl5LXX
      3uDkS6f46urnXL7x15yZiFHCOWt5ylk/apnPCrhVrRbgafeZyZVGtXTCc0VPuqCmJNVAMlr2
      iFJLb6AoarcKzuGCIwgryA3I8l1ElNpMgA2wEk/aTD5h73orSrhehWwKVmLDYpQSZxTZsqfo
      K2oGi2rd5640QGuLVo5im2aN4M53sbNvUdCCnoIiNlDQ3R5AF08BOSd+bc3+WU8CndhqnyCn
      f87OzjIxMbGjieOdaP5sFWvPeS/fg9YkrDHU63Wq1SqnTr/GL/+/97F2Gk9ZAiMpe65UYSyE
      qVm1qvWUW9Hmq1uV7Qxym8eBkibMVrepgYrvLCN7gnYRJdcsEtlOQNAuy9gOZtBO78J2+wRS
      uJKMwZWCanHKSmyQwFComasnVHxnrrP2NYZ6YdXGMntpweodlbRta08tnAgftrsD6OIJQwjx
      UAN4bYB7XpJAjvX+yDunaUdGRlhYWGBubo6+vj7ieOs6x3sd/Lc7NLabaDQaNBsN+ntUxooR
      FD1QUrXq/9aqliWlwQWv3I1rbWNUCRgqaXwlqEUaY52iZk9BUdCr+Zv5it9aiIwzu2/GLtkE
      SrYaz0puLGm9HjrnHfIks5Xni+za8rLTUphSUK7pvRylq+YebEcwn14SFEvt+QQlM6aSbVtU
      gqO9xsY12OebKSuh22V0E0AXTxxKqVaNGNYfYnrekgCsr78jpSSOY3zfZ3l5mcHBwW0lgBcd
      U1P3qPrTLTN1KZxQXM5aMRlH3liBQLSYMxsFVS2db3BvoDpWwE5gTQqng5MHzyQTXmsmbe68
      BXzpJnA96fwNtkr3tNb1GnKGUYsqKh9OAp3DaDk7RwpBSUuqvqI3MARKPnSt1lpi48691rT8
      +qLke6+lJNaiRW5KnzF+Mp8HmVlyWgvN1LLUTLmzHNNMuyWgLp4CpJQtt7DO0kNnT2AvZRn2
      EvmKPU9uWmsePHiAtZbx8fFtB//dEIZ7ljE6Ov7/s/emv3WkWZrf711iuRt3kUrta1VmVWbW
      0tVLTXt6Bh64x2MbxnzxAAbmgz/6X/IfYNgGDI8HA/SM4W70zLjX6q6syqysTG0lpZQpiRIp
      Lpd3i4h38Yc3InhJkRIlUUtWxwOwkuSNG8ul6pz3Pec5z8Mn1xIunRrVQ1bh89udnoVd9c2j
      TPwGvn4I6KuDgq1JaKj2YlUqkEqcCxOzo8IyyIP8shShvERZZmpHTwfgwzC98q9cvarEIbx4
      SsTNlQnI+t1koUpPhPkkGN93I8lSSzObhGZ39T5bJq7+2CMjh1COwgqkCn0SISErexlVUovK
      5xjljvs7OXe2cjYmDQ20wVvCtCwE7NXmmU4E38YkAOEZlFJYa3n8+DFXrlxBSvlSxjjPSgLH
      PQD2JmGMIUlb5NGHZMXPaCXh99XqeFoKWXoCZVMcrR1bOPhqK+fGkwmPhgWZ88zGitO9iPNz
      SW1KPywcw8IyLsLw1VwSlEkrw5oXQZWwjK/cwspeQxXgxe7zhR1I5doVJoAzEyabu7GiEykW
      WopTvZjlrt6dQyAwl4zzbI08KE9uHdYLChuM4733ZEVJp80tjtAnEQLWhgVrY8uDQcHINDuA
      Bm8RcRwfasl4EAf/24SqxHXjxg3Onz9PmqbHXvrZzz56nf2C1wXvPRcufchXq5/x/rnJHjpo
      taquIKuG5hEecSezPNjJubk54TfbGbnzLKY6BD0pODcTl3IJYadWB2devvkrys5rqP0H2H0c
      /ir4F67U67Gh/7CThyQkRRCFS5RgsaVZ6UZ0or0PXO2O0hgyIxgVHik9sRT1riIzYZcwLEJj
      uR15tBRMjMdYVz934wnc4K2hkhA4SAr5ZQTR3iXEccza2hpzc3PMz88fq9/AYRIV38Zkaa3l
      wsVLPBpeYXuwt0RyVIRE4Uu+/249f1A4nkxKi0U8a+OCx6OCJ+PQAJUiNHwTJenEQU8oKWmo
      6gUjY8Us2i1VlTMEYppZFAJ3UZZwcuPJjKefhTJUP7f0M4t1YTfS0vJA+YfqWt88Esz2HMY5
      snI3MzYunNu6PUYyhQtfoTQVWEdCNI5gDd4ytNbMzs4yHo+fEkv7tpaCpJT0+336/T5Xrlyp
      yz6vuqM5yvDZflnpbwOEEHRmTzHOv2DGu10WjRDIusRFrZ8zjarxmtsQ/EVZvvGEINrRCiWK
      2vPX+WqCGDqxpB2FcoovA2OsQiNWvcRnWN2bF2KvgFv5fVXvdy7U8fcwewi/z61HCV+Xhvb/
      laskY63g0RZ8/D1XN4Wt8TgXykChnyFpRa6muRrn0SJoJq10ovDzCz9lgwbHjEogrmLK7K95
      Vwqd+6WU39VgJ4Sg3++zuLiI1roucR1HSet5739XP5PDUH0mSqfkxdMrf0+Y0PWEGYCwQi9f
      KwPqqKx3Z+W4b6IDdXOppbk4l4CAtVFBN1acbEcstnUQmBOCdrzf4EUQSV54B1A9i8TXTKNp
      zaHqGq6ks3q/S91saVkavQR+viob0IkO8w31Z1Emu+FYsLkj6bQ8SSRwhQir/fJ6WlJORouy
      IR0awo5w7ZYOzWVodgAN3hFU8wFpmjIej/f8fnpQbHo3cFSlzDcN74PV5LT95ZvsZxw1Cbxt
      ym2aphhTYEyB96JeEZflaawPLJ1JEVbEUkBal2lkuWr2jI0ryyih4dmNgorme90IXYrAbU9i
      RDknMJ8G45W4TChaij0r7aqGv/9zOepnWgm/BeP5g49TskxkAtIozCnk1pM7hyRIXLdLKmqF
      1SeCT24KrAiGOlcuWiIJeSn+pkRIkloKUiXJSgbQqLCsjQzjwuEJSSbVQSCuSQAN3hlM+wXs
      9w6e7glUNNH9QnLvShJwzrG4uMhXX33FgwcPeO+992rT+jeBF/k83lajvWJE/Yc/+b9py6/x
      LufsxTKxU/LdrWecO3YKx8SEUobOQ3DrRKGGbZxnJ7P0SxG1asUdK8l8S3N1UbPU0exkoS5e
      DXolWtbBUsldQTkIu4DKvazakQTpCF/TPIUQtUz1fggh6mP3zZ8F4xcRGrKV12+kBCLe9TEQ
      ZW+i2g0A3F8T3HoAH39gEMohpC9lHwQ6UKTwQKJEOT8gcCZ8bo9HhlubGYPMIgTMp5qllmap
      rZsE0ODdQlUOUkodaBozXRKq8C70B6r7EkLUUhcXLlzgk08+4fTp0zUr6E0E3BdNhG8jCTjn
      iKKI3/nJH/D1F3f4waVtpAr3oESgOubGMbaendyyk4UEkGjBRDkyG+r0uQ3Nz1ER2DRFGUC7
      kcT5EGgXUk2qQoJw3hMpURqu79bqhRDc2pjwb29t83BSAIKFWPLPz89wdT6tk01mwm6k0u/p
      xIpIBiXS9ZFhJwuWljOpYrGl6gBe1e4F1Aqk1lMmkd3yj2eXQVSb8Bj4m18L/vHvFiSxJ3fg
      XPiQnAhBP1aUUhlB98h7GOWOhwPD7c2Mh4NdBtrEFKgyATUJoME7ByEEURTVPPqDMD1JPK0x
      U73/Te8G2u02URThnKt3L6urq5w8efKNB9iXSQDw5hNplmUsr5xip//HfL3277hwclg2f6uA
      KZDs+u/iQ9DMAxG+DqKFhcw4NidBNqGfW5SgZvYoCYkOK2TjQlII9fVdKehbmxP+l8+fQKrp
      LbRBQH9s+N9ubfEvz89wYTYJfQbrSsloQceoetV9ezPnN5sTnozDtVe6Ee8vppydjcv7L1lB
      +Fr2QvvdxnbF9jnoL+ccCOGJo/BeJUSYLq4HyHbfVZWMCucZFo7NsWFrYvcMT1SCd5O4mQNo
      8I5CSkmn0yHLsqecw6YDfLWqfttQSqGUQmuN1prBYMDq6ipXr16tyz/vst7R2yoFGWP4zvs/
      5LNPNlnf+jNWFizOhxGqJBK0jKRwCi0Fhd0NmKrkvEs8WsGgcKyPw3DTyIRVcDdWzMSKXqLK
      FbKsJRditesj7Lzn393uQyvi1IkOczOd0MjfGbK6PuQ/fL3D/xCrmlefWYcWgrnU125eNzYm
      /PLxiPVxgRSCU8O4PEYx39oNs9N00YNQaxIRLCFTLRhNBN2uR6twr0KEpFAxhSr1z+Ca5vFO
      1Cwj64PRTr218JTlp9AobhJAg3cWlZduq9ViMpmQ5/lTPgLvSgPYGEMURfXO5ObNm5w9e5Ze
      r1fvCJ4lGvcmcZAGU/Xzm74f7z1FUTAzf471ryUrC7aWcmhpiY1DuaVwco/GTtC1qQxTQm2/
      cJ7NiUUKWw5SGfq5ph2H1X4lp8CUJSOEoamNwtLrpSzM9TizeBEtNN9EdxhNCjYmYRWtZQjQ
      T8aGqEwgqRY8GVvu7+SsjgoMgd5zf5DxaBTTz+yeBHAYnPdsjS03NiY8GRmsh8WW5vxszC8+
      T/jBB8Hu0ZdU0awIrmi5Db0KKSF2oCNBYV3pnOZxVtCOFJk1WBf6DUstTTdWtCLZJIAG7zaq
      AN9ut2td/WlefTUrcBjz5U0EtDiOieO9TujOObrdLlEUURRFXcp6V5LA/uu+zSTqvSeKInIT
      AUV9P1pAt/TEtX63ihGapY7Eito6Mi2NT6phsJ3c8c1OQVw2eZdamkQLnBdP+euGxXH4vZSS
      lmwTibTs6VBfOFHBoyBWAnzQ25mY0Kw2pS8x9T3u0jyPwsoaFY6bGxN+sTriwbDAec9KO+LJ
      jifzmvkZX04RhxX/xIa+R24cxnpW70N/O9zquQuCQjp+/bljO5MIH7N0QpA5RzuSLLR07RXc
      JIAG3xoopeoVdUUVreijzzJlOczS8Vl4ESplFEX1z845pJTMz88zGo1YWlpCSsnOzs5TK+/X
      Ffin7TaPimk67dvYBURxQuFiYLTntWm2THWs84LCBYvDRIUySC9WzKca62AzM6wOczYnwRx+
      bDwX5mIuzyck+2k5lNaMzjHODIPBkHv6FlIK+jsDRhODKxyLreALbLzHOMXEhElb5z2dWDKf
      ahZTzeqoQAk43YtZaGlaZe/heX+JrbHl3nbO9c0JW7nFeVjtOx4rzX/1vkLKpJ57MC64nk2K
      sMpfe+wZjwQf/0BRGM+o8Nz4wpEsWmZji3sokJOIuXlHW4ep52B32SSABt8yVFTRNE3J85zx
      ePxUwDuIITQ9M7D/mINw1BkD7319D1X9X0rJ3Nwcd+7c4ezZs2itax+A0WiEtfa19wOmE+J+
      qY3puYrp67/NnUgUxeQ2fe6xFc8+VqJuFAsRTGC0DFO8gyeWkXEMDQyKMRMbmrctLTk3Gz9F
      3YyV4L+9OMv/cXubB2s77IwmCASDccHOdsYfnmhzbjYJ9E8AD4M81NFjFUosVxcSurFifRyc
      zU52It5fTJhL1ZHE6zLrGZnAeOqPQq8jEo655YKkHVTyqhKYc568ZCRNjKc/8CzNC55sOr55
      6GjPeAZjh5wvMBbSeUHxWDO7EhJqxThaHzVqoA2+hagCV5IkCCEYjUZP9Qb2fz8d3Pazh46K
      w0omzjnG43G9G4miiJmZGYwx5HmO1nrPTmX/Od70kBjsTQoHzQ286WSgtaawyZGOFUKA96X5
      iSfVkve6Ee0oDDc9HhVBA8g6cu+5t5Mzlyg2J5ZTPf9UApBC8NGJFuPC8Sf3dlgfFUEawjn+
      YLHFH57p0o4ExoWmbqj9h6SynVm2M0tLSy7OxXxnIak9CRZaGiWfvxPzPjiYRSik0UTKkCbQ
      0WGITQlRGuSUtpXl7MNWZsmNx/jwOlFIEJt9T/gnHj4f4cPw2MR6RpMwLJc7x9rENgmgwbcb
      URTR6/X29AYOwvT/CZVS9TAZHBzsDgrKz6uZe+/rZrBSivn5eT777DNOnDhBHMcsLCwQx/Ee
      zaOqj/E69Y6eNTNxFKnpNwGtNbnRHPWS1U5ACoGQ0I5CUzNRgvWxYSuz3OlnIKZ19w8/eaol
      /+hMl4uzCQ+HBYV1LLYiTvdCYqk+mnYsa0OZr7Yzfv5oSL+wxFJyrhfzxxdnuTAXo0TZU3hG
      7K+Gz7wH4RSPHsacn0nY8cHg/kRbs9wJaqCj0qe4sJ6NkeXRwLA+NjgHXkoePZIsLEHa8YwG
      Dp94JpsSPWMZPBKM05zNrSCM5zzoWBIlzSBYg285qpX1zMwM1lqKoiDLsueqb1ZDW/vLH8ch
      L5FlGcYYzp8/z8bGBkVRsLGxQb/f5/Lly0gpGY321rpfd1/gRZVDp6eu3wSSJKE7f5E//5VB
      YhCiQGDKL4vEIoRFCIfAo6RHqdJKUsKwmOXCiW3mZ+BUN2JzEjM2jqFxnGhpTrSDscpBk7sV
      tBScnY051Qs9nf3HCulxSNox3N7K+MsHAzYKi1SCkXVsPBmxlVn+9fcXuDCXPNdIJkwVw+YA
      /vJTxR99P2IiW2yOYzLr6ESK5Y5GS8Ewt3gP25nl8bDg8bBgfRwWPIsdjRaSX/5CMjEOP2/o
      dwu2vlboR5JJVGA6OVhQkWS2EzE70yKJmwTQ4LcIFRc/jmMmkwlFUTxzZX2QztBhOCiAHpYg
      qt2FMYZOJ3DKt7a26uP371Re98r7qOebfqZ6cGlqgvl13R+Ez+T3fv8fk+e/j/euTsS+/Ps5
      vyuB7T04Z7HGYKzBWUP2+D5Z/qe0tODsTERmA+NlYjwzseTMTMzJblTr/j8LhyUJIQSR9Egt
      ubud0y8sSgl0qU5njODeIOOL9QmnezGJPvxilTS08/BoE2ZnHacWPcbFnOr5WqHU+TBlLGQw
      lhlmYfJ5pwjlp7RsMncWPDOLjo2x4eHIsDEw5AtFoMwKQEKaas68N8elU99hjveBqEkADX77
      IKWk3W7XQXgymRypPHRYKeZlg1917O3bt+n1epw+fZrhcHjg7uRtll/2X3P/7uewJvJx3uO0
      heZ+HNTTmZ4BieOY9Ue/odsOCexEJyLWkuVOhLGeViRZamu6sXxluqsUwXpxUBq160iitQLv
      cc5TAE/Ghtx6IrXrBfwUE41dn4DTy57r34SJ5kqkTsvg55uXNNf6L1BOAmtRir5pSbtkNmU2
      eAo8GRnycmDCV+9RgpPLPb539g9Zu3uaz+89QNCwgBr8FkNKSRzHRFFU7wistc/dEUyXhvbv
      El4kgEgp0VozGo04derUkUpT1TXh6aDxJkoy1XPuf96DkuLrSASH3dNB31fB/+uv7xJlf8/S
      mdLdSwoWWpqFIwxgvSxOdCJiFWSYjbH1vXkP7XJV7kv+pyt/X9FBJb6cQwA8/N2XgqsXzB4J
      6ul/ZbKUrIg1zKaqnACOWWwpIiWYTRRCCHYyS+6Comg19VtBR5qLyxeZrJ3jl7/4rJYobxJA
      g996VNTRJEnqRu1oNDq0+fsyHPqDzuG955NPPmFmZgat9TOD//5AetCULvBGhPDelQGxo0BK
      yZ3bt3n/xOj5Bx8jPlpu8cX6mN8MJpT9WbzzvNeOuDyf1IYy06qintAUdj6ohDoHv7guaLUc
      ywt77S+F2I3gQe8n9CgWWppUSzqxITM6mNfHspyIDmyiXqzYyYL+jxCiNsrxMuHJdr7HgrVJ
      AA3+QWA6qCulkFIyHA6fWlFXTWXYG5SfR9Xc/1oURdy9e5f5+XnOnDlT7zwOYw8ddO79wX76
      99PXPM4kcNCq/1kN6tfdvH4WqmRuzYToDUey8zMx/+LSLP/xa8Ht7QzjPO+1Y/7obI9zs0nN
      GqocyCo3sMoysrCCv/9SYvB89F1Xm7dUSaDyRgjzALvieO1Y0i2/jPO1qucwt+xklrlYYdvQ
      iSTeBxG8fmbpW4c3Y5bmYtI0ZTKZhGnrN/uxNWjwbuAo9NGXLbtEUcTjx4/J85yrV68eKGb3
      POwvRx1Un5++t+MIwAftfKZLQYeVfN40Y2g/Wu2UwuyrebxmaCX4wckWF+cT1obBcrKlJXMt
      tWd6uVr9Ww+T0tfAe7j7QCJix4+ulOUgF1zMKmE363ZX/5VsdCVhEStBOpXxcuOwTrLQ1izn
      jkRLchtcz9JIMioc1zYm3H70FT+8fIqPf/g9HjxYI02TJgE0+IcLpRTdbrf2Iz4MLyKRkCQJ
      GxsbPHz4kA8++OCpss/LDF09K2FMB9+XTQL7mT/7sZ8ddNguptqxvMndgFKKy1c+5Prf/xV/
      MLN9LOfcGUE7gXIjeCikCANfs8nubIDzvmYaeXZTUmGDNHM/t1jv+Xpbce4k9DNFr7Sl9OGk
      gMdJEcpGMpSWhIDD/hkIIUqjGZhNQgIaF8H7IEwqaz6SLb7cHvHZnb/mytlV/ujCd5j4J00C
      aPAPGxVjqBJtq6ij0zjqxG4cx2xubvLo0SPef//9euhrP45SVtqfKA4LzofJOhwVR+l3HGU2
      4m2xmIqiYH5+nsLPYe32c4P2NAKdNARW62CSwyfXJZNMcOqE58oZR6zDnMFBjz09yAWlppAQ
      taWlKs/7eEOQdhyDwrI1sTzY8DwZec4o6E/A2CDw5gjeAt1YEuugWKpsqP1LUck4PH0vomo0
      U+ePesbACEg0rHQiZlLFtY0xv/j813yeXMPaxhS+QYOaTRLHMc45hsMhRVHsOWZ6dXtQw1aI
      IAo3HA7r80032/bjOOv307uA6URwlHM/a57hoGOr6x12Hwcd/zphrUUpxdWP/jt+ef1/53eu
      PDnyezf68Le/FkgJ3kvwno8ue84sO35zX/AnfyVpp3B2GT68vHdR4Kfq+tOoV/JAlofz/+a+
      5F/804Lceoa549f3DR9cEAwLRd4Pks5jE2ikCy3FmdmYlW6EVAIlfZ1gtORAaYn9xS9bvkEr
      UTePYyWYSTVnZ3psji1f9wvWR0WTABo0mIaUkm63S7/f31O+eVZ5pEKWZZw/f54bN26wublJ
      r9d7ocbxs14/at9g/89HSQQvoh76vHua3pG8qV1AnuecfO80cfyv+U9/939y9eQqhZWszBWk
      h8gLbQ/hk+uKf/SRC3x9aUkiqMYQrpzxnFvx5AV8eVfyyTXBd855uu3wuvXlCtt5HqwJjIWV
      BeikYeXfHwp+9oXgo0uO7QHEMnj1RlKQKEWsPJn1PBoatjPL+sjgCVPMtmzeLrUV0ol6dV/t
      BAD6E8vNjYx72znO+6BG2tbBaWzK6hLC3ID34V5jJYIlZpkYmgTQoME+CCEOpG3u7wVM190r
      Zs54PGZ9fZ1Op3Ms9zK9UzhoIGr//U1/fxCL53klp8POvf/Yw/oAbwt5nnNi+RS/90f/E19+
      /rf0Zuf588/+E++ffszFU3uP9R4+uSa48J5jYeawmRBI4vD1o+84Pr0p+POfS5bm4OOrFuMg
      N3DtnqA/DIH//rrmd75rKAr49Kbk979n6aRhiCuNgj1lIhUdLZlrOQrnyIxjbWR4MMjLcpJn
      LlW8l1lmU8XqTs79nYLMeJbamjOzMRL4f2/3+fnqiJ3CBj8EJTndifjBSjskGRF2NpXPQWHD
      18CHaeHNSVBMbRJAgwYHYP/06zQOkkkoioKbN29ireXcuXNsbm6ytLR0rPe0n///vFX7YYNc
      z0sCLzP09qabvwddfzQaEcUJv/P7/wzvPTdu3ObaV+tceM/tWRHfWw12k1fPHI21FGn4yQee
      H3/X89Wq4C9+qeiPPFJ7rp7z/PA7DiUED9YM/8/fKE7Ow8kFz9Ks4Is7gkkRSjC9RDETe1rS
      M58KxlbQzxzO5zhCGWdifa35/8XjMX96p8/q0JBZx1yi+HCpxWyq+ev7QzI8Mg5y07nz3NrO
      EELwvaWUThQmhLUSGAfOO6yDYe7YmliGxjHMmwTQoMGBSNMU59xz2UHVtO/a2hqnT59mYWEB
      CNo2a2trrKysPNVPOC7sp4dO//dZ93zU3sD07mZ/InnebuJtJQNrLdZakiTho49/zJ/9+19z
      6+ucxTnHk23B/ccC5yX/9MeGZ+T4AyElXHzPc3bZl/LM4IWn8gI7uwxnT1iSsoF77a7g4RPB
      P/+DsJNsRZKVGc1yR5B4y1w3WFpuTSKs8xQOzvQi5tLgP/yf7w74aicHKRBaslFYfvZwCAgm
      3qFjRRyHEG6MxTvP2qignwXNo14iUVIghaewwXVsfWRYGxmGuQseCsf42Tdo8FsDIUTNDhoO
      h4cGNCkl1lpWVla4desWy8vLjMdj5ufnefDgAadOWtIjyQAAIABJREFUncI5dyQJiFfBs+il
      B/H2X4YttP+8B13/be4CpmGMYXZ2nnPvaR5tFjzeimgnhu+c86wsGPQLsIWmIUTYESgVbB8r
      nn9F04wUCOHxXvDVA8H7Fx1ae8Y5IEAL+M4pePhI8cMPBO9ZjXUJc6nGes9Cqjg9EzE2jtVR
      AUKgtESK0GcYF8FrUhyUvITAehgbR2okufEo4YDATNrJLcMiNJ0LF6aGmwTQoMEhqNg8SilG
      o9GBK/kqMEZRVMtAA3Q6HTqdDteuXWN5ebk2iHld97kfz1qFv4qOz0HJ422Xfw6CtZa5+XlU
      eoaPzl8niSzt5xuOHRlShJW1K/n34Xe7bBwhPB9dddy8D39zDYQUxBp2RpJWAo82BR9chFMz
      MbGWnMiCDeRcqlhsa25vZmEYrKJ9il19IE2ZeKynKMLCwjmPd54klhjrGeWOUeKwXuK8Y5CH
      r6x0R5sUjm7SmMI3aPBcVANjWZY9peNfvd7v9+vdAIQG8fnz57l//z6bm5vMzc291nvcv0I/
      SkB+mdmB/b2Edy3wTyPPcy5/759w/959Prywc+zn976ig3pAEEnqVbj3MNNzfHDZcqkIk715
      Iei1YLMvGeeQJKGU1NKSuGT4tCKJkmGgaz7VDIY5tgjDCt552kryR2d79DPDp2tjRlm5qPDQ
      0ZKllmZkPFKElb7zoc8xMY7MeNZGhoeDAi+gXzSOYA0aHAlCCJIkQUpZK4saYzDG8OjRIwaD
      ARcvXqyDqnOOoiiQUiKlrPWFXgcOWpG/CF5kKrk65l0O/BWcc5w6dZq/uHGVbx7/kjPLxydV
      YZxnkNu6lh4rQTdRdKPweRbOMzaWcVlykVIQx56h8cjEMrKS+1sG56GVVJPUIXmkTtJLFD9a
      aTO+79jMLThHR0s+OtHmJ6faOO851Yt5uFNgfZgUVkKwk1syG5JSP3P1lLFx0M8tq8MCLylV
      ShsxuAYNjoyqJGSt5bPPPqsZQCdPnuTKlSsYY/aUiYQQnD59uj72deJVZSCeda7q3t+U/PNx
      QSnF6upDUneD5fnj+/yd9/Qzy+bYsj0J2vuJCuJsWmjaUZBxMDaYvY8LR6SCzs+kVO00SvDn
      nwHec+EUnJh3pFMGMq1I8vFKi1Yk+KZf4AkN4ksLCYkSFA7eX0r4/nKKdb4e7hrkYQdqXOgX
      pFoQyaAIujUxOECqUAI0pmkCN2jwwkjTlJ/+9KcMBoM6IBpj9gxAee/Jsqxe/Vffvy3BtOOA
      9/5bdf9KKR7ev8u5E0Pi6PjOa0o65fbEsD62TIyjFyuUgG6iaJXXkuWqPFYhIQwLx6gIjl4n
      VjytCdy6Dw9HjpH0zCUKKQStMhEkWvC9Ey0+XG4RKYFAMC4s/XLnYawn1oLMeEZFYBRl1pNb
      jxah0TsxjlwIxsaxlVmMCzMCuZWMiiYBNGjwwqjon4c5e02vkK21aK0pioI0TV9Yz3/6+Ne9
      8j7qoNi3BUIKNte+4DtXHcZR6ui8ur9B0Pj35M6T2dBcTbWsZSEEEMkwzeu8J1LBxGVUuJLr
      Hywdv1rziLZljMeNQ/O2HUvmUrVn6hcgkoLchaA+zB1PRobMeNJITAV+R6okmbXsFIHx87gv
      EaWcxNZQkHkPCsbW46NmDqBBg2PDYcGlCuL7hdvg2YF1Woa5OvaoK/AXpXo+r7TzbUoA3nuM
      t3zzYJV7W3dY2BrRHQV6ZScKNfFXSQRSiGDdKAVtLVHlqj1Wu2JtkRK0ACkUDijKAO28Z2KC
      Vv/CjOXaQ8HjbY8SnpaCxZan8L6Ufxa7LmLl7RoHWeHr3cTEBupRtfJ33jOYeB5tOawX5MJS
      GBemgWOLSgQjJ5FxYA01CaBBg2PE/sDinGNubo7Hjx9z+fLllyqhvGgwP2wC+DB8m+r6R0Fu
      C+5tPOA/fvqXrBaP+fqWYaUd8WFZTplvKV5lH6AldGNJ4TRaipJTL5lNFS0tS7tHQazCyt15
      IAo7EC1D8hgVYXq4nRo2J2EnsdSS3L6nSArJwgVop2F1n7uyzFg2dxHhvFF5nspHwDrP1shz
      d8MyUgWokjqqwCpQWqC0KAfgBM41cwANGhwrDksA9+7d29MDOKrUwosItVWYlm8+ikb/b1Pw
      B+iPB9xZ+5pfr95gVIxRuefhsEAKmE8V3Tgl0a+2A+glCiGgHUmcCyv+diRI9e7fSopA3q/4
      X7OpQklItWSYu92dgpbs5Ja5VHP1Ikz6kk+/jLhw1qBjh5eBSQRBhE7LcF1Z7jZy6xEyDIqt
      bkpUByJbWkECXoCQIMqJbiEFvtSxahJAgwYvCaXUoRO+00G7CuKDwYAkSfYMhE1rDu0P1K8a
      mN+16dw3hWE2YmO0xdCM64BZOM+jkSkboZ5DREKPDC0FM4miHe26d2kZSjYcIpanpaAbKxIl
      mU09iRLEqiAujd1bWrLcUZx8TxDh+atfC9bHknNnLFFiUTK4gSVaomVo5LYjx3YWmsKjscBK
      SFOBNKHvoKVgUjgKX04QC4kEwkBxkwAaNHhpRFF0oGLofraP956rV69y7do1VlZWWF5ert+n
      tcY598zS0Ito9h/03v33d9Dv3yXsF+I7aFf1rPuPdITJC8xkg7Tj6+ncSAZWzjH0gXE+iLYV
      NjBtnPdIIUi1DFpAftegpSoJQdkgVqEMFOSbw2reOk+qJLMtHXYKwvPTjxwPtx1/c12wlQla
      iWepJ/j+eUGSSDLr6U/CDmBtQ7L+RNCZtzitSF2Qj4i0YJI7VrcznHVYIYLbWFlWahJAgwYv
      icMUQ/cHrMq05MMPP+TGjRtYazl58iQQKKVKKQaDwZ5EcBgX/zjwLiWBaqdUDcxNJhMmk8kz
      dy+dTget9aHSGnOdGYqtTd4/EbE6CRILvURxYTZhuaOJ1QuqwE2hCvzeBxOXYe4YFw7rPVoI
      ssiTmNITWIS6f6wkkSxLciKUcQTQigSRipgxCu+DgUtLh0ngwoYS0mwbfve7nicDsE4yGUs+
      vaY4seBYmPMkWrCxqbmzY3ArOe1YIkqhICUh0hJRSlQ82s4wxu72lFwzCNagwUuhCloHoaKI
      7i/pCCG4cuUKq6urfPXVV1y5coXxeFzrBk2Lzr2u4Pwqu4njQBXwpyej8zznwYMH7OzsIIRg
      Zmam/mynlUghWEDeu3ePc+fOMTs7W89fVJBSYsYZZ6Itriy1udtXWBdq/99dTHmvF9XaPS8K
      XwZ/CEG84t8P81BWipRgYh2RFMQq1OgjJXARCC3RshTsm/qfSEGs1FPMJCXD+RItmUkhjcIc
      gMezumW489jx5UPPlXOO648lcqVAiJBEtKw8LQSRlsSRwLmErHBsDQtcOTncjlWTABo0eFlo
      rQ8d7jpMNE1KyfLyMp9//jlKKYwxjMdjZmZmaLfb7OzsHPr+48L+xPQ6BtT2r+yrZvRgMGBn
      Z4fxeFyL56VpysLCAufOnaOytnzWs589e5br16/z6NEjLl26VPs5QyjL3f3N5/z47ICZXocP
      llIK5+lGgaUTqxdrqE9j+o6M8xTWlfTOwMMPv4eiHMKC0PAVJftHl3aOSuwmk8MoqVXySH2o
      9zsnyZ0P/H9h0L0ChOP/+ltozSg6pZSEcY4sD+fWSpBEkjSWxJHk1EJKN1XkJiSARDdicA0a
      vDSexc6Z5v7DXrnm27dvc/nyZfI8r5PCaDR6bWqh+/G6Sz9xHDMajepyznA4rJ81TVO63S7v
      vfceSqk6OVhrn+mhPA1rLVevXmU4HHLjxg2WlpZYWVmp/Rt21j7hvR+CFJJuEnYS1V/pVXY/
      1TtdKfYmhKgbs2FSt5SGJqh1WufR0uPcrnF8fa4pFdH9qJKDFgKhyyt72JyEncZ2FgTdnows
      4whIBZGRaEK9f5xZrPNEWtJOFIWVdSko1hK8Q5V9iCYBNGjwkjjMOrJ6bf/PcRxz8+ZNZmdn
      mZ+frwPeQaYzVQnkeavh48Bxnl8IwWQy4e7du8zPz5OmKbOzs6RpitY6qGdOlccqA5cXvd+i
      KGi327z//vt88803XL9+nYsXL/LlF5/zwbkdVMl1P85ilxACfJiq9YRVfaJ2E4wqReAIh9Vc
      fSXZM9X7PFRlJs+upWOl/29dUBB9MjHc27IUSegxZCZYVG4NC0a5xTmPVhJjNaCpNnjWeXw5
      ZKZVswNo0OCVoLU+1DVsfxnHe1+XK45ScplmFL3OJHCc51ZK8fjxY1ZWVpifn8daWxviHLcp
      jjEGIQTnz59nPB5z+/ZtwLI9UJxaNMfC9jkInjL5S08rEmipcHiiMsoHw/jAwU+0II2CtMOL
      nH/6+2oaWAlKh68whZxZh1WewcRhjMdOBBtDi06CYYz1ju2RQUuJQCAkGBsGyqTwYBspiAYN
      XgnPYgLtTwDOOS5dusTNmzcZjUYkSVKXiQ4rTTxLd+hdhNa69kPe36B9HfDek+c5aZpy8uRJ
      rD3Bzvb/yCe3/i0/uLT5XOcvX9I17VQ+VnIvdXM/RPVV1vaFqNbqoaxTOE+sJFoEFk4sdxuz
      R4EUu6Wk6TJRJ5a0IkmsBIPCIRQYDzb3jIaWkSkohKVlY5SVeOcxeOLcY7wkLzzEQOLYxuBl
      QwNt0OCV8DwtnwpVT+DOnTvs7Oxw7ty5+r1VHfygc1alktelJHrc5Z+iKFBKEcfxa/NCPgjO
      OVqtFqurD7F2zKOt+Ejv8wQevXG7K+/Ih3JOxdqpUNE4fUnvdELwZGzYzi3OhcSx1NJ047Di
      j5V4ZjLZzxCrv2eaKbT7u0RLupFiWDh2jEVrCYUgw1BIg48hlhqvwPjQL6DwTEYWW4ww3qHG
      kpbSRAmoVpMAGjR4JRxFzK06Jssytre3+fjjj+v692HvO+jnd11OWmvNzZs3OXv27Fu5zzRN
      eXDvM061P+GPf1wcafVvHeQm6O0YF0TYnApllqDkIGpGjirt36s/z5frE/7N7S0GiMDAKSwX
      2xH/6rvznCiHvHYbw2FQbPrazu8mHTn1+jRTqCr/CCHoTwyPRwVfboxxImj7FNZilUfLICUt
      ZSUgWPZKIkeRG6y0eOspfJCWmFMJUjVN4AYNXgnPW0FPJ4C5uTmcc7U/QPX6894/3Qd4nfTQ
      V0EURWxubiKlpNvtHpnRc5wQQrC9PeTDleebvnsfVv0T4xiZoK1fuFDHr3R3qoCsS2nnVMtQ
      ygG+fDLh33zVJ5pJuTzbQinJeJKzujHmf/3yCf/zxyeIlcJWDd1yeGxa1dOzW+pxApTwe2ih
      QoQmtvfBgOb6k4zP1sY8HBYUXjE04COIRJiVUDowe4QQxDqI0OXGoaQEUWCK0BwGj0Pgi6YJ
      3KDBK+Gocs5CCHZ2dmrXMKXUnqlfa+2hw2Wvc3DrOJKJlJLxeMzq6irvv//+Gy39VLDWEkUR
      3/ngJ9x/dIPZTn5oEzj4+IL1YdVvXSmlDCgfDNatr1bgvnTUClPAiZJ44P/7ZoBPNSdP9Di1
      dJJYp2wOn+D8Yx49GvKbrYwfnWzvpX+K3aDvCbMEda1f7u42phHkox23NjI+fTzi00cT1ocw
      EQYXeSQCT9AgkiU9VUmQUqCg1P4J0g9CBF9hjyfDkNtmB9CgwSvhqGweCAyZTqdD5S88mUz2
      HDet939YY/hd3AHEccy1a9e4cOHCW5WWzvOc9z/4Pn965wrnRl/Q6xx8nKdake9SLpUETajZ
      O1smh3LIq7JUBIX3Du/hVj/nxMkOM70up1s/xGfLtGZ+zuZ2n8d6TF5NdLO3oVtdz5XXtr4s
      K3lRN3+rxm9uPXe3Mr5Yn/BXDwasDgoeDzzb5MhIorzEW/AiXMC5Sv1VIoSvGUNaQxxJkkTR
      ihWRFhjrGU1MkwAaNHgVPC8BTFtEaq25dOkSX375JcvLy5w4ceKp4a/pgbFKLmE/DfRdSgJS
      StbW1uj1enQ6nbey+q9Q0U2T9gkGE0Gvc/BnVPH4Ky5/FSgDX1+ghEc5z9i7ugZfrdgzGwTg
      jAuJwFlLRh8ZKSZ2VOo5VWvyvYyhaYg9r+3OK1THWef5Ym3Mn321w42tMRnQN5JxVKCEBF/9
      uwgPVD2pUhLnFNYptAo9AfCkqWJlocP87CydtEtuMja2t5oE0KDBq+AoCaCCtZZWq8Xi4iJ5
      nj8zkAsh6ibx65SEOI5zTPsOvG0IIejOrPDXn6f8y/9izEEs3WqlLUtefapl/ftICpyGsXEI
      KskH2Ol70vlgtL49sXSNZjAoeLI+wA4+I4ojxn7A1s6EFM9KOyrvZy+VU4pqirgs+3hROn6J
      umkMsJNbPl8bc2t7QiHAo8mEQycS5STWOax1WOPKun45gVz+rtCWKFIoKVFKMD8Ts7K4zNn2
      D9gZnWBeFywsf9kkgAYNXjemA733nu3tbS5fvvxMbv+3yZ/3XQn+EMpAly5d4db1E4yye3Rb
      Bx9XJQHnPZkJSTwkA0EsBEIEDR7rPds7jn//5xn//T9LiNqO1Q0LX6UMijH37o14PDsJDeOu
      Y7sY81+f6nBhNqmvscvk2TWJwfk9NX8p9noWjwvHg52CzDlUrMArpA5sHy/BG4+zhNW/DRfx
      pdy18x5fhAE8rRRRpIgjxWyyyLh/jq8eDGi3Ui6e+pCX10Vt0KABrdYhEeYQOOfodDp88cUX
      TCaTQwfJDguox0mvPK6g/S7RU621dHszXLnyAVkhn9LggV0+v3EwzIOp+/bEMswt25kLhjFK
      0I0lM7Gilyg+vBzxm7tBWvqbbzynTglOxxFuaBnYCSYd05M5/+p8jz++MFOzearALgV7aKBS
      BHaRmvrvXt0oQaJDacp7yI3AElhClaVj/WgCVCxpdWJmZlrMzbbodhOEEOS5IcsNeW7JbQ7K
      IGV5zqLd7AAaNHgVHEXAbXoH4JzjzJkzzM/Pc/PmTb7//e8fKBnxrqyoj4J36V6re4mSGYYT
      yULv4MTkPOTWMTFBzjm3nsSGoKpF8A+o5BsiKei1BZMCxkMRvHxbkrlexJUlycOvPYmT/PHv
      ppxd0HvM3J814Q0cKAjnCRISK+2ILzfGbAw9W3aM0x5JafFZdZOFQEeCViui143ptSOUlOSF
      ZXsg2RnkWOPYHmSs76zSW7jOxbOXkUC7vdokgAYNXgVRFD3F5tmP6SBQUT673S4zMzOsr6+z
      srJSJ5JvW/BXSrG9vc3c3Nw7c9/WWoaDPrPx4XpAlfyDcZ6RcYwKT8uFFXckgw5/qM1T1+hP
      Lkg2Ny1zXcmogJm2YH5O8uEZxeoDWF31nJyDSHqkD9r9L0rhrYbTAM7MxLR8zPpgRB47tFBI
      53A+1P+r2n8UaTrtmMWZlPm5XqDllv8mjfUMRznbOxnfPHqCsb9gafYeiU5ZG/WbBNCgwatA
      KfVMd6rDYIzhwoUL/OpXv2JxcRF488H/OEo31XzD2bNn35ic9VGQZ9vMzj/7mKosE1Q7fT04
      NTGSiXF4go5PEH+Dk0uSn/3nnI8+ktx7ALGXPPwKdlqefh+ungNjw/uq+YEXNZ/xBC2hUe6Q
      QOQ1mQ1TvE4IvJpeTIT/ai1pxYpOO2FudpZIafrDAZMsZzwx5LnCOMej9RH9Qc791iatRINo
      HMEaNHgl7HesetZx+4NtpZkzmUxI0xR48xTPV7meEAJjTN3HeFd2AFJKlJIU9nAHNCkg0oJ2
      JDEuyChYF7jzEDj4UjiUkHTbgh98VzOwlo9/IFGx5+Rp6KWSs0sK4QTyFHS6MDGeGIdEhtr/
      IdefRiUL4TwY74PTmHHs5JZtU+BloA15EQa/oGRd4fBluck6jzGW8STDxVVTW6K1JE01hQmm
      BOOJYTguSGJN2jiCNWjwaniV4Dmt8VP97lXPe9RrH9cE8Pb2Nr1e750K/qurD5CTL+m2S9et
      A0oxUgjaOvDpK/pnUUo4QxlQXZBTEBK88mwODZk0DMbB9rGNIEqDPMS4cDweOmIlmU8VKhVo
      f7Tlv3Eh4RTOkRnPg52CO1s5f3lnwq2dEV76QOcsvyqlOOV3zd2zwrIznCDkFpHWGGvJMgMC
      kkihpCiThMMWlklW0JjCN2jwirDWHrkRXNEl9zd8K32gN6H3c5yyElpr1tbWuHjx4rHLVVcJ
      8kVLVFEcgQApS5kNgj6/PuCxlRR0YkmsJK3IkRmHKZ28KgZPRdOcGM+48GxnjofDgm4UkvbY
      hFLPxDgy60l1EGJLIkn6HD0iCDTU3HrGJpjL/2Yz4/qTCZ+sjrm2kZEpi9KyFnmTUiBFlQSC
      jIV3nklm2RahhBVmSHxY9RNkIWIpKYzDuTB3EL4vmgTQoMGr4EU076fVQauvM2fOcPfuXT7+
      +ON6ivaoSaByGcuyrJZffhF10upaL4s8z7HWkqbpcxvhL4Lp3dGLJENPaLAvLCxymyVys0Wk
      Qv3eeV9SKndVOKvgHo4JpTxjHbaUZYiVrD3FAq0zDG8lZR1+J3cMC4cSMDIhGM8mil4cxOX0
      EUj2vpSDKKxnc2y4tZlxbXPMtrEIXQZ8KRCyVCctaaCV4qcUAifDiSaZI8vLCeVSYkJKQRzt
      WkIKBHGmiDIZVERf8G/ToEGDKbzMynd6dTs7O1vKB7gXLgFJKVlfX+fu3bucPHmSU6dOYYw5
      8qr5ecniWa9X7J9er3csq//n0SWPlARKeYSNjScIs/7UFLArg38F60LSqBmVgFaSRFQCbaJW
      /2xFkm4smTMK72FUONZHBZkNBuvWQUtLZpLdZX+VYJ417V3pEkFo/g5yy9bE8WTsKJQrZakF
      WkrSRJHEe8s5ntDI9Qic9VjnQhKzDqUkkQj3a63HWvCFp7cV00+y0ke4QYMGL43jYNFU3sLG
      mDqYHiXwxXHMkydP+OCDD1hfX+fmzZucP3/+0Ma0UmpPuWr63FJKoihiMBjUOkSH7SiiKKLd
      brO9vc3i4uIrJ4BnOaK96HniOMYYSysq9qzAqyYv7Aqy2VKN0zhfr6YjKeohrenBrU4kWe5E
      te/v5+tjbvczDGE7oRF8vNSiE0kSFc5RTP3TMC6oegaxtzBxnFTRtyw1JVrSVoqtIQxsUZd9
      lJK0WxHdlqKVapQQZIVlkltGE1s+X6lj5EMCklKQJopWokhjhXMwHBuMBWkEedfiGkOYBg1e
      DS+bAKYHw1ZWVrh+/TqXLl3as/I+KDBOK4taa8nznE6nQ5IkbG9v14YsWZbtkWhwzhHHMb1e
      r0420/eepimrq6usra0RRRHGGFqt1lPBXUrJ1tYWP/3pTxmNRsdi/nIUT4TphPispOid5+E3
      N5iJJgxG0B9pTi5YkLvmK5UYnPWBtplbeLAuWeh5FnoQK9hjx0XYDcylCo/n08eG3/QneCnQ
      SoH3OOu508/46ESbtCy3DHMbaJ3Ws5NZJqY0nZHQixWzqaYTh6TjlGAhVQy3EtZGG1hl8UKC
      Do3fdiKZ6Sa0262wOxlPcC5jIiy58aUPQLhXrRVpLOm2Ne00Ii7/ngBZbhks5ZwZzyAaGmiD
      Bi+PV+Xte+8xxnDy5EnW19cxxhDH8aE1+so6cnt7m4cPH5JlGefPn8c5hzGG2dnZOkAnSVKX
      maoG9Gg04t69e3S7XU6cOEGn06lF6ZRSPHz4kB/+8If1DuIg8/okSfjyyy+5e/cunU4HrfVL
      m788zwv5oM/gefDe890PfsK1Xxc8+voRMwuXeHDrL7i0skOnBYUBrX0oi+AZZ3D9QZss+X0e
      P/gVP7m8UUs3ZMaRl1NZiQ5evCC4s53hhUBridRVknVs55ZBbpEypnBh0th56GeWnczSz8P5
      IiVoa8tO7lhqazqRREvJ9rbiF98M2LE5yoMOYtLBSEYK4kjTbrWCxEPZL7KOUApSEinBO9Ba
      0EoUs92UbrdLHEWMxmPywpImBpYgmZG0V9MmATRo8DYwvaJ1zpGm6R4vgOnjqkSjlOL69evE
      cczVq1eJoghrbd08NsbQ6XTo9Xr13MF0AFdKcfbsWTY2Nvj66685e/YsrVYLKSUPHz7k9OnT
      eO8ZDoeH3rdzjvfff59PP/2UhYUF0jTFWvvSvZD9Px+WEKbF9J6FPM/pdnv8wR/+N0B45nt3
      L3H73j0mjx/SarcY7TzGWkORryFaZ+ktXOTj733Ig2/O8rObf4bI18mcwUeWkydypIRuLFnp
      RljvgyG7KMtmSgUFzlKTv9pV7JQzBcY6+pmln1vWRoatiUVJiKVkJjGcyiJ6WvPVN4o/vTPi
      Z+YbJGCdwBWeGCgKQ1Y4styEZrsQ5OXvCuMw1uLxKF/SiSnlrZWinbZI45jCmDAw5jStNU03
      b9Gh1ySABg1eFvt1+l8FUkqKoqBVrvD26/9rrbHWMplMuHz5Mt77A5k3+4P+/teKoqDX67G4
      uMhgMGB2dhbvPU+ePOHy5cvPXc1X9/DRRx9x69Ytrl27xrlz5+h2u4zH4xdKBPuHtI6Loprn
      ef0ccRyzsLjE8spJlFIIKerXrDWgZCilFQXnzl3i3OkLjPMJD7Ye84sbv+DLm3/Ne4sFJ9oa
      52GupZiLFd+Mwu7I2NBcrupKWgZev5Ie4UozGFFp/wuM92yOHMMiJ5KCW49j7jyE66M+G26E
      omT3EFQ9jYU8swxGBVqFwA8wzizDsSHLiyAJIQS6NKGXSiCEJy8K+oMdhlozHo0ZTQomyhKf
      k7QXUq4u/bBJAA0avCxeNfhP1+cXFhZ48uQJs7OzT9E1lVL0+33u3LnD8vJynSxeBlW56NSp
      U/Uqvt/v0263iaKI8Xj83Aa0tZYsy7h69Srr6+t8/vnnLC4ucu7cOcbj8Uvd11GC/8t83lWw
      L4pij96SlBIlQ1J11oUJW+tRSlN4y8hMkJ0WXw0kA5FROE83lswmih+d7HBta4Iptfg94K1j
      KdUstHRwF5OCWApitavzXzgYFo6v+zlrI0N/DDvZhB2bY3BIIUvzeIhRCCFxWJzxDAYZznmG
      YwMI8sIymRSYku2jpSSOBKo0tLfOM8kK8mIH72GSG3aGBeNJ8Esey4wt9U2TABo0eFkc1w7A
      e8/c3By3bt3iwoULwN7pYGstt2/f5qOPPkKvP0RUAAAgAElEQVRKiTHmlYbFqiSwuLjIo0eP
      GA6HfO9736Moiqcars86x2g0qllADx8+5OLFiy91P8+71+PC/ufxPmjyR1JTCeNLKSmMYTge
      McxG0OqwNuxzsusoSm/HH620WB3M8HePBmyULJwTLc3vnewymyjakSLVombmdBNFWg6O3d/J
      2c4t2+OQEJQStNC0VIR1YJ3DiTBR3EphlGsy5yhyy9BmZFIBnsK6wPWXwQVMKUGkJUl5HWM8
      uSlwDgrjyQvLeFxQFOF+42gHwVdNAmjQ4GVxXBTQKiD3ej2iKKobs9XXp59+ytzcHHEc169V
      eNkkUF3v5z//OWfPnq0b0gf1H56HU6dOsb6+znA4PLYp5oMmpo+r3Lb/GffvPhId0UnazKZd
      rpy8zDf3cuaSAR0taWlJK1L8lxdnuDSXcK8fdgfzqWY2UVjnseXQWSuStaR0ogRPRoYnQ8fm
      0CMj6CUAAmcVeIfyoacwLoKSqIogaQm8V2SZwjrq2YahdWQ+mL5453HO47xHqTAzMPGGvPAU
      RQj+tkxeQsJolPMIGk/gBg1eBa8akKa1gIwxFEXB9vZ2zdff2tpifX0day0XL16syxlVkH2h
      Ial9CBOzCzWFtGILvWgdPssynHPMzMxw//59zp8/f+Ty1DTddX+AP07Jimkc5Rm7aYel3jy5
      zYmERndvc24252Q3ohNJwBNLwcluYPCMTdDwMQ4mxpUDZAIlPbESCAQbmePzrx3XHjqIPEmy
      +9xVUPfCUQA6KSmrftcjuN3etZIESGKJMZLCwIhSGtoFs3fvHVIKEq3QwqN10AwyVpEXQSNo
      PC7Ic9skgAYNXgYVe+c4IIQgSRLOnTvHgwcPyPO85ux/+OGH3Llzh7t373L+/PljlVz23vPj
      H/+YVqv1TObPs+CcI8syVlZWuHbtWn3vR5XImA78Ry0/HRX7rSqPmlQSHXNy9gStOKWrUvRa
      yqX5nMWWRqug+5NbVw96xVKQi9AEzizYzNZDB1oKJIK//gLuDgtEJ0P73Wevgrwoh75EaRrs
      PaXevwcElfyPINBP250w8GWsI+p7rBe0XIQsQiNYq3CcigQjUWBdYAxNCllrAQmaOYAGDV4K
      VSP0OFCVXzqdDleuXHlq6OnSpUv86le/qvsDB+GoZaHpEs1gMKgNbQ6SonhR/v2FCxf49a9/
      zaVLl5ibm3uuNtFB53geDfRF8KzzPQ+JjlmZXeJEb4FH13/OcmcEBAmI3Dhy60vRuBBsUy+C
      YJxxjMzutG9mJEXuuT8wzC1Z4keCcR74+hUqvR+pZGnXGIJ+NdzlXQj0COh2YpbmUjqtGO9h
      OM5Zb00Yjwu0NkRRSFKRFiQxaClpF22GJmckcxxQRCowomgSQIMG/z97b/YjSZad+f3uYosv
      4R575L5X1trFYhebzSYpckYERUKakQYDAZJA6E3LX6WXAfQiARoJIDUaDYcjsZtNUk2yqruW
      rsrKrSqXiMyMjMVX2+69erhmnp6REZGxZVU2YV8jUJG+mJmbR59z7znf+b5DoWp+nuRKvArK
      u80BAPR6PVqt1q5BsApyR1k5V4lnr+cOA2MMjUaDd999l7t37zIej7lw4QJJkhyaGgonI41d
      JbG9fJf3gxACnJe9mFu4wP3HX7O8kJEUllHmE4BzXglUl8YvAktuBdKVzCC83MTapqPZchRK
      sNDUJMa/f3Kd/oRI6WUflBS0mwHtZoBWCmMtw3GOMY7FuSbnlpeZaSzgnGFj+Bitn/Lo6Yhx
      UuDyAmP8zkdIhQwsrVAgnWacFjhrPK24lCyqE0CNGodAxaU/abnmvZqnUkoGgwFzc7vbW+2s
      aZ9ECeWo783zHK01b7/9Njdu3ODzzz/n/fffJ0mSA++WjrNqP2lYZ8HAu9/7Tf7hL/+KuVlH
      brxo2zC3SAGtwJu3a+VF2iqtIF3KhxoLv/wGVi4aeoVisRkA0E+9TMQwtyTOPqc80W4GrCw0
      mZ+bJY4irDH0RyOctczOdLnQ+CH9/gqBdjS7HzNKxvSH3v2rsoqcHpzT0oIQiFyS5nYid11L
      QdSocUic5PDXNCq5ht0e39zcZHFxcbKarco1uw1SHbc5fFy2TbXaf+utt1hbW+Ojjz7irbfe
      YmZmhtFodKDdQHUNJ5UIjnqs6XsRRg1gjBDlbIbw+kBSCOJAEilvIxlIbzCvpCDLJF/cl8hO
      gQ4tovDlomagaGiJdY60lyOcmMR/Wa7+u50ZLs6+TTN/GxGlDGY+JXFDZtQyg82zPHw6ohlp
      VhodlPTLeWOe+UkY41VBs1zipa4hSSBNPc3Uu4qJOgHUqHEYVA3bLMteyS5gJ6qE02g0XqjT
      74fdOO+7Pf4qUE0Lr6ysEIYhN2/eJAgCLly4MHn+IPg2rnU/SCHL0pzDmdS7hknhxd4o1Ue1
      F3MLS08BnCMxjv4Q/p9fCE5dzJhpFTzu53yxnvBokHu7yfIcuXMI9UzITcBExkHYLqtbmiiI
      WJo/h5G3gYKZxpAziwFB2Gcju81gOGY0zjFFlQD8kVwpGS1KHwFTeKMYI8oGhKl3ADVqHApB
      EKC1xjl3ZBG0g0IIwePHj+l2u5PHdgby3RLCYYL/SQ5a7TzueDym2+3S7XZ5+PAhn376Ke+9
      996uu6iXJbaTmLo+7C7Au4L5JJAmXhMo1hKwaKkQwvP7gymjdikFysL9JxB0c3QrY2ts+cXa
      mAf9DEozl6LsEwjp31PVgIzxmj/jJGE88w0rCy0UIdv2Puujpzi3Tjt8StRs8iRdZ3X9MWvr
      A/r9FJvbsp8AQjrAr/wrZ8osdxSmwMnSB8HUctA1ahwa1eDWq4YQgo2NDa5cufJcEN+L2riv
      TPJ3tJquZKnPnz+PlJKNjQ1WVlbIsuyFe7hfgD6pnsZhk4B1fsbBtn7EOP0Jrdg3fQvrh720
      ZFL3TwvLMLOMcsvtx9A+m9FPLQ96GauDDJRv8goJ1jyjeFYNYK1lyewxbG72wd2i0XiIkpJR
      krC51SfLDWHwCOccoyRncztF54a3Z2MyY/l6K2Vspu+Vp5TiINQgM0mOmTxWJ4AaNQ4JY8wr
      WznvPE+apgRB8MJUbIXp6zgIhXJaZ+jbSgoVc2p5eZkbN24wHA5ZWFggjmOCIJjITk+XuHZT
      Cv0ukpizDoNhaekUT7cVrdgghdf4MQbWtwSPNxvEjTFho6CfFawPDY/GIG0BKQwzi3G+b1Ct
      +J3z9E6HQ7hnPSCB1+15vGUZjAu07gF4A5jEYKxv4ha5QVm41Am4stKisPB0VBCqnLHxcwgO
      B06U/8U7gjnvIYwQSFX3AGrUODS+jeBf6fGHYThp/MKzUsZuZZ3dyhy76t98R8HUWss777zD
      cDjkyZMnkxJRu91+wVpyZ5/guOymo7qOWWeRTjK/uMztj0OWZ8eMUkGo4Yv7i6iZX2f58nnu
      3L/Nxp2/oTv7mG82CjYKhxpkaCnLga7Sp9c6rP8gz4Jx6Vgv8KwvYyyjcU5/kOGs9/hFCPwM
      MljjZUbPz8acnQkngnONQNIKFf3MeNez8rxlsQkpIBCSzBmk9OeqE0CNGofEq0wAlTnLxsYG
      Dx48YGlp6aVBb2c/4CSnaU8SlYPZzMwMrVYLay1Pnz5lbW2Nb775BiEEaZoyPz/PuXPnJu+p
      cNTPdRzLyUqr6cyZM2xv/jP+7sEjZlpt8rzgvR/+OktLK/SHfcJOm19+HfH3P/9THvS3EK2M
      RwNLqASRljSUZGwsxlk/7Us56WvASp8IqgauLJu41hhMbnEGL1YnmEwYd0NFIIU3mkkNG6OC
      9VHBIDNYT/IpZxGqprAjCAUzTpElJRNIgHA77mal7dFoNI50w2rU+MeOfr9/ZDnmvVBJPFdu
      X0EQcPbsWdrt9iTgVc3T6fLNbj2B6RLPbqWe6R3Fd4kq2UkpJw31qk+wvr7OqVOnWFxcfM6Z
      7ChJ7TgJwDmHsT4Jae3Xy36K9tkuapwlbAy2uLexyv/+7/8Vg3CDQVFgnKOhJVFpTtxLC4qy
      7O8P7n+EBh0oAq3QWmGdJc8NRWbAOpQTZOVqXpZeActtTSdSjHPHk1FOUrqPVUlClr9bqNoM
      vtksBIORZMukOFE3gWvUODROcmVdCcHdu3ePzc1NZmdnuXLlymTyd7dzHaaEs7NJvN97v+2d
      w/Qk8vS5l5aW6Ha73L9/n42NDS5evPiCof3LsFeZ7ChMICV9UC6KwrOCykGqam5DS0WgA6Ig
      YmRztvMcKwDpVTuHuSWQglgp3yw2U4NfpdSDNY4Cg3G+5GNLr4HZQCGFYGNc+MGz0M8QtAKF
      c/B4mDM21vcWlCh3EhBqSawFvdRQpfoqP4TaITNBRi0GV6PGoXESAVII70xVySYsLy/zwQcf
      APu7er3smLsFuIOUhna+99suH02fL89zlFJcu3aNra0tPv/8c957771D7Vx2ftbjDJYJIVBC
      7fm8kopIh4yyMUnQwFjvzlWqt3k+vnXkRVnOmp73K3cBtrA4K/yw2FaAzhSzseT8Bcn2Jqhh
      hBOORmRpNQXtUJHkBuPcJPh7A5lnFNuGlgwz7xuAeNYAVhLaQrKZ1k3gGjUOhZNgz0gpSZKE
      W7ducebMmYkL2MuC2/Sqdnrq97gTs9Vq9nXqGVQqo51Oh4sXL3Lz5k0uX75MEAQHVhrdudt5
      VTIT/piO9cEGm+MnRE2Q2tM6hfTDYcY6TGExhfW6zjChYgJoIQiEF4CLsoDzVwRdFbC95QjH
      juXTBucEyeOA02ccoZYMUkGkJFlR0jpLtg94Y5lhLjBV8C83HZESxFphCkmap3UCqFHjsDhu
      EHHOcePGDS5fvjyp8R80oO2UgtjvHAfFtC/BNBXzdUgIeZ7T7XZRSvHll19y+vRp5ubm/DDV
      HiWhb1tLqDCGzVGPB1trGJsjlSDQiiDw/Q1Rrr6NsWS5Ic+8DSU+NtMKJbOxr+m3QsWgrzk9
      J5BG0HsCsRbEscNYcErQjWUpMw0r7YDRlsEahxPPOP+587LUdupWdCPFxdmIhgv5yWpK4Wyd
      AGrUOAyOu+JWSvHgwQM6nQ7dbvfQA2XTTd4Kx9mVTNeydzv264A8z2k2m7zzzjs8fPiQ+/fv
      c/78+QlDar+5jN2E8k4C1bGss4zyMf10yOZgq5zqpWy8VrLMkkCVE8W5pT/MGI0yrHUstQJm
      Y+UtIANJM5D0C8Gj276De+aSYPUb6N9TZGM4/6bXIAq1IFCKN5diQiVY7edkxqKl8DTQcgLY
      Jx/AQTNQLDY1Dak4HTcIsoU6AdSocVgctiE5DSEET58+5a233joxJs5BaaK7/Xu6P/C6JgDw
      dFAhBOfOnePcuXPcvXuXhw8fsri4SKvVmshl7EwGr3o3YKxhnCWMM694qpTzTV1bSVELZpoB
      Ueh7CGnqOfqFcRibMxsrOqVncDOUREowaAquvCmIYgHSsf7QcfqKYPWuw2Q++IdKYpyj21C8
      tdzgbDckKyyPhwU3t1OCQKK1wllHlhmK1HhKaiCR0vK9dy2DVNUJoEaNw0KpvRuCL4O1lpWV
      FT799FM+/PDDQyWBaQ2dw4q7HeR1r2Pgn4ZzbmJcf/XqVbIsYzgcsrm5ibWWMAxpNpsTsb7D
      +BAcFVIqhJIM0hG97S2U9mWYSo2z2p0FWqODACkz4rRgFChEYZhtaJqBJA68yFykBc2moNmU
      hIFXCW00LO2m48qbgvs3HcVQEHW810BW+P5CM/BTxPcHGUEc0GxoAu2H0EbjgqHxonDGOpLc
      Mi4cVtQloBo1Do3jJoBTp06xtbXF9vY2MzMzh94JnLSMg1e8/O7nAg4K5xxJkqCUmojN3bt3
      D4AHDx7QaDQ4d+4cURSdiGubEGIiAFgUxXNlQGsNhSnoD/ukxRZlPxhrPOunKDRZYTHGEoZe
      80eUBCElBPMNjVL+9/JsXH1b0Aq9O5gA3npXMMgMm/2c4KylJyRkCgeMMks/NRgLtzcTMino
      NALaTU2ohT+3dSSJ7xus9nMejwuMkDhqLaAaNQ6N45QVKvqnlJJHjx4xMzNz6GPspQt0VOx2
      jNd9NwC+3FMxey5cuIBS3urw888/56uvviKOYy5evIgx5li7gSr4N5tN0jSdDAH6Eo9kkI1Y
      6z+hX6SImElPxRaONCsYjSWSlCQryHJDknp/XmEdSWGhgKzwSp6BEjRDxVzDsTQTIIBeYvgP
      t3o8HudYQDiYixVvLjRwDr7ZTumlhqGxNNoRgRY0IkkcBbhR5n0LlODhKGdxaZZLS9dpiBaW
      egdQo8ahMc3GOSyklNy9e5cwDDl79uyRJ1sPswvYr65/nCGp1wHV9ed5Tp7nBEHAG2+8gRCC
      L7/8EoA4jhmNRkdOakEQPOfLoLUmSRL6yZC/v/sJ/+HGT3mw9RATZERaTaZxnXOkqe8V5YVF
      lyWZJDMUWcHpWNNPDZtjL+EA3sO3GyvSPCDWkkALPno4ZHWcobRCS0/p3MgMH60NmQkV66Pc
      i81piRQCB+SFQ1CQF549JIRgaWWexeDX+eX/ZxkNR7UWUI0aR8FxEkAl8fzuu+8emnt/Ug3a
      aZrnXrr8rxMVdD/s1EGqVudBEHD58mVu3LjBG2+8UYqsHW0XYIwhCIJJ8z8MQ4y1/O2nH/F/
      fPJ/k5OTmRGttg/AxpYmMtb3AsbjnLywE8P3IjfMaslcrBikhof9jNS4ajyArcTPDnQbfgr4
      Xi9DKUUQKrSUGGshh3FuGQ1y7zEgwQlHURiyTDKkYCQEeWHJ8oIwkFyc+Q1+9ldj0iQBfDmy
      TgA1ahwSRVEcmQVUBagwDI8kajaNo3D9d/6+nyzE6x78K+xMAhXiOKbVanHv3j3Onz9/pARQ
      qbLmeT5pLmdZxvpgg7+48VNykSMwtJqGINTeljE3FNZOBN5sOQTmL9b/9I3jy2xMYSE37pnY
      G5AWln5mSxlpXyaSgURLSaAVrgAhjN9olFRPIb36W5oW3moyk14LyDgKY5jrxKw/aZAmm899
      vjoB1KhxQDjnXcDG4/GRj6GUIggCkiSh2WyeSPP1IMH6MM5hv4qloJ0wxhCGIXEcUxTFse5z
      tVMaj8eTe73Z3yY1KUpJJA6ERGDJcsV4LMgSh9YF0zbPAiaBPnPu2eCumtKHKwV7dDVP4Pzv
      uXMTVtFkh+GeTf5WQj/WWNLEkgsv/2xKbSAlpVcV3YEXXahr1KixJ8bj8bGCiZSSxcVFhsPh
      iV3T9DDXcVExgnazbfxVQhAE3Llzh/F4zMrKyol/FiUlEl/CK4zB2haDgUKpLo1olkY8iy3a
      mKJk/UgQWqC08j9B+V8lUUpMJKIBBN51zDo/9DUXKUzhyPOCLCvIMy8THUs/N+DKfkOVDJyB
      wEFDSGzhk0qSFSwvZxNF0wp1AqhR4xA47ordGMPc3ByPHj06sZX2SdJCpwfCXldMX+Nu16qU
      wjk3Kf1orU9sp1X9LM7M88byFYrMkBcWREiztQBWMRPM8DvXfsiHlz/AFVFZ2/f+wl4mQhLH
      mrihCSPPXBIVNxQv+RxrQWE8z//qfMxKrBGFI0sNylguzES8t9xkJlRlw/n5HZ2xMMqeLfmH
      o5ynxS95+3tnCIJg8nhdAqpR4xA4rpa+c25ig3iUILtbueewwX83D4Hq8eP0Gb5N7HfvgiDg
      4cOHXLlyBaXUxGvgOOfa2UNpRU3+8O3fpZ8MuPn4DukopxEpLsyc5feu/ZBuq8PNR3f55ObP
      MS5BlHoMUvoJ3SDwsyRWOQplyDMoCi/iBmAcJIUlUH438MZCzAXjV/lSQlY4Hg9zhrl9pvNM
      2QsQjrz0D/Am9L4U9M2jB1w45fjRf/wWWxtNwqBWA61R41CIouhYPQDwvHKl1IGakjvVP3cG
      7v3onbuphR6E+fO6Y7/r1FojpWR7e5vr16+TJMmJJrHpe3Vp6Tz/3e//N/wv//ZfM3dqnoWZ
      ea4tXWS+Pcuj7XVOzS1zdnaZB+M+1rlJfV9KgSq9gQWCwshyB1DWa6xn+MzGCiXKaeBAEmlI
      csvqIOdhL2Nc+QqUdRxj/S5DSYetfICtP5cQkGYFX6894HH0CCkl415tCFOjxoFxkqWRbrfL
      2toap06dOrCWz7Qj2PQ17XzdzvfuZo5yUj2D4+Ag/gTVbullUEoRxzF37tyh1+tx7ty5icT2
      caSup+/3zu9eCsFyZ4Hff+uHXL9+fTKY5pxjcWYO4yy/+97v8e/+YZun5olv3BqH05VQnFcK
      FcLhUJ4tZByFNV7Dn7IcFHiJiF5i+Goj4dHQK46qwLsEWwt5Ds4IlIA0k366WEEYgrMCnEJr
      sFawuVXgnGBhVtcJoEaNbxNSStbW1lhfX+fNN9986eufSQ7sH/zhxaGunSWd15HlUwX6vcpq
      B6XbVpaajx494gc/+AFFURy79LMXpu9jZWe5M8EooYh1yNmF05yZu8bG2ga5MxQFCGFRSpTG
      7GKyKxDlat/hyz9PhgWNQDLX0IRKYR30U4OQgBDkuU8geWYxBtotf9wgrBKLmCQYAWSJQklo
      RoJuR7Ky0K4TQI0aB0WlBXMcCCFYW1vj+9///uSYhzn/Xo+9jM9/2InfwzaWD0Iz3e356ZLK
      cSUukiRhcXEReD5xvMo+hrWWOI4n1F4oE4PwfscWR5IOS/VPQaNpScaSwhgS7amaQgDSUpRy
      EAjYSgzDzNKNNRNzMQmhEvQzv5JvxJDnjjBwyMCXjiwOhCmTk58KFlKglCGOHVorGpGk3QiY
      63bqBFCjxmFw3FVlZXd4nMnUCkdl/0zLPh9EIuKgx9vt8YNe63F3KlprvvrqK5aWll7YTbyq
      BCCl5PHjx0RR9MJ3KaUk1AH98YDV4SOCliUqheB0YDCm9O8ty1PJ2AdzY3zJJsURBA7rCtqh
      pBU6ZkLFqXbI4+2EuOkni8PQl5WWGgGdUHGvl5Jb3wNwdqp/ZJ1vMDuwgZwI3NUJoEaNbxFV
      PXo0GhFF0aHee1x5hsNQPKsewUlRTA9izHKQCeW9YK0liqITo3zuxM77Vn2P9+/f57333nsh
      AQjhzeRvP/6arWybuCmQquy7OJDCYgqDU944ONQQKMgLsMav8JMUXOHYsAK3FSBnNZfnBfc2
      cnqZQUof0EMpuD4fc3Eu5PRWwKNBznZqqEYL8tKTuJ8aMguNWONwtRREjRqHwUlxya9du8YX
      X3zBhx9+eKiS0nECZBXQvUXhwWUeTlIT6KAr+qP0KKSUbG1tTYxhTho7E5i1lq+++oqZmZld
      exgCQVpkPBls4ITxE8Oq6uc4nCltInMH4lmCCTSgJQ6H1o488Y3d00sWUseN29Abg26UScg6
      tBBY5//75lKDU62AQWZJjL+mmVAiENx4mnCjlyKlIA41xpo6AdSocRBUGvQncZxGo8HCwgJ3
      7tzhwoULh6rRH2VFvtPy8bvS+alWzQc592GSQBiG9Pt9Op0Oy8vLJzplvfNaKvru7du3WVxc
      ZHFxcU+WknUW4wzOKRDP2EgVAcs5X9z308ByMg3sJ7FBK5CRRUQFWwYIUtZERjTjCAOFkMKr
      i+aGO1sp3UjTIeD2TcisIJwRdBfh8UPBk8eWDSNQc5JGpGg2Y1pxs04ANWocBM65E3OYcs5x
      6dIlPv74Y5IkIY7j57Ttd1I0d3MCg5evzqtgP328kxo+23mOwxxr5+/HKTNVNNEvv/ySt956
      izzPd+0hHEV4b2fJp5JRuHHjBsvLy3Q6nV0ZQBXGWULhDAiFsznOWSiZPkL4kpBWkijy7l1S
      eRXQNDMkaYGTBiRsZQWbWYEVoENFM9Ro5XdyhbGkzrGeFNzbzugOJK1FS9Qo2Oxbek8ETx46
      spWE1EGrGRJHikYUMRcv1wmgRo2D4CRmAKpgXE0TB0HwHEe9CoR+lfgid303r9uDcOmnX3ec
      a9+ZfI56zINMGx+kEayUQmvNxx9/zDvvvEMcx885gB1nqnnnqj9JEj7++GOCIKDT6TA7O7un
      25hzjtwWFM4SqRBni1LEDaYkf9Dam7Y0IkUUSrTy8g/V5K61FiEFBs/kCQJFGCiiQKG0wJVD
      wEpJssLy1eaYZekYf6FQTcdmI8GMBSpUOCWJAknc0ESBKhcF9SRwjRoHQp7nx6KASilZX19n
      NBqhlOL+/ftcvnyZMAx3Za1UJugVdhNne1kA3is5HJU5dBLn3on9np/eGew2uCalZHV1lW63
      S6vVes6ucbeEdZBz7oRSijRNuXnzJtevX6fT6UzkofeCUJKkyHnSe8qg10eSYS2YTGAsBAEU
      OQSBpNkQaC2IQ4WSAucMSgpUyRjypSEvPqe1ItD+dRIo3POJMrWWB3YM8wI5VqgnIbJrUE6h
      QoHWCin9riFJUzbGa3UCqFHjZTDGHMtRSghBkiQ8efKEpaUler0eH3zwwXOln53YbwJ1+jX7
      MWr2Cnovmx3Y73Mc5DW7rbxPevhMSsloNOLhw4eTmYpqcng6+VTKpjuvf68dk9Z6kjyMMSil
      uHHjBhcuXKDdbjMajV5433PflRJkJufzr7/g//ybP+X29j0yoBg+UwVNEs//zws/TayEIFAO
      JUs9IIOXjkAgJEjld45K+QEv46AoHEVhKQrjPQhsKQuRSJx2FO0CPQgRoUFtKgIpUQhs4eiP
      CqTsk6ZZnQBq1HgVmA7eQRCwvb1Nq9ViZWWF5eXlXXsK+w1D7baKP0pQPSla50GxX6noONdh
      raXb7dJut/n888+fS6RSStI0pd1uMzc3N5kNEEJMdlYVXbR6vEocvV5vYiy/tLSEcw6lFO12
      e99mL2Xgf7LxlD/7i3/N19t3GEUbqKahUWrxCAmi1Gx2OJSUiAAGY0hyhxSCInckmaMonB/8
      eibciTEWa581ivPCYAqLNV4OQggQThA8DcEK8vkU0XBYXWDvhRCAWTYkRcZwnBPqtE4ANWq8
      DBV18iCY1u2p6v15nvPgwQMuX76MMWZPOunOBmmVIPYb1jrIdVVB7nWSgIDjJYCqf3Lt2rXJ
      Sn+a6mqtJUkSHj58yObmJo1GA2MMC/bo8XYAACAASURBVAsLSCn58ssvOXXqFGEYArC0tMSj
      R4948OABly5dIk1Tbt++TRAEzM3NTSQfpqGUQgearWGPh2ur/PLW53x5/yabxVeMoyG9zHiK
      J+W0bynbWSXhokxaQegQKISUqBBCaRE5jEcCnKeDGmFR2h/C2WcuY84+s5J0gG0asqaZPKac
      wDQMqpOB9HTRLDWMCp8IhdvxLaRpirWWRqNx5C+nRo1/THDO0ev1XsoCqgIRPGv4KqUYDoes
      rq7y5ptvPsdS2fmencc6Duto5yDXyzR3TgKHTTIvu5bpUtVOJlOr1SJJkl1LaNW9F8LLMWxt
      bVEUvhG7sbFBlmWcPXuWjY2N5943HA55//33J/crTVOSJKHT6UwavtW5tNYUzrC+uc6/+fH/
      xaPBfZ4mD3iSjyAwFM7z+/317PbZmBi4SC3QgZeIlpPyFRSFZTjwAnFCQKAhDB0Cv+oXFpra
      y0qPC4MBVCAQUvqJ33LyV0gvHCfLeQGTWzAW4eomcI0aL8VRqZPgA/GtW7d48803nwtW04yf
      3XDSZZrDcO+/ixmB3bAfg6la5e93/6rk2m63J8dZWlqa7K7m5+cniWVzc3NSmquShRCCZrM5
      Cf7GWgrrPXeVMPzso5/ys8/+LX3dZ90M2LIGqpJNqfHj3PPB/tkFPvvVFo4C7/EblBRP63yA
      j5uWIrfYwpFlgiSBOHQECjqhYrkZECjJ41HO07zw79fSJ5DcUORlmajcBeJAWMdCHCBFbQhT
      o8a+cM4xGAyOvBqvvAMqb9rqmMepxR+V0bJX4/O4x63e+22WmA6jyTSddKd3HdPfaavVAnih
      zl+911hLVmQUGApnuPHFV/zDrZ8gF7fY2EzYzgxCUZZ8dsxN7LbRqW6Vm/p3OSMwkQTFl3uc
      9WqecejACfKxotuUzMWK+aZmqaV5NMqQ0jN9wtJsBvzUsS0M55oRW4n3KG43FAsNTW5rP4Aa
      NfZFURQH0qOHF4OmUoonT56wsLDwXD1/58p1Px58hcM2Uw/TJN6N4vlt7AKOs+PYbwDrsNir
      DFc9J4TA2AIrHeubG9y8d5OffvznqO4m6xsp21nhnbemSf5TK/9QignHPzPPSkNM33ZbTQBL
      MLbcOTwr7msJc7GmFSqCOcVoW9IoFMstSTuUKCmgJAIp5VlGReFZQ1IIfm2lQT+1pMbvBEIJ
      m0ktBVGjxp5wzk0cpV4WTHeu6IUQbG9vs7q6yvvvvz95vAo0R+HHTyeBnbX9vXYURw3mh3nf
      Uc1ldhtmO25QP8mdiHPOM3wEyEBx+9ZX/NXHf8bAruE6I9bGKf3MgvRB9oWEZiFSgkYgyYwj
      s+6ZC/v0JTrPCpJSTDSDPLXTN3sBrPM/gRIsNCVXlxSD9ZCtx5qVK4blpubJlvFlqqJkPFmD
      tY6FhuJ0J2CxcCSFF4XbGBf00zoB1KixJ6Z55PsxgXauICvJgPv37/P222/v6SO8W9KoHn8Z
      9hp02snxP05APUgSOMmyz3F3HkcJ/nslHT+5a9BaY5zlyZMnfPTJn9Kae0iS5PS3Sz/eqdN5
      qqcAJ3DSYaUjN448NdjpU4jnfxfK1/7DUBOGyq/eEeSyZPMIsBYGmaEd+vp+oARXLjlWv5Yk
      Pcl7y02+2kzJ0sInDSG82qhxnJkNMdZXooa54cuniZeNdnUJqEaNfbFXqeZlVM7bt28jhKDR
      aFAUxa56Pked0D3oav9VB/9Xgf3Ou99O46R7EM45H/yt4Sc//XOe9j9hbmWdrdQxyAybSeFL
      +2WzlzL4S1kxkHz9vSgs1liEdbjqT8ZNvQ8IAkUcaeJIE4WVcJ9DF4pcGoz1ZaPC+hW8HxKD
      1Fg6Sxk370b82tsxf3Cpw0/u9RmlBcaBAs60As53I7YTwzAz3N3KuLOdYKVAaVkngBo19sM0
      r3/6selBr2nGTxAEfPXVV0gpuXr1KkVRvNBAPkqpYzow7vfena+bLhMdFsfR0jkq9koAB5We
      OCz2TDal2Nqf/8X/SnPu55xbyNkcWrKRpZ8ajOVZOWfq/FpJdKA9A8g6lLLkucEa63n7OxhB
      omzc+iQgacW6LPsYskySllpA4CeAx4UlKRxrvRwlBKEWpJ2cX9yJ+J33GpzthHy9lfJokNMK
      JbOxxjrH1tjwaJhzayvBKUEUaoJQ1QmgRo29UA1t7ewB7FxlV/8OgoBPP/2UMAwnQ187g/9+
      1MX98DK66H4B8KhTw7sd91UngZcdv9lskmXZnqqfh8XOhJnkKcNsTGZyfvGLv2O7n6AbEh1D
      Sa9/xuufGsBy1uGE8AFdeUtI1LNdiynfa0vbRzHZMXgZ6OqY1jpMOdzl4Dk6KficM0gNW4l/
      jbGOSEviwvKTT5q8fy7infmANxYKthPDdmIYZZZhblkb5TgtaTcDmrGni9YJoEaNXeCcO5QA
      nNZ6EuyvX7/+wsTvdKI4agLYLRh/m2WanTuJ3ZLjcbDf56mGu3b2Yk6q9FMF/7XtJ2yOe9y9
      f5dbX/8lZ5cNhOW58GqekZKUpBvPuqFU78Q3YGVpADMRdJMCZyVSOpz00VyUyQIB1liKwpGW
      5u4AhbEYUw5yCYETVTPYMS4smXEMM0NmHaEUnJmBVCturQWQBaQWhrlkbATjwtIPUvqBo9UO
      mW2HNGONkvUcQI0au8IYM+Hww8GCdqX0+aonbne7pu+iXn9U9s9hUQX4KuFUifYk6/7GWjaH
      26z1nnDn0Tf8/IufsrjQIw8ViQtoOK/CGWlPu1xpBYxyS6wl803NxrhgY1xMmrBayYkFpCtr
      9oA3anfP2E9CeHVOl+TkhfcHAB/o88JLSUglJj2FXu5X84EUFNYft7J8nJk1XF5KaUeKYWrZ
      7DnGxvBgq+CzuzlLKwEzzYBuOySOQy8zcSJ3r0aNf0SoVv8HHf6q/o+8sbHB/Pz8S4P/cQe5
      Dtug/TYGtF5F03i3SeBpdc+TPIfDkZqMXjLg868/Z4t1VCZopoKZyAKKRuiDfWEczVBiLYRa
      0I0Vby3HbI8NdzZTHo1yksxMmsLlAG6p2+NLN6Ic9vIMMq8LhChfr579TUkpQAqcA1nq/5iy
      TFRllWYg6cSKZuA9BQDiUDAz48gHsLkNQSRoRJpWQ9NqxmitSbNaDbRGjefgnCPLMobD4YED
      WvV/1mr1v99gUfX66fMd9vpOMvgft1G827mOWuLaSWvdeT3HdTbbCWstuSkwzmCdozfo8dln
      P8Nxj0bkkMKXerQUaOmlmbsNhRDQTCV54QiUoBMr2pFieSbg4nzIKLes9nK+eJKwmRTku9FM
      K50g/Mo+EoKZSDHMjFcGVRKp8ddQsoqc87MCrlz5W2MxxtEIJQtNzUJLEyqv91MSh1hfl/TH
      lpm21xKSwu8u0ixnu1ebwteo8Ryq0s9RpB+2tra4dOnSgUTOvs1J24PgOLX83UpBr+LzTfdZ
      jgtrLcNszDgbkxa51/2/9QVh4y5LytHOA+JAMhMpWpEk0qWQcwAdFOPMMiws49wiBGglaEeK
      dqzoNDWL7YCFpuaT1TF3t1KK6UGAySSwD+QaWGkHNAJJrCVrwwzrHFiBUL6pXPUUtBIEpdZP
      khuGo5y0MLQiyVxT45ynixrrm8VrG46+TX2icZAXlsEgYZSEWDFTJ4AaNaZRWTEeRkK5alAa
      YyYqujuDYhW4vo3ewFFwnBX1UecZ9nrPXvc9DMNdDVmOcq6kSBkkQ/rJkMIZVlfvMxx/xPI8
      5EZjHARSMN9UdBsarYQPoMaxPiz4ZjPj0SAjKRyzDc2ZTsCl+YiZWJIVXr2zHSnOdX0HuZca
      IuVX+UoKNkY5g8wSaclyS9MMJYWFzLiJlpC/JQ6lJHGoaDc1s50mjTjCORiOxmxuj3i8Mebu
      VsalhYhYS4zzxxmkllTljKwhtpCkXgJ6swhoNDukab0DqFHjOeyUW6ge2+/1Sik2NjZot9uT
      VepuZZ7volH7MpxE6ee4n+ug78+y7MQSaGEMSZ6SFhmf3fyUh6u/ZHl5SKu0ZlTST9u2Qkms
      xYSGOcosj3o532ynbIwLrINxbgkVdGNFqANy42v022ODw7HQ1MxEikAJGoFAIGgGksI6tPRc
      fikgLRyBFISlbhC48u9LEAaC7kyDxfl5FpvLSGK20yeEwUNy4/hmY8xH90e8e6rh328dae54
      MspA+R5GmhWME0Wz2WIwzIllo04ANWrsxG50y72kF7TWE2vCK1eu7Cv58DomgNcBB1n9w+EU
      QF96zjK4bve3uXX3p5w6MyYMJVJI2pEkCrxVoxS+9FOyN8mMY5RbhpnBChASRoVlc2zYSgwz
      sSIrHKPc0E8so8z6mjwgLSSF/7yBhKCkk0a60nOyBEqUTWI/qRtoRaglgZbEcUS32WVFfMDG
      cIazzfuMZvp0Bgm9QcpHq0MA3liMsRZ++RU8HRrCtkQAaSYJdIuigKYK+adv/26dAGrUmEal
      AZ8kyXM89+lVfBWkqsdv3rzJtWvXaDQar22J53XFd5UUA6VphDH3797m8oWMKJblarzi708x
      j0ohtmpAa/LMMyIOxjqywjJIDUlhGWeWB72ctKRoGuNYagXErvQAlmJyHGO99IMUMMgsOY4g
      UsRhQBQptJYlfdRR2IxCjxCiS8AMjbhBHAVEoWYkcz57NKITKbQQrKVjgrbBOkV/qGi1OoRR
      A2EEP7z+Ib/75g/qBFCjxk5IKYnjeFJv3i9IVbz0ZrO5r6RwjYPhVVJWx1nC08Em/WSI0prH
      q/eBz1jsev38QEGonzV8c+N1d2Q5jWudp312YsVcQ2NGBcY64kDSjRWx9qqfo8xyYyOlbxw6
      UCAFuTHkg5wzrYBGIMiMw+FLPknh2BgXPBnljI1DhqoM6n71XzI7SZKU/nhI3hn4gbCsxXx0
      iifxBmGgCCPNaJzz9WZKpCVFMyUoZwiKIiaKmjjjOD97ll+78A6n55brBFCjxm446JBTFEWc
      Pn2azc1N5ubmXij11MF/f+xWVnsV50jyjM8ffMUv127yqLeONYbRxje8e6lPOw5Qwtf9lYTC
      wJNBzsPtnFFuibRgsRUw1/SWjUttzTiLaIWKpLDMRIqFpqYVSXLjuLuV0bfQ6cQ0otKyMTX0
      Bymrw5xrc5EXknNe3+fuVsr6uPDWkKEiCjVxpAj0M15/UThG45Q0SclaksHY4pAs6vM0ots0
      IsVAK3Jl+LqXYZxDaD+MVuSSdmsGgUAi+eDiu1xduUgjjOsEUKPGTiilDpwA8jwnCAK2traY
      n5/fs95fl4ZejleVAKyz3N9Y5a9v/wOfrX5J7nJ6vQ1m4ozGRszijGa+6cssxjrW+hmfr425
      vZGUTB3Bcivg3ZUGZ7ohM7Hi8mLEShZQWEeofOmoMJahs/RyQ7MZ0W0HdNoRQgj6gxRrHcN+
      AoAWXgZiOzE8Gee+3h9qokARhj74gw/8vh1skUoQ6ga9zQW+uHmf8Tjh7Jklli6+wWa7x2Yv
      RQUSa5xPaFqClUhahGFEkRnePfMW37/0PZY68whRewLXqLEnDjLd6pyj0+lw//79lw5/7Xas
      6UTzbSWJnVo63yWOMzx2UBhrWR9s8LD3iHE+JitGhHFK6hyr/YztpKATS4KSibO6nXNnI2VQ
      WISC1Doe9DKWmpqldkAjlDQDSaBEWb/3TWIzVuQ9gRwH6IYkChQqjbAZyCz3Tl1S+n6C88Ys
      q4McqZ41fHVQBv7SFcxYTwsFaMzEiOE7/MXffsn21jbWWdYerPJb8jrzsw+4J7dR0l+X1l5W
      Is8CWq0uReFoBDG/fuk9Lq2cRysf+usEUKPGLqhExw6SAKoJ4L2MX2DvBFDtFr5NXZ1XEfSn
      j3uYRLab3MOrgJCSwWCb0fgpUexAgi2gsGAME/XN3PjAnFk/4CWV/05t4RlA1WSwFIABKRxS
      CJQUfP2NpTEjUYmguC8YR5bk8ZhwQZAMLSb237WSsD4seDzISaxFhr60BN74xZTGAdZWPQh/
      b1vBKT7/+YiNpxuTzzUej/nkswe8+6Om/xsUgiBQhIFEOImO2+ggIM9TFlrzvHv+OjNx65mE
      +Su96zVq/IpivzLQzhW0lJIwDPcs/1T/3m9itu4VvDoEWjPb6DDe2iAKDM5ZnHFIPHe/Ua66
      Bb4HEGmBxAv4WGtxFsJy0jcOJNb5IavtsaGfehmJUAkCLbh8WXHliiIbGnqDjNEgZyxSkm7O
      OCuIBSSFZWNcMDIWW8lA4ygKQ5LmJGnBKMkZJzlpkpNmBYESxPkVVh8+feHzbTzdoJGcmWgO
      eQVSsCYgipreQMbCGytXWO4sPPf3W+8AatSYQjUFPBgMDqTnI4T3/s1zLydw1ED+bUlDHHSl
      fRhxt53H/a7cxHaDn+y2rH9zi1+/FPJgHPFwq8BZwamu5s3liNmmH/4CiLTkdCdgfRjyzXY6
      8eE91wk5PxeipKA3Lng6Kkhy/xmN9TuIceb4+UeWtB/Qnk3YyBPChkH9UmG1o3HKcm0+Zjsx
      5MbbSQrAGYcBDH4r4twz4TipJA5LFCnWN/Wu99VaiykCisJSFMa7kgmBsyHGSbIsJyDgg4vv
      0I5bz723TgA1apSogr+19gU9/70ghKDf7yOEYH19nW63+60wW14lDnPNQgjiOCZN01d2LUdN
      Jlpr0jTlr/763+D0X/P9q4r5Rx2WxWWajQ4y32ZerqJV4Ye1jDd3P9MNsQ5mY8/yaYaKM92A
      052AUWbppYbNkWFUyjILAb2xYXMkUF3DqFBcPBuwqCBvQzpbkH8dcLnboNuSjHPrE45xpd+v
      N+yVQhAIaIeeUvqgl2GFm3gGRKHa83Mm6h5JWlAUFihIE2g1A9Ikp8gMP7jwPtfPXH1hF1on
      gBo1SlTBP03TAxnBVAYlly5d4uc///lzZaBpvMzC8WWv+bZxkKArhKDVaqG1nvRAkiQ50euI
      4xjgyMeVUnL36zsMxr9kdiFnsB4TD5b5H//z/4F2e4YkSfjo53/H6v3/jaUz/vtWwhFpwdWl
      iLPdEOO8XEMj9BpR22PICxjllq1xQTtU5MabtAwTzbiRQAeSWw1OnQ1ppQokbGtHI/YJY6Gl
      GWYBq/3SWB6IlOBUO+DCbEQgve6QFoLVQUZaWPrDnPeu9mi1WgyHw+c+5/lz82ylN8jGBcZY
      rHHkmaQRCZK8YC7q8vtv/4j5VveFe1QngBo1ShRFwWg0OlDAEUIQBAF///d/z6lTp5BS0ul0
      Jivhvbbqv2pQShEEAUmSIIQgDEOiyFMbtdaTBBZF0Ylq9VR9lZ3B7jDXPR6PUVLz/e/9Catr
      dzl9YZG52UVm2h2stcRxzIe/8UN+/NMh6+v/jplugla+nBUIQafx/Go5N88YPw0tMZHvH4wy
      L/nQ644Z5F70Ty6PYSZibkUgnaR7zqIDr+uzMhMQKkE31mwlBblxxFqy2NK0QgnCB//rizFz
      DcXjQc5mknNn+2e895vf54uPu4wGI6RSnDnVZeVKn68e3uX6XERmHPe3coRoExBxdv4UP7r2
      IW+euTph/kyjTgA1apQwxhy4lCGlJE1TrLVorZ+zgZzW2K+wl9H5cbwBDoPDKJtOX0uV6Krd
      TRiGkzLCTubPSZa7jsNW0lqztbXFvXv3uHLlCu12mwsXLiGlnPgJAxRZgRGO773/IT/+6wds
      b/+C2a7B7V5pQUloBL4ZnFtHK5SlV0Dh1Te18T6RDoQGrQVRLAgVpIWfLtbCC8x1GxErMwEb
      ZS+hatz6RrRnFYVaoJWXlR5klvsbW6x2f8abP7jKojzNkB699BZ31m7xZlez0NRsjQpkMsPy
      yodcOneJCwtnuLR0nmbU2PV+1gmgRo0ShxFsk1Jy584dLl26xPLy8nMOYruVgA4qePYqcJTz
      VWWgoijIsoxmszmhxr6Msjqtk3SQUtJeu6WiKIii6NAS0Eop7t27x3vvvTdxd9sNDj/Ip6Tm
      B9//T/jk00WePvoJZ889WwQ458iMm/D940Ay2wStPIVUC2jHkkgXfpJ4CALBYjOgE3sXMQkU
      VgLOa/tLMfEamIkV/cTQS7zAnL8XgkAx4f9bB7EWXO6GPBoO+GL9H0gttAPJclPxh5eadGNF
      Wji004Szb/Jbv/a7dNsdZltd5tpdtNqjf3CoO1ujRo1J0BqNRly6dIk8z5+zKtzJbd8Z4HYL
      xq+SOXOYlf9ubJ6qJ9LpdCZ+CcdlE02fb6/PfVQFVWstp0+fZm1tjZWVlT1fp6QkkApbWNqN
      Nr/323/AL37eZbD9ZzSWvCnL1siwOSomjduZSDHXUjTCAGOc3wlYiSj/N9/UCAGtQLHY1jQC
      rw8UB97dK6ykHayfKag+nZZei6iw3itylHlNoXFuSQo/DxBpyWJDc74T0o6U1yRqKpqhT8hx
      AE8fLPCHv/UvOHfuPFoqQh3SCGOk2D1p1wmgRo0Shwlq079XZZ+dzx82eH3X9Mndgv/0Z0mS
      hCiKJjuBnThIotvv8Z3HqpLPYWGModPp8ODBg/2H8xAoqYi0wOJQSD54/zf4yx/fJBl9QaFS
      HvVyHvcLhrlBS8FcQ+OA5RmNEVAYR1r4xvFiW6MEaOUF5UIlKJxDWRClraSq4rDz1FEpPM00
      DrztY1Z49dBhang6KhhmlqTwMtGzQhBr35BuhV61NDMOWfoIDHqKS6f/Ce9cexut9eRe7xX8
      oU4ANWocGhX1M47jiRPYXjisf+/rxgaaRpqmGGOYmZnZ1fFsvynow0JrfWQD+CAIDkzh1Uqj
      5LOdRtxo8du/+V/yF//v/0R86hZPB4abD6DvMjpN76fbDAXNUGKso59YxrlBCkEjkMzEchLM
      CwPC+JU9gJQCJTzdU0rfLtBSEAUSrXwSSQpHkluGmcVYvK9AaujGuvQOkDQCLycxSA1JLogD
      hxaSjYfn+W//6z8gCqOD3+dD390aNf6RYrp2vRcqVkxRFLRarX0loI8SzF+3JLATRVEwGAw8
      9zxJkFJO+PYnCSHEkY+plOLTTz/l6tWrB7qX0z2SLMvodrt8770/5sef/CvWN4fErUWebK/h
      Rtsstpy3biy869e4NH6pVvZaCcZ5QWnoRTP0ZR+tfEVfSt8Mnvx9lKt6gX88yv1qflyK0DW0
      bzTPxt5VrBPLUkLakuReL2iYSdJemw/e/KfEjfhQ96pOADVqlHhZAqgYMUmSsLW1RavVOtLq
      dqfV5K+afHSe55PGqjHmxIza4dl3sFfj9iDI85wwDGm320e6NmMMVy6/xfrwX9DuPeFpuk27
      0+XJ2jeE9IgDX8oph3m9XwBeK+ijB0Me9jJy6wP5pdmI9882WQg1qvy+jXWYUrfBOC9A55xv
      LGsliAP/E2lBHChmpGChpZhvamabPmQnuSUzjmFqoYCWuMSFy5cprCEgOPBnrRNAjRolXhbM
      q2Gnzz//nEajwfXr18nzfM868169gN28hn8VAv+3geOyo4QQFEWBtZYgCI6UAJxzOON499p7
      xI++obGxynxrjnONJbaffsRsI6EdSYZYGmV9xzi4u5ny2eMxspwlGFnLJ49HIOD3rs4QBM/s
      HqVzZNbRTwzjzGLxA2fek9iXibxzmC8hBUow29TMNhSjzFNujYXcOkbbS/zgt38LrXeXitgP
      dQKoUaPEfoqe1XP9fp+5uTmuXbtGURR7rt53BrKXuYp9l3hd5CpOYipaCMHGxsa+Dm0HRawj
      Li6cYSZqMcrGtK60uPnLLuOnf02hC1pzKd2moVFIeuOCh73MSzsHCqVKGm1m+eppwlvLDVZm
      AhB+ByCFYJgatkYFW2NDZrygXLfhr7kwniGkpEBLSaQkQWlYo5WfEYiUZHN7hd//zX/GmaXT
      REG467DXfqgTQI0aU9gvGFaliarJ+LIAs5fS5+u48v8uk8BJSkJXCeDUqVPHKiNVaEZN4iDy
      wVgpzv/2H3H/3lsMBn3u3v/3zCw8JBYGG5W6/cIH7UArCmMR0tM4N0YFzcAzdzz909M8h5nl
      6ahgOzGEWrCdVtLQjjT3Mwgq9v2BrJStjrQg1gpGK/xHH/4RF89dotOcYabRJqgTQI0aR0Ml
      b7Bb4KgokWmavmD9uB+PfbdzvC4rbng9rmfn+Y+6E5BSsrq6yng8ptPpHEjP6WXXpYSY6PFX
      uHTpKlprlldO8elnf0u/v0YR3KMd9tjKDcY6KEz5N+L7A3nhfQaUFJNZgLRw5MaRFJbHoxyr
      BEHm32Byg3aOxVgjUJOBASFAIsi3l/nBO/8F1954G60UrbhJM9x92nc/1AmgRo0SUkqCIGA8
      Hu/6/DTn/6CTrq87vuvgD/6+VyJn08N0h723zjkuXLhAr9djOBwSRQenQ+6HnfeoorwuL53i
      D//gX+Kc45PPfsaD/v/MI1bJc4M1/vqtcSw3NFEgGGYWJcCGiliLibHMdmqQkabTCmnECoEg
      zQ2DYc5GWnB+NqQRSkItwEmerC3xa2/9V7z77gdekFDIIxsK1QmgRo0SVZ1/r+CT5zkrKyvc
      unWLbvdFZcWDYLcG8KvEy85zmKnek4bWmjiOcc49F/yPA2steZ6fWPDfC865CQNKCMG1K+/y
      9YPvIeIht7dH9FKDkIJTnYjLcxGB8g1gSjE5gCjwA2C93NJsR8y0ArrtECkEoyTHOegXBuMc
      s02FyEIePbrEb374L7l+/d3nNJmOijoB1KgxBSklSqldywfWWprNJkEQ0Ov16Ha7k3LRYVar
      3ybt83VY4e8GIQRRFE20hk4i+AdBwNOnTyff0Un0AA4C5xxhFPHDD/852d8MuXj5KwryUsPH
      B+m0sF7iWfrhLyEEkYJOrMr+giTUkpl2iygMiUZjjO0zTgq2Ekuy3aAT/Ig//sN/zvLyyol9
      r7UlZI0aJargX43R7wZjDHNzczx48IB79+69sPU+aFnoVZePDiLaVl3Hd4EwDCc9lcMG/+md
      2vRj/X6fW7duTRha3yayLKPdnuH3fudP0OmH2F6HlmjQjqU3kY+8fEMjVARKTNg8kZYEQlAY
      643gcUiliOOIViMgjjS/fGTZX2MppgAADuRJREFUsr/BH//xn7CycupEk3qdAGrU2IH9gqIx
      huXlZRYXF3n8+PGkBFC9r/r5rrX/X/feRHWPTvI6wzCk0Wh8J72Zqj8URzE/+P5/yvff++9p
      iD9i3GsSlxLSzbKOX9lPVlTPq3MhWZozSgyjUUKSJlhrkUKhaDI7v8JjtsnMye9o6hJQjRq7
      4GVNyG+++YarV69OjFCq98DrE3xfZ2vKSkH1ONiZeL/L+y+FxAqHtYZm3KTdmuHcmQv8+Cdj
      ttd/yvxy6gXgbGXx6IfHlBC8d6pJbkc8GGZsxd5XOgxC0iSg0ZzBSUcv6VPYk9/V1DuAGjWm
      UK3kXvaa+fn5ydTpzueOysg4abzOLKXK8etlrzmqQuu3DU8ZlWhZ8vitBev4/d/5z0h7b3m5
      iPKybPmdSAGhhm5D8duX2rSwPNkY82h9zNqTHCvaSBngHDTDJqE6uMTDQfF6/KXWqPGaoKKC
      7hdE/v/2zr0njusM48+ZM9fd2TsGzMWYGG8DhNgxdlTLdlLJUpKqUdRK/Yj9AP0IjdzGlVU5
      bhFOalngSwnYwJpd723u/WM5k2GYZS+wF7znJyFWMOye2UXve857eV7HcZBOp7Gzs9PHlbVm
      GGr626XVe8xg99Tq3jzPgyQ1DKRt24NzAgJtfBEKgTT+l1LJC6hVCBzXg2k3Grxcz4NEAVEQ
      INHGnIGrWRXVqoW9dw5MO4aaAVTrFhzLxfJ0HjElduZr5g6AwwnBhpFHwWLX6XQahmH4s3Kj
      EpP9ppvXHtR6Pc/zQ2etCDqAZu8xk+lgifxBnHzYGqlAQSn1T5OXLi3gXVFD1fBQs1yYtgvb
      adSEioc6PzIl+HhcxaQsA7YG0yQoVwzYhodPLi7ijze/gXRCcUK38BwAh9MBwUTvwsICXrx4
      geXl5b6VHDJEUQSl1K97D64tTCt5i1aw3bplWWdmWM9SPpoZXsMwoOv6mayRaUKpqgpKqT8V
      rVMcx8HkzCxevPkdNv73N8Sz70BpQ+zN8zwIRAAljaqgXFzENf0ykh//Fu+9GiilyE/M485v
      biGh6ae+pyi4A+BwuoCpTVJK+x7zJ4SgUqlgfX0dCwsLSKfTTStqujH+bKh6MpkEAOzs7KBQ
      KGBpaanvjq4VwXtIpVLY39/v+lTD/k6WZb9BrVarwbbtrstKXc+DaVlYyC/BFID15/+Arpeg
      XDAPTwvAr/8+BFl5CX+6+x0kueF0JSqCCk2m1J8B3AFwOCEcx2m6iwxWmgwq1CAIAra2tuB5
      Hl69eoVcLuevhVUvBWUrWFiESSPbtg1RFBsyAoc7XXatJEkwDAOPHz/GzZs3kUwmkclkIMuy
      f33wORjsudmppF3CFTzdGm92n92eUiilfgkp61FgRv+0PQWe68GxHUxOTkGJf4XC3jaq7/+J
      bNw8FIdr3HOpSDAxPodEXO/bpoI7AA4ngOu6qNfrx34elYSklKJarfq6M0Ht+WZlpGehBOp5
      Hra3t/H555/j0aNHsG0bhmFgbW0Nuq6jXC5jZWUFT5488dc9NzeHqakp/PDDD1AUBYZh4Pbt
      29je3sbTp08Rj8dRKpWwurqK169fo1Ao4Mcff8TMzAxisRh2d3cxPj6OBw8eQJIkmKYJSZJw
      +/ZtvynOsiwkEgmsrq52dFIIOgH2vVNHEPz7bmCTzQRB8JvTLMs6vaAcGv8nsiQj5mpQcwpK
      u9vwDhvBgmb+zS8Kvv36Wl9PlDwJzOEEcF3Xb+5qpenvui4WFxexubl5rHs4SuGynWqWVhBC
      UK1WIYoiMpkMEokEDg4O4Lou9vb2EI/HcefOHWxubmJiYgL37t3D+Pg4LMvCq1evkEwmsbq6
      irGxMWxsbMDzPGSzWdy9exdXrlzB/v4+rl+/jrGxMdy6dQsLCwtwHMeP2buui+XlZXz55Zeo
      1+swTROXLl3CtWvXkM/n8ebNm66McFhdtZsSVqbmyh53gm3bqFar/gmi25h/GEEQoCsxJNQ4
      cskMzHINpYNHmJq0/NnBAGCZBJpyCRMTE6d+zU7gJwAO55BwB29YsyfKqLBTQDCEEdVLcFaS
      x5RS7OzsoFgs4vvvv0exWIQoirh69Sri8Tjm5ub82PX4+Dhc1/Vfq16vo1Kp4Oeff4ZhGEgk
      En7Iw3VdXwMp6KjCQ2+CO2VBEOB5nv98TICtG8MdNPrBk0DUexcFm4ZFKfVPJ+HXYMiyDEop
      arXaEadjmqZv9M8ytEcpRVpPolqvYfeXp/josg1NFkDJr+sqFWVcvnT7RBmSXsAdAIdziGEY
      KJfLkQnVqJ07IQTFYhHz8/PHHEcvcwNv377FjRs3kEgkUKvV8OTJE+TzeYii6DufbDaLZ8+e
      gRCCra0tzM7OIplMolAoYHl5GQBwcHCAcrl87PmZAa7X6y3nHtu2jZcvX+L+/fuo1+t4/vx5
      V/cUDN90qpgqSRJevnzpTwKLCsfF4/EjuRHTNCM/o15IeBBCoMgKHvz9r4jp/4KuA43gEHtN
      oFSYxNe/Wz3z124FdwAcziGO4xzb8TaDGSxZllGrNUr2mCxElBEJ/uw0kgW2bSOTyeDixYuw
      LAuxWAzT09MwDAMTEw2VSMdxkM/noSgK9vb2kEqlQAjBzMwMisUiHj58CFEUceXKFcRiMX8d
      8XgcqqpCEATMz89jbW0Nc3NzSKVSyOVyAICxsTHf0Vy4cAGqqmJhYQEPHz5EOp3G7OwsBEFo
      exZvlJFvd8xm8JpSqYTPPvvMD+GFf18ul/3u49PkCrqBEILNzQ0UK49xMefAcQ8HyR/ez+52
      Ejeuf4tkMtX3vgzihd4JlgDRNK2vC+FwBk29XkepVIo0XuETACHEr3hZX18HAGSzWczOzvq7
      y14YmWDlEQvbhBPLTBmzUqlAkiT89NNPWFlZQTqd9h0EW3/wuYLhK2bEg6Ee9rugA2OPWVVQ
      8LpOiMoBNMuXhD8H13Xx7NkzrKys+MnnQYvxBRGogP+s/xv/ff0XpMYMUAGISQJUUUDpQEIm
      /h3u3vl9z2cYRMFPABzOISdV7TBjFDRSjuNAlmV8+umnKBQKeP78OS5fvtz0uc6CsHMKGuQg
      iqJgd3cXlmVhaWkJmUzmyDSzqOcKGmH2vOw+w9eFH7Ny0vDv2yX4/rb6+3BOgoW42qnC6jce
      PJTrVbwtF7BbNVAtmpAoQUoTQeoKUuIX+OLeH47lLPoFdwAcziFsNx3eYQYJOwHTNCGKIkzT
      xOzsrC9X0K8daFS83HVdiKKI+fl5f/c+TDvik2DvX3DNrcIiLFcRlXgftBOwHQd77wt4+34f
      ezUTBc9EXBbwbj+Oxen7+OarP/c98RuEl4FyOIcweYWocs2T4vae52F/fx9jY2NNk4u9hBnL
      YEMX+2o3Fj9MtNL9CXNS0v60ZbenxXZs1Mw6KmYNZdPGftXGzp6CdOYmlj65ASIMdn3cAXA4
      aBhR27abGsxWOjssZNLurpVzMu06gGB3cqt8waAgaIy/rFVlWJUYpi5cx5WPFqHICgQMdn08
      BMQZeVgop1QqRfYBtDIiLGkqiqJfRTQM4YcPgVYVU4QQv+xzWOYwBBGIgLiiIX/5KmK6DsM0
      MHtxBheSWaRiSVDaO52fduAOgDPysJr3qDh5s4qU4GNmeLjB7w3N5DMkSYKmadB1PbL5K/j3
      g/psREqRVHU4rouxVA6O50KTVUykcsjoSQhksE6LOwDOSON5HizLitT/aQUzTIIg+FICTEWS
      O4OzJcoJsA7m6elpv7N32HIeAhGgyiomFRVKTAFAIIsSYooKqQcTvjqFOwDOSOM4DiqVyonX
      tEokCoKAZDIJVVWHIub8IRMMCVUqFaiqCkVRQCmFrusolUqRzreflVlBCGkYfF3XoaiK/7NB
      7/wZw7EKDmdARAmPddKpy5QxHcfB7u7uUMah+0G4Ia2XBB2yaZr+6Y0Qglgs1vQzGIRzJoRA
      0zRomuaPixwW4w/wEwCHc4RgQ1I7BsM0TTx9+hSyLCOVSo1c6IcZXVEUUalUzkRBs93XBRrj
      O5k0RXCeczONoyjNoV7ChssM68mQOwDOSHNSvL6dEkTbtqGqqj8ti8WgR8URiKIISZJgWVbf
      QyyEEJimiVgsdqSaRtM0CIKAUql05NqoMFAvPydCiN9bMqxwB8AZaRzHOZI4bCeBy4wJpRRr
      a2uYmpo61djAXtPuaaYbbNs+Vj7bL4KS1WEjK8systnskWuBRsluuVyGZVmRob7TCPUFEUUR
      8XjcP50MK8MTjOJwBkC7FTvBblO2s9ve3kY6ncbk5OSRnX+7xrBfXaq9rEoalMwEc8JAQwoi
      XP3DxO7YF2sYE0URiUTCF14Laz2dRfcwS0izmdHcAXA4Q0y3xvHdu3eYmpqCaZoAOqs377Xx
      D6/jQytNDd6P4zgol8ttn8AopUgkEkilUtA0zZeIDvd5dPP5KIoCXdf9oTPDbPwBHgLijDBs
      7msronRmyuUyPK8xRL2bKVKDMMidDloZdpj8BpOuLpVKUBQFkiT5yeBmEEIgyzIkSYLjOHBd
      90gSm53yFEWBIAh+pZdt25Gic7IsQ9M0f1raeXmPuQPgjCSdNICFDTUzCOGmr2FT3IyK/X9o
      TiAseFetViEIAhRFgaqqLXfhzNC7rotYLAbDMPzEdjCvIMsyAPjJbsdxYJomBEGAqqqRp4jz
      AHcAnJGl2fSuVgiCgJ2dHczNzZ1KA7/XfGjGvl1c10WtVoNhGNA0zZ9ydhLMabQayhL8fdD5
      n9f+j/O5ag7nlLDjPKNZSCY8ypENTjdNE7quD31sfdjX10tYWKdYLLY96rMTWPjpvBp/gDsA
      zgjiOA6q1SoMwzjxunB5IKUUpmlia2vLHwc5qsb1PGHbNt6/fw/HcfjnFYI7AM5I4bou6vU6
      KpVKRwaB7fY2NjZgGAYWFxebjmMcdkbRCNq2jUqlMpL3fhLcAXBGBtd1Yds2DMM4JgcQVf8d
      Nhau6yKfz/u6P+dF8/88rLEfmKY5tM16g4I7AM7IwCpGgmMbm9V+R5V+ep4HVVX9+bOU0hON
      KyEEkiT5FSScwcMdwFG4A+CMBCwZWqvVju362WN2XTPYyMdcLtfWazI5gGaDSgbJKJ4KmFgc
      51f+Dz2T8Y47QSf+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Carrier vs. Customer Delivery Delays' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeZhcZ33o+e97ltqXrr33Ra3WakuyLdtI3mWMwOAYDAQwS+By8SXkMjPA
      c8NMyMy9yQ25Axkydyb3uZcASZgkmCUQFoeAFzA2tuXdlmRL1tabequu3qprPXXqnDN/lFTq
      ltRSa+luyXo/z+NH3V3n1PtW1eP6neX3/n7CcRwHSZIk6YqjrPQEJEmSpJUhA4AkSdIVSgYA
      SZKkK5R28h/+n93Lf0tg90+/AcDd2zdxzy3XLvv4c1mWhaqqcvwVtNJzWOnxbdsGQFFW5vhs
      pccH+RkUCgV6e3tZtWoVfr9/ycY5JQCshM33PgBAKmridrtWdC6GYeB2u+X4K2il57DS41er
      VQA0bWX+91zp8UF+BpVKBQBd15f0fViS8OY4Dv0v/or85BgAkwNv8Nov/5GZkT4c2+bA4z/i
      4JM/RSYgSZIkrZwlCQBTRw9h5GcozWQAGHzlCTbu/DB9zz/CwMuPk+zZTCjVxtgbLy7F8JIk
      SdIiLEkAiLWvIdK6uv677vEhhED3+MhPjBBpXU28cwPZ0f6lGF6SJGnF7Osb45NffpC/+sET
      VExrpadzRstyh8Oxam+CbVmouhuzXMQoZNG9geUYXpIk6aLLZEvsPzqFadnz/v7oM69R2b2H
      Zx9/gdGJ7IL7V0yLF/YPMpw5dZvZso3jT+L2+C76vOdakjsc44d2M/jyb0CAO9AAQrD/Vz9A
      d3tp23ILr/70m9hWlc33/JulGF6SJGlJTefLfPVHLzI6XeD+29Zy99au+mMfVib4QO4VHH8T
      UXXhM4DvPfoSX/vOr+lsivKtL91PIlI7IM5M5/nMV75P/+gUX/jwDj529w1L9jqWJAAkezaT
      7Nlc//3qu3+PSimP69gR/7X3fRqEgqrpSzG8JEnSivG6dfKApqlo6qW91EqcXAtoJdYBHHdt
      1OSWNpkGeiWPfynMYaXHX+kUxJUeHy6PzyCTLTExW2J1cwP6nC96xzQx9+9HTaVQU6kF96+Y
      FnsOD9McD9OcCM977PDgGM+9vJe7b7+BSEN4gWe4cJfEOgBJkqTLTSLsJRH2nvJ3oeu4Nm06
      6/4uXWXr+vbTPpaK+FnbGlnyM4hL+/xEkiRJWjIyAEiSJF2hZACQJEm6QskAIEmSdIWSN4El
      SZIuMcFgkK1bty75OPIMQJIk6RJjGAYjIyMYhrGk48gAIEmSdImpVCqMjIzUy0IvFRkAJEmS
      rlAyAEiSJF2hZACQJEm6QskAIEmS9CblmCa5b/8dU1/8Q8xDh055XAYASZKkNykrnab86COY
      e3ZTfuLxUx6X6wAkSZLepNRUCs9db8Pcvx/PbXec8rgMAJIkSZeYi7UQTOg6wY9/YsHH5SUg
      SZKkS4xcCCZJkvQmcrYbsnPJhWCSJElvIme7IbsS5D0ASZKkZXC2G7IrQQYASZKkZXCmG7IV
      02L3sf7ALYml6wF8MhkAJEmSVtj3Hn2Jr33n13Q2RfnWl+7Hs0zfzPIegCRJ0goTQuAPBNBd
      rmUdV54BSJIkrbBYIs6qNatpivjRdA0cc1nGlWcAkiRJF8i0bPYfnSKTLZ1xu+FMlhf2D1Ix
      rTNud3whWDAYvJjTPMWynAGMvP4c08O9xLvWk+zexMEnfoxQNXpu+R2EEMsxBUmSpCXz6CsD
      PPjEAZoifv7od68nEvCcsk1mOs9nvvJ9+ken+MKHd/Cxu2+oP3bXNR10pcLEQ14iAQ+GYTA5
      OUksFsPtdi/ZvJflDCB98BU2vu1DjLz2HAMvP06yZzOhVBtjb7y4HMNLkiRd0nRVYX1blETY
      CyzfQrDluQcgBM995y/wx5rIT4zQufVOqkaZw08/RNP669n9028A0LJ9E0by2mWZ0kIsy1ry
      5ddy/Et7Dis9vm3b9XlcieMfH/ty+gxu29BIS8RDPOTFp4vTzj3k0/mvn3s3I5ksm3tazvj6
      TNOs/7uU78OSBwDHtlEUlRs//B949affxB0IY5aLVIo5dG8AgM33PgBAKmridi/vXfCTGYax
      pKdccvxLfw4rPX61WgVA01YmR2Olx4fL7zNQDh2i7VvfRF+/HteHP4LQ9dNu19WSpKsledbn
      O37kr+v6kr4PS/4JC0XBKMxy6Lc/wzIN2rbcwqs//Sa2VWXzPf9mqYeXJElacuXfPI65ZzfW
      0FG023fwWklc0KKuogmzlo7tXOSJnmRZQvz1H/wcZrmA69gR/7X3fRqEgqqdPkpKkiRdTjy3
      34F5+DD6+vX8YPcQf/mD39YXdSUigXN6roJh8djhWWbKYaJZhy2hJZo0yxQAhBD1L38AVV/Z
      SwySJEkXk9O5iiMf//c0x8OIFw4suJ2VTmOl0+jr1y94mWg5yYVgkiRJF2huKYf/8cUPsKGr
      keZ4eN7RvzU5yfQf/xHW0BCBTz2A/773nva5/G6Vt/aEeP1gL13h2JLOWy4EkyRJuoh0TWXr
      +naaz/P6v2Oa+H76Q7b883fwpccu8uzmk2cAkiRJF+iDd1132qP+udRYjMif/Xn9EtBCjvcN
      sKemKD/xOHpPz1JNW54BSJIkXajhqTwP7x3jqQNpTMtecDs1lcK1adMZr/+rqRSuO99KuasL
      ZfvNSzHdOnkGIEmSdIF27R9l/9EpRqcK3LImSWxsEDWVQk2l5m1XGBilMDhK7IarUd2nDwJC
      11He/7tkNm0m2ta2pPOWZwCSJEkXaNv6Jta3Rbn1qhZ8TzzK9Bf/Q+2G7+RkfZvS6ARPvud/
      4Td3/wGHv/HDFZztCTIASJIkXaCuVJgv/e4N/O7Na9DUc/9adUyTyp49WOn0KY9Z6TSVPXtw
      zItfIlpeApIkSbqIfPf8DvrqntoloNiJNE5vU5xbf/xf65eA5io+9DPy3/wGamsrkf/zq3Cs
      MYw1Ocn0l//zWVNHz5cMAJIkSReR0HVcmzad9jF/RxP+jqZlntHCZACQJElaYaecNeRyQC11
      NLiI1NHzJQOAJEnSCjv5rOF4R7Bjv5ySTXSxyJvAkiRJlxjDMBgZGVnynggyAEiSJF1E5qFD
      TH3xD8l9++/mZe5UTIu/+sETfPLLD7Kv78wlHparI5gMAJIkSReoYlq8sH+Q4Uy23hug/Ogj
      WOMn0jpHJrL89Im9vLhvkF88s28FZ3uCvAcgSZJ0geZVA/3A9XiO9QZQkyeu3TfHw9x729Xs
      PjTMO7ZvWMHZniADgCRJ0kWkr+4h+pWvnvJ3l67y2d+97bT7OKaJuX9/vXzEm6ojmCRJ0pvZ
      YqqBnsnchWDuP/0vPHbUfPN0BJMkSXozc+m1HgDnoi+d5cEnDtDT3MDOM1QQXUoyAEiSJK2A
      eRVE77uL2Nq1xy4BJXmrJ7csHcFkAJAkSbpA5qFD5L71TfT16wl8+COL6vd7s69Mx0s/RKxd
      Rzy0HT15YiFYKhIkdePmpZwyINNAJUmSLthCqZ8nKwyMMv7bl7EMk8ju51k9fZSegy8hJjPz
      tluuhWDyDECSJOkCCb+/9oPuWvDo/3g/gNyhQTb/+f9ES2zhfY4vBAsGg7jd7iWbtzwDkCRJ
      ukDC46n9q2ugLu64+nz2udjkGYAkSdIFWqgHwFwn9wNQFM66z1KTAUCSrhBWOl0vK7yYm5TS
      4p2pB8BcHo+CHtZQlMXvs5TkJSBJugJYk5NM//EfMf3F/0DxoZ+t9HSuSJfiZyADgCRJ0hVK
      XgKSpCuAGosRWcLOUtLZXYqfwbIFALNcQNXdKKqGZVYQQqBo8jqkJC2X44XGpJWz2M9gXkew
      JbQsAeDw0w9hmRU8wSjR9jUcfOIn2FaVq97xUbyh6HJMQZIkaclYtsPYrEHQoxHyzP9aHc5k
      GZnIsnl1Cy5dPe3+pmVzeGSGeMhLIuzFMAwmJyeJxWKX/zqA7MgA3nCCRPdVHH31Sbbc+2+5
      6u0fYXjPM8sxvCRJ0pLaO5zjJ7vTPLQnTcGw6n/PTOf5zFe+z7/9swf53qMvLbj/o68M8OUf
      PM9Xf/Qi0/nysnUEW5YzgOJMhkC8iT0P/S2BRDOK5kLz+KiaZQB2//QbALRs34SRvHY5prQg
      y7KWfPm1HP/SnsNKj2/bdn0eV+L4x8e+nD6DuduZZgXj2LF1xazg4NS36RseZySTZXNPC7qm
      ztm/Np6Dg2maOI557LnMJX0fliUA+GONRFpX422IE0q1M9m/H6OQJdLcDcDmex8AIBU1cbtd
      yzGlBRmGsaSnXHL8S38OKz1+tVoFQNNWJkdjpceHy+8z2NLuorHBe8oloJakm69/8YOMTGRp
      iof5zFe+T//oFF/48A4+dvcN9e3evrWL1c2R+iWgXC4HgK7rl/8loO7td/P6w/9IYtVVtG2+
      hYm+1ylMpkmu2bIcw0uSJC0pVRG0NHhOuf5vGSaT//275L7wFWZ2H8Cs1s4USoY5b7tDg+P8
      X3//S7738PNUzBNnE+fSSP58LEuIDzd2EH77R+u/r9vx/uUYVpIkaUUVB0fp+8efUx6bYLYx
      ScVbK/mQL86/rPOLZ/bx4r5BBkam+J1briYaqGVIHm8kn5nJ84tn9rGhq/Gizk+uA5AkSbqI
      5vYG8L3/A3R95J1MPLeXDb//Pgb7Jk7bFP4d2zewv3+MzT0tNMXDGOUiAM0NPv7Qk4HZA6xq
      v+Oiz1UGAEmSpAs0Nw1UHOsNYA0dxXvXXVz9Hz9d3+6z15/Yp2Ja7D48THM8zIauRr71pfvr
      jxnDE7j7+lA9Hq4ZO4hdncZ3YDfccuNFnbcMAJIkSRdo73COp3unafBq3KXXyjyfqTcAwPce
      fYmvfefXdDZF+daX7q83k7cmJzG+/Gckh4bQPv4J1Lvehrl/P57b5BmAJEnSJU24PTicvs5/
      JltiYrbE6uaGsz5P7Tl0Ah/44Fm3PdNCtDORAUCSJOkCXd0SJBF0EfRoBK95D+bGdafU+Z/O
      l/nqj15kdLrA/bet5YN3XceGrkaa4+H60f/5mnsG8u7Njfjdp19xfDIZACRJks7D3KN5RYj6
      3xdb59+lq2xd377kc9PVhbP9ZQCQJEk6RycfzTenYmc9Ao8EPPzhe7ee9RKQGovh/tIfM/rC
      i/jv2LGo+cw9A6mY5ry53b21a8H9ZD8ASZKki8g8fIipL/4huW//HY45f8FXIuxlfVv0jEfl
      jmli//rXhB7/Fcro6KLGXGgh2tnIMwBJkqRzdPLRvCJE/Qhc/MPPMeakgWotref03FY6TeVX
      j+GZmsJ+5inYsOHsO51hbmciA4AkSdJ5SIRrdXuOa2mopX+WenoAUGJx8AfZ+ydfry0E+5PP
      8IO+CV49NMwX7t/B+oCDvesxRKoVsfUWxLGMITWVwnXnW5l58QUC22++KHNbiAwAkiRJF1H1
      0CEA7MkJcq++zugP/xVneorn//qHPKv7USYneKwzydpOG3PPHpT4CPraTdBQyxgSuo6yYwez
      wRDRpqYlnasMAJIkSReR5/Y7MA8fRl+/Hs/qDrZc24CdNlA3hNm691VEbhRN2UJ5CPJP70Ft
      aiLyXpvjt43nLgRTVAXue++SzVUGAEmSpItI7+kh+pWvArUvc8Wl4wjwhHyYQR+YYTxeF45d
      6xOAqoJtU9mzp9YuUtOY8oTINLRylVAXndJ5PmQAkCRJWgaK20V421WQnUJ0NVM6Mlx/rPjQ
      zyj+6Ieora2I//0/881r3sPodJG7o528ssiUzvMhA4AkSdIFKj/1FLlvfQO9uxvXDTdS+O6D
      tZ8/+e945p5PMenobPOVSP3Lg1SHhgi0bMQp1zoiOmaVoy1reO7Tf05MmNzk8dIU9VMolWls
      8NIS81O17EXd1D2bx54/wNce/DXrOlL86QN3ywAgSZJ0oar9/djpNCZAIESuVMUzNIpjWhTC
      McjOkg3GCJVtyloAT66IcBwUrxtFV5mNJGG8SDEcQw8F+cgt3by2v8p1XRFuXNtM0agSDXou
      eJ6HhjKMZLIA5IqGDACSJEkXyrtzJwjQOjs5muziqVW3kvBp7Aj42P7w17F6j+D/xCd5/n2/
      z0Sxyi1XtdCVG8SV3gSRBGunB0g++Peoq7rxX/tFhEsl5FFRhMDv0fF7Fq4qei7ec9smBLC6
      NUEqGpQBQJIk6UIJXcUd9yOCboqFEh2v7cJu7cBYHcU3MoCdncQeHMDrKtIxNECx625EtYzq
      84BLxRwfZ+CqbUQwaS4WwOdbknk2xkJ8+r4TawtkAJAkSbpA1nNPYD7yY0Q0TkewjdRTv0RJ
      pgjcdR3Wpx6g2t+PvnkLm/7iq9jjaXwdYcS7763tHE3Sb8XYN1wg6FJYFYwgLOPMA14kshaQ
      JEnSBRJNrYhoHKW5A1drGwJQfD4Un7dW2N8BJeDHtbq7ttK3qwu7ZFB8Y5DKyARJrcrWiT2s
      NUZwCcj88hmmv/2vVNJTSzpveQYgSZJ0gdSrrkNp7UJ4fRR+9M8AOKUi1uBRct/6BnY6DQJC
      n/sCTqGAEo9T+O53KXznH1BSKVrefw9tEwfAaKB0JMz+P/lrCgOjjLW0EPvfPrlk85YBQJIk
      6QLZk5OUHn4YrbMTrSmJb207xJIoiQR6dzcmoLW1U3n1Var9/Xh37kTr7ERJpdC7u8mEG/nJ
      04foaXNzczxG6KrVGIZBYG3nks5bBgBJkqQLVHr44frRfMP770Ff1wHBMErAWz/qdyyL6T/6
      X+tnA/4Pfgi9pwfh9/O9R17lb0c9NBoOG1U3V33t87zxym4iN29d0nnLACBJknShlOMdwQQi
      loSZNMRT4PKguD0QCGDn8yfOBjo7EapaK/0ANEQaWNXTTSzgRtVUNI8fvTGGuMilH04mA4Ak
      SdJ5sPP5+vV8jtf1wYG21TjxRpRoDOE+sXhLCQTm3QOYy+X24HK78Xi9KIoKxVnU6Wmw7Xnj
      CPX0vX4dy8KemED4/SiBxfcXlgFAkiTpHNn5PLN/+TXM3iMEP/UASiwKgPD6qOzZTeH730Pv
      7ib0uS/M+0JWAgE4zRf0bVe3goC2eICIUmX26/+D5BtvIEyT2RdfqI/juen0/QGMXbvqpShO
      HvNMZACQJEk6R1Y+z8uzDkO+LnYMjRGlgm9tO47bQ2XPnlpZCNvGzuXqX8aW7fDy4TRHJ/K1
      L3zgib1DtMUDXLs6xX3bVgNQHR3FOnIYbWaa6mt7MXuPYKfTVPv7YYEAMLcUhVMonDbInI4M
      AJIkSedoxh3kZz23MpEzCDR3ca8+AlPtEAhRnLZPu89Ursx3njjAxGwJBODAP+86TCLkpTMV
      Pm2xNzURx3NsIZn3bTsXnM/cUhQnX146k2ULAI5Tu0YmhMC2LIQAoZz+epYkSdKlzOd10dnY
      gFBytDU24MxOUzpwFLWrE7VtDQDCH0Dx+0/s41K5xZfDKY+zKtCDXTJ4W++zaJ2d2PZWnu+f
      IeZ30RkIovf0YCoKWvfq+kKyM1ETCQIf/sg5v45lCwC9z/4SVXfRtH4rB5/4CQDr7nw/untp
      al5IkiQtFb9H51M7r65X6Sw9+BjFAwMoM2VclhuoLQRzSiUIhQDwVYv8jnkYx5xAK3dTODxE
      aPwNvNVReg9u4+Wyh6BHI7E5RfCBT2Ol0yjRKNN//Ef11NHz+ZJfiGNZyxMAZscGsasmlcIs
      gy8/Qfe2d2AUc4y89hwd192xHFOQJEm6qOZV6ZyTBoqinPhZnNjeMS3yrxys9QPouY6+rqt5
      9J42UrrFlliY4KRFwq+jl4vk/vrrmL1H8H/o/nmpoxeTsWvX0gcA27Y4sutfWXv7fRzZ9Uuq
      poG3IYHLFyR94BUAdv/0GwC0bN+Ekbx2qad0RpZlYRjLU4hJjn9pzmGlx7dtuz6PK3H842Nf
      Tp+BVa3WfnAc7PrPNhWjgnLsddiFIqWyRVkLoM/kyaxKkAspKF6dRMTHTmcCT9gNuSzmkSNY
      42nMdBrX730CdTwN69Zf1PfE6D2y9AHALOYRisrgq08yObCfxrXXkZ8YpVKcxR+tLYLYfO8D
      AKSiJm63a6mndEaGYeB2u+X4K2il57DS41ePfYFo2srkaKz0+HD5fQbaO+5GVdXa9fzpGSq/
      egzh8+MOh1GOvQ4j2chL7/tMvR/A1uYYqqqSDLkJ7ttN4W++idPdjft//hzmxz/O2Isv4L/+
      Birf/jvM3iPon3oA9wJZQOdDe8cydARzB8JsufdT2FYVbyhK47qtvPHrH4KAjXd9aKmHlyRJ
      uugsy+bxlw5xaCjDe27bRLwhTPWuuxAeD87PfgbU7gHYhTyVPXuo9vdTve1OpoNxiq4q06qH
      rvwMW198BK2zE2ugF5dWgckRqvk8T7kS7PJ08nuFCuHDh7AzGczDhxdcB3A+1ERi+W4CK6pG
      x3U7ALj67o+BELUVb5IkSZeZsakcX3vw14xksgjggzf3MJNJo+kuEjt24Beids3eoV4N1IfD
      TTvfy1ShwvrGAKUffq9ePyh0181oLREIRxjPFfmrf3qKkUyWlKLwgSV8HStyjqeocvmBJEmX
      r6DPzbqO2iXs1a0JtEIB7ZFH0Dq7UG7cdiJ10+9ndMtNTOZNNnWupjvhoztRy3wsz6kGWuq+
      iv2mn5jfRTwSwe+pXQpPtqQQ/gBkMqjJ5EV/HfKbWJIk6RyF/B7+9IG7yRUNUtEgpe8+iP7I
      oyipFMW+fsqPPoKSSqH9yX/h1be8k5xRJdDaQGzOc7i3batXA31xosrLRgtBj8YNBhTKFQAy
      oxmcUhEAe+riN4eRAUCSJOk8BP0egv5asbe5tYDUlpb6z56gn0SuAkIQ9WnYvfthKoNYtwW7
      ZFB69FG0zk4SyTY273kYpaWD2Opt7FSymKV+NjRdv6g0UCuTqfcjcG/btmDRuJPJACBJknSB
      7KkphCKgXMIaHgZqN4FdpsFbOhuYLlRod5nYv30YZ3oS1XEoHTxK8Xv/iJJMkdq+lejLj6MM
      pfCsa+a+2SMUnBlaimMEFqggOtfcfgR6Tw+W24eZzeNtSaJoJ4LByVVDZQCQJEm6QKpHw9Xg
      RoTcc46+BQWjyv/37Ov0j+f40OYEGw/0YY0O4113PapPx53wISJebNPByBRR9TKO5uH7G3dy
      tGDxoWQX2xaoIDrPnIVolWyel//jXzKz9xCbv/xZWu89sdj2lKqhS/JuSJIkvQlVZnIUBkax
      q/MXiAlFIFQFoQpwjheDcygaJunpPFWzwnB6BitXwC4a2PkCilr70haawKra5P1RDOGmKHSm
      /WGErpL2RRY3sTn9CMxsjpm9hygMjJLd1ztvs3rV0CNHcAoFeQYgSZK0GJWZHC/8/p+d9sja
      ddudAKht7ZjpSXj4YYTXRzQW4v7r4lQNg8aGMNWHdap5E0+gAUeAkSmhBQQTt9zN0+23kPBp
      7Ig38OniizA5SEhrBnrOOre51UBdmzey+cufJbuvl66PvmvB7ZR4XAYASZKkxTCz+XlH1nMD
      gGM5VAsmlC2sdLr2t0IeK5ejjItpRyWey6HN5sB2qB7fxrKxsrMUp6ZYk96PmWjBzMdoGB7E
      Sqfxjh1d1NxOrgbaeu8d8+a30HYyAEiSJC2CtyW54JH1vJuwGzbW/162FfYXPOSMKkGXzeoF
      nrtn8CU48ByMx9HXNJFN57AzBfSZEktZEEMGAEmSrgjnkypZHErT9w8PEd7QTfM7b13wyHpu
      Gmhh7VX8aqBIWzzIDcEAXc88TbW/n+Tbbp+3qEtxaXhaIohUCjXZTClTQPMnUaNRhD+Ak8mg
      ROOUn3qq1hBm507UROKsc3YsC2PXrtPuM/f1NN64/twCgFUuonpk/X5Jki4/J6dKqqnUWffp
      +4eHeP3P/wZ/RxORLevwxoKnbdBuT9YWaTmlIs/aIV5o2sj+WAPrp7Os//UPsTNp3D6DypxF
      Xa7mCHYiiBJxY/YNUsnkqSrjuDOT9cVf5sEDVPbsPqd+APbERL38xMn7zH09+v3bzi0A5Pr3
      orh8hFZdfS67SZIkrThtTukFMadT15mEN3Tj72iiYdMaNE3MawQ/rzDbnDTMqyf6WP/SQ5it
      Hfjv7EI0h8BnooR9VI43CBACc6ZIfv8IWgto61L1/WvPJRCAEgyecz8A4fcvuM/c1+PbfPXi
      A0C1XGC2fx9GNoPj2IS7Ny92V0mSpBU3t/SCssim6c3vvJXIlnXo4QCqUVy4QfucNMxULkO5
      PIuSG8djGZi6ik0t3VOoAsWtgeNgFQ0EYJdNHLNa37/2XMda6Pp89e5g+vr18+ZmVy1Kw+Po
      4QCuhmD970ogQGiBxWNzX4/u95w9ADi2TfqZH1PJz1KaHMFxbMZe+CWqN0igedWi3kRJkqSV
      JlR1UZd95lI0FX9HEwCO5SO4QIP2ufcAfPe+GzWVQuvsRG1qJTdZoTowTeDOOIGrOnHGdfTu
      NgDU9c2IZAtWW1t9fyUaRXh9OIBwuevdwU4+6xj5+ZPs/tJf0bBpDdf/9y+dEgROt3hs7usp
      P/XUIs4AhEAPxckOvIHj2LgiKRqvfzt6YJELFCRJkt4EhKrWvoBvuhnHsubdnHVmpvC0RMDt
      gFnGHfcjgm7sQgFrOotjWlj9/WhuFaIRKOdxyhWsmSKKO4vFAHAsdXR8HKeQRwBmX++CZx3Z
      fUcoDIwCtRTV4wHAsW2c/gP1mkMiEDrt66n29589AAghQNHwJtrIj/XRdseH0H3Bs+0mSZL0
      pnXyjVZPKliv52+/+jTWC08honG093zixE6qihoMgyIQXh/G6BRmJoviuMB3+jMTNRHHs8BZ
      R9dH7wEE4Q2r8LbMKRVdmMXZ9RjksgCIrbee9rm9O3eePQCUJkdRXG7a7voo468+Lr/8JUm6
      Is1Nr3Rv3467JYGjVdAakzheF6XhaTRXA+5kC5auI3wBlGgMPd6AbWTROjoR9izYVUQ4itps
      obfEEYlG6OqCxx9H+AOIVIrXurZwNJDjrR1raD521nEyt1uho82NFtMRc5rPo+kYEzmsvkG8
      16lU5pypAPNSYc8aANyhGN5Y7ZpR6podF+edlCRJuszMPep3spO4Ez7Qo6iqSXl81QYAACAA
      SURBVLl3HGN4GrPqQuseRdE1sKuQz6K5LJyQG6U4hQh6wecHy0TRbFwtcQgHMDLHVgaXikwV
      TX7aej0ToRIBTxP3LTCfhdJa7dk8hVfewE6nsX/77Lw0Uhzm7XPWAKDoK9ukXZIk6VIwL71y
      zVqcvZNYswVUXxAldqywm9eH2tIOE0MQjiLCEdRIBKdSREk2Uh0dwB4ZRL/qBnD7qU7OoHjD
      6N2d+Na2QyyJCAe4yR7Fyh2ly9tVH//ka/sLpbXOnae+cSNOIX8iJdShvo9dKi4+DdS2qhQm
      x7DMCu5AGE8oWrs/IEmSdAWYm14phMP4r37ObNakdSyNnTNQ3DqYBsI0UeJJCIQQlTJCBcft
      wpnOUNm3DzszDr1HwLIxx6dQ0PH2rEdpT6FE4yilGd6ZeR4nO46eWY2db6mldLr1edf23dtu
      Om1a68lpoO4t15xII1WU+j7Fn/xkcQFgon8fQ7ufxuULoLk8lHPT6N4Aq97ydtz+099hliRJ
      erM5nl45OzHFn1c6OWjE+bwT4fZEEXVTOwQigI0zOwNCwanaFPsyVIdH8K8qYkwUsUZzaKUq
      OCd6ACijUxSf3oPW2krwFgunVMEuGNjZ3InFZx/7GHq8ERAQTZ4xrfX4PO18/pQ00vo+ilhc
      ADBLBTa87X40lxvHtqlWyhj5LKWZCRkAJEm67Nn5/GlLPJzMMcpQKZOzBaNVF3bVob/qRvGY
      WNQWeQm7ipUvorh8YJrYpQpYNtVcCadSxbFsbKOKjSAtvISqCtp0DrtoUM3mcYxaP2Ch69jZ
      2RNpoKNjuN/3PqiUYZHfu06hQLW/D2cqQ7W/H2f7TVimiaKqYDuLCwBN66/HKOboe/4xStkM
      ucwwN3zwc6j6UtapkyRJWnp2Pr9wiYc5HKOM/ZuHYGKMxMa38H/Yvdi5XlL+mzANhfzeAbQu
      FXeHTeHpvWhdXYR2BvG0x7G1Eu61XTDUh5KbQkvG2eVu5L81p+lpjvL5tlp2pfD6UGIJ3OvW
      4kxlULZuRVm/pZ4GKtwecHsW/doUvw/f6kbsgIm7o5libpbpsVFcHg+Rt771HEtBjPVjVU1C
      qXbMclEGAEmSLntOobBwiYe5KmWYGINcFjHUR6szC1EV19QotqLgSoYBE3N0DOf6rVgO2FMT
      qJqDEgngjA+jCBPR4IWZSWY8ft7mmqBYVZkdzBKkthDMmZ6kMprBGhnFvXmG4Y23MtlyFRuC
      ARZTwGJuuqrnhusQTgVFV6GYxRwdhX/9F6pt7fCu31l8APCEYvhjTTSuvZZSdgJ3oGGxu0qS
      JF2ylHh8wRIP8/hDiG13wdQ4aqIZz8vP4LhNtAYviteL3h6HUATjLdchymWEy4WINKCEAoCJ
      EvTjhL04jhfF72KnPYYtBkDJU6UV49gwVqlC4fU+7PFxcoeGedozTc6oIoDrO8/+vTtvkZpj
      47nnfpyxo6g33Ib6Lz9He+RR1FQKccut55AFVDXJZ4YZqZrEV23ErpqoMkVUkqTL3NwSD2fc
      TlEQq9bBqnU4pQJKWxe2qqC0diGqFRzbRrjd6D4/zsG9iEQjyup1lAsW1cEpfNtS2ELHypXR
      w1HsQANHr7mTgFcn5vFhPfMkSjSMmkggfH4cwNuYIhHQa/d9/Qt/387tdeDatOlEuuqqVWib
      tsKmrQCosRiCY5eavL7FBwDN7aXntndz5Omf8+qP/5pYxzo27Lxf3gSWJOmKI7x+XB/8FE6p
      iGiIYj35C7AsnGIR7fDrKAMHYCaD3bqa8pERnIks5dcO4IxNYWdLVEfGSd98Lek1KlOBAP4D
      z1NMJPB6NJzsNMI0UD0u9NwMt7d6KGdNwhE3hbJJ0agSDXpQlRNp+HMXhUW/8hcLVxCd07fA
      KZUWHwDMUp6Dv/kxjeuuZcPb7ic/MYKRn5EBQJKkK5Lw+hDeYw2yVBV0HaFpoGn1n4VLx7+m
      CZq9iEQY49CxBWOKID70BtHHfoCVauXo+lt44o5OUrrNu/xB/Bs7oRhB+F2U/t//m2rvEWY+
      +gn+Ph+mfzzHh29fy/U9jfW5zF0UBixYQfTkxWPndAYQbupgeugI00NH2HDXB1FU2VFSkqQr
      x5nSRYUQIAQ4No5hgmUjVIHqcWEXBYrn2PelInBsB99Mmmoxi5jRmXUHEe4iOb8P0+PDFQ7g
      aDY4VcyREaxKhfyhI6SddqzJGYYzTfMCgPvGG1FCoXqOv3V0AGZnqA70Y2/ecmJR2JztlEBg
      8QGgOD1OdrT/+EvFsSxYZADIZUbIT47gj6QIJluZ6H0NoajEOtfL1cSSJF0WzpQuerzksnC7
      sWwXhd2H0Tot/JqXSmYWa3AUz/UhtGQDdjWH1phA8XkQPi9KOMy17lk2ZJ4GO0XQ906qnT04
      uSzK+s1Um7qoVAwi8RQf/9a3sft6SbwlAaypj2889xy5b30Dvbub4Kd/n+D2zTCdQXQ0z5sz
      DvXtQp/7wuIDgO71E27qpDidIZcZomoaqK7FpYFODx3CF45z8Mmf0L7lVvKTo5hGCVV3EWld
      vdgpSJIkLbnJXJnH9wzSFg+ytcmHOLgbogkcb8OJdNHeXqpBN87oEOqNt+HMTOFUKjj5PNbQ
      IHrYC2YZe2IcYVfRomHskaMIqigBD87sNHZZpzqTR9Vn8GSG8ChVMLKIQg4nPYadGcNp6sA5
      OoZ6dBDr2q1EM8PYpVncwwPzbvxWj83LBJzpSaqZSayRNK6WoyiFaTwNbuzhQaxSpbadbWPn
      cosLAEZhlvLsDJHW1YRSHURaV+PyLa6lGkD7NbeR6X0dTzBCpvc11r/1A5jlIgMv/opI62rG
      3ngJgPyaBNWmlvP60C4W27apVqtn31CO/6adw6UwPrBic1jp8Y/PYaXGf3zPID95tpd4yEPn
      qjLxQy9CMIzzjg/i+8QnqQ70oW+9lsqP/hamJ7Adp3blxzShYqA1+1BTDRCKgMeF3pKAnA7x
      MHbWA1UP6BrmTB5rahZbuNCdWuFNx+XCKhWx9u+F6UkcfwT9yeexxsdRTKveedKxbQq//AWl
      B7+DkkoR+PwX8OCgdXRhef0UXuvFzmRwuqfwbexCFGZxWlMUDwyceI8ta3EBID8xwvDeXWTH
      Boh1rGOi73WaN9646DTQ9MFXmBw4wLod7+Pgb36M4zi1lCll4SXXkiRJK6EtHiQe8tCRCOFr
      isJYA8RSCI8P90034b7pJijmqVQE1UwBny+I8LhB0xD+ICSaqOaKKKE4ajhCJWdS7R/He0MS
      JZIBx0bEkqjuApbPhWgIY/sbKL32OFpnJ3ogjNoQwamUEG2djFzjYipvsnHjapS+XpjIoCZT
      iFAQJZVCW9WN1tGJvmEjUFvYpq3uoaooaOs2UHn9Jaz+o7iv96K1NOFK+FGaYojAIm8CxzrW
      4QlFOfibH7PqLTspTo9jGsVFB4Aju37B6u3vJDvSR2L11fQ9+0tMo0TT+usBaFx3HQCBqImm
      reyNZcuyVnQOV/r4l8IcVnr840e+KzWHlR4fVvYz2NrTSGcyiM+tEfC4oK0dXJ5aGYbj8ysZ
      lAcz2Jk8+tE0nrYYQtfBsbCHjmLnCjiZSbSJCYr7+7HT4ygHjuALuiEYQjgWlAuoPjdCtTFe
      2Utx7yGU8Vkib51C6AoEfJSA3W95Jzmjitdr0F0qAeDMTON7+9txr1l7apP7cJjw52vVQB3L
      Yvo738FOpxEHenHH/ZAIIEIqqr3IMwAAX0OCQLyZ/Y99H380hdu3+PTPnptrrcsA4l0b60f/
      4abORT+HJEnSclCKOWKHXkbEkpBsxjmwB6IJaO/BePbZWkewbdvqKaBKNIoINYDLhfAFEI3N
      KH4vIhxCiURRg36YUlAbm7BnBnGy02huL0oihdbaXusb0Lwa/zXrIRxFaYjiNERrq3hjcRJu
      FwhBPOk7scCrs3Nx1UBnZ+d3LnOpGJkCmj+JPrvIewBQS3HqueWe83pDE91Xz/s9uXrTeT2P
      JEnSUpib3unsfwX7qcdQonHsjm44sBuCDdi2Ui+xYI2nEdUKiteNPT0FETdC1xGODYUZ1HAA
      4VZqmTxVA1wKTnoYKzuGk80ixkfRUk0QiSEaooioH/fmtRAIgWOhen041TAeFe7o8GHkCwST
      MZwFFng5tg2F2VPOVIRt4kn6cTyJWueygXEqmTxVZZzqP//z4gOA49hM9O7DqpoApHo2IxTl
      Ir39kiRJK+Pk9E5naor8sdr8oauvh2ADxFO1/r7HO2319ODxmIhSM6IpAbYNRgWnWkUNBFGa
      WsEfBE1D9eoIvwvFrSM8HvB4EJqOOZqm9MQu1JZWfDtTUC6B7kbg4JgVqJRxinmUn/097tFB
      rFvupvDw46dNQ3X6D9SaxcQbUW6/50QQUBSUhgioSu2MRZk5tofgGU9q8QEgPzHKwSd/QuO6
      Wk0Jx3GQGfySJF3uTqkG6lCvzW83r6LUvg63z4vb7zvRacutY/3kCHY5jxrwYBtlajvaCE3H
      PrZKWAiB0ARCU2qN248vFhNgZXM4VQsrl8culaBcRngqCNvGMQzsQgk1n8MZG4LZGezegwtX
      LZ3KHOsUJmqBA2rVSx3qq5PFsR4Ax141fcK7+ADg9odQNR1/tHbNSS7gkiTpzeB01UBtx0br
      7GRQCfD0kVkSAYsd6zy4j19bz82Se22Aal8fwc23oScaQNMRPj/V1lUUbdB8AXyRKGosgjDz
      qK2t2AcmoVoFXxBXdwT16tUQS+K4PFQOHERpaccl9PpzB9Zcj97UCm4XYuMmgu3rTlu1VKzb
      UvshmgTdVe9bIN5yZ72CqVi3BW/HehC1ewjvW3PV4gOAorlIrbmGUnYCkGcAkiRdvubWzHfd
      dRdP6QkOeeE9ipvGWAjfh+4HYHIoT86ogoBSxWJP7zhHJ/LcHFcR4xPYxTLm0DC6XoVKBQp5
      rKkM2uggRBPY+RxUSghFwU4Po+BAMAT5bO2msUtDYGGPDaH4Tywec2ZnUBQLa6APTS1iZ7No
      uSyem+6qH/nPqwC6YS3W5CTC5UUtFTF278UaGcXT1I3lClHtH6x9+QM4tf8StrG4ADA9fATb
      rFCYSs95B52Fd5AkSbqEza2ZPzKR5Wv9CiOZLAL49H0nLq1saAwgqJVirlRMvvPEASZmS1hd
      fm6f83xO1cSpGDhGGW3sKOrQEZidQqw5kQAjVBU1EgWXDv4AjmGAbePYNkowgIiGIdCA4tbR
      gy4c042qQzWdwZmZRORmmbtyam4F0OCd27FffQYRjeO85xP1fgL2y69Ree21Wm8AATjU93Ft
      2ry4ACCEQjDZissXPPGCHZvS7BTeUPS8PgBJkqQzmXuU7t25EzWRuGjPLfz++g3dyIa1rHNm
      AVjdmsDKZCj+8he1ypkdPfi++3PcG7rx7biRbaVBrPQgq667C3dnM45foLe1IKJBlEgMInFE
      OEFldBJFD6KFIyjROI5VRWlux+4/gD09heb14yg65mgGRfPjSrVgD/chwlFEJIYSCmHnZ1Da
      OqgMHaWaKaD5Qti9+2Eqg1i3Ba21Cd/adoglIdZYT+90xRLoq1djCoG+8SrIDGPbebRUAhxq
      C8FSEfTO9sUFgKmjBxk78BINzd1obg+l7CT9LzxGx3U7ZACQJGlRHMvCnpg4deHSAuZ1thIQ
      +PBHFjVOZSaHmc3jbUmiaKevNqAEAidu6Mbj/KctM8yOT9K8dhWl73+vXmJhLLKO3n/4Oe6W
      Rm5qjfKOvt9ijafx9Eex2pMYUT8+DygCCDcg/AGM/gGq03mEGMWVnUHRNRyfF3IzVNOjONkZ
      RHoUK1ugMjqBUlXQr5pF8frB5YJioVYzyOvGTo9RGZnCzleo7D+I0vs69tQEmuPg8muonY2I
      SIzy0WGqBRN7dAofAvHv/j3lzCQNiRDi1V/j0IBql7CBSnsrnqAf1ZheXADouuFtzKYHmR46
      gjVZxhuOseb2+2QvAEmSFs3YtWteJcqzBYG5R+laZ+eixqjM5Hjh9/+Mmb2H2Pzlz9J67x0L
      bltfLJXP43z9v+HpPYL5qQeOfZsDCOIJN8GrfRD3oukKxZxJdcYAx8Uzq7Yxaapsj/pZVRjG
      yc/iqBparBF1Yzf4Q6AqVCcmsTNj6KuN2pi2iXC7QRRrl9IdcKoVnOxkLUFIEaiRMCg2IhzA
      f3UnFKIQC5H77S6qQ0MEeq5DdauUXz+I2tSMfs0NuLZvwvEGyJsW/+mfnuaNgTSff9c13J5q
      QgT8iGCQ/mA7z2zvJK5V2T66Z7GXgAThxg7CjR2L+hAkSZJOVu3vP1GxslCAswSAk4/SF8PM
      5pnZe4jCwCjZfb3zAsDJZyCOUa6lTOZLp6SBHtsDr1ehlEzgaQig4mBXLbAdyrZKzhfBKRnM
      eKIw049jGIhKBcWt43hc4PfULrsbFahaOJUKiqLgCIFQBDgOQlNrAadSwalUoFJBOA5CVXEU
      geLSEEEfUMHR1VpqatHAmi0gfDqOUcHKF3F7dHCpEPCSr5i8MZBmJJPl8PAkO3QdRxEITWc6
      kCDvdyE8GuWh1xefBVQp5end9QuSPZtpaFqFssL1YiRJurx4d+6spyAu9gv9+FH6osdoSbL5
      y58lu6+Xro++a95j885A/uAPcF54vJYqeeOOBdNAhxu7eWrVrSR8Gm/tWVvfzn3HHdzZdwiM
      LD7Vg4VCZWgYxdZwXR2rdQjzeCEYrv0LKPEUTjaDUyqBx4fW5ob2JCLZjBMIYabHURQ3Lq8P
      x3awi0XUUBQln8UxyohU87zyE64bbwBAbWuHqkFleAjFFvj8PvyeWp22RLwBa7iIMzWJUDX8
      rtolMZcqCF295hz6Abh9JFZv4ugrT7L7Z39D903vpPXqm1BUWdFTkqSzUxOJRV/HP1+KptJ6
      7x2nvfRT2HeQ3hcGCI0b+N+XxjyWKultXYPntp3zFlYdTwOdHspTbIgz5dGoCJXQsebxVrHA
      lKUzqcXZUC6hZdI4VQs7l8VJD2GXS4h8DrJTCNtE+L21NFDHQQRDtUVb1SrgQKWEMzaEcLlq
      ZyTTk2AaCF3HyYxCIYdTLsHYMLpXoLfHcbJTKNE4nvd8AADz4R+DaeLkZylkZymUKwBk0hM4
      xUKtX/HsNHZglusyu6lU4lQ959AT2DIrDL36FLZVZe3t95GfHGN2bICGllUX8nlJkiQti9F0
      hYHBCj7boCVbxjiWKikGx1joHGNuGmjAfeJgtyBcPOfqIOdU0bQQWxSBUBWEotQu5RhG7Utb
      CJSgH5wKajCAojng0hD+ANXJiWM9BEwUtwvV7wO/v9ZL2O2plY1QVexiAUpFBBberhTMulBS
      DfPmqd54GwgQjW00rergC/fv4PBQhnffehXaeDvO+AjqNdtZf2APTOyBchhlx73nUAxOEcRX
      bcQbiiIUhWTP5tqSZkmSpMtAw6a1+DuaaNi0BndbC/axVEltVfe87eamgTrXvYXTrXhyq4K1
      2SPY46OkOm5DhGPYZRNFc0M0RWVsCtUVQg9FEL4ATjGPSDRhHZzEHh9H9/gQDdHaTWCPF6Wx
      DbvvDQgEEaEIdtXBnsriiiZhZhLMCkpjK9b4cK2acsP87Evh9kDXGkQwjCIEO+I2OxQb4XIw
      pgpUh6bxbqxSijSyL76JmN9Fl6IuPgBUjTJ9zz8CjoPjONz0iT+WTeElSbpsNL/zViJb1qGH
      A7gagugL3GAuPfxwPQ30sCvFy2UPQY9GIugidKyxu6s4yzWHn4DsFMrRBqzJLI5hYmdnqRw4
      hJmexrJduKanELaF0DScyXGqQwM4UxMoI0ePNZAHyuXapSLdBY6DnZ3BHB7DmZxBGRxA11Tw
      +iA/i1Ms1i7nZKfnzbk61Id1+HUsrx+XImqF4XJZrHSa3D89VE+l3X/Tu3gxUXs9kV1PLT4A
      mOUi8c71GPks1UoZs1TAHQhf+KciSdKbxlIu3rpQiqbi72g68fsCN5iVWO3oWnh9JBWTDU89
      itbZiXvz2+oLsWhfjZmrUB2cwKf7UBJutGQUEU+gtHfgpCKIZBwRasAqVLCGMrivj6CEwtjl
      IqIhVlsZnEgiInFoiGHlcyj+MEoojNoQwi7NIlLNTAuFUoNBItlGtfAc1aEp/C7/vFIQSkOA
      8nMvo3V24dqyDWMih9U3iHvdDejREHZpGjURJ27MsuGph2rlI5KhxQcAfzRF0/rrMfJZpoeP
      oHsXf2dekqQrw/ku3loOtuOQNyzcmoJbW7iUvT05BYBTKhL/7cMEnnoE5VAK9cYeCs/+huJs
      job0ONm+CcpZG6V3CF9nAi0aRoS8YJfQEg2IBi9OdhqjbwhnagZx+AiaKlC8HqiUUAJBiEQh
      HMYeH6k1lNczKLMzKLqCCAcwTYOR5g1Uc7M4jgf96DRGQUHtH0H0DVH68Q9QonG0DRsxX91L
      dWgM17XbKO45iJ1J4+x5DVWzED4dpTxL8sUnCb78CEp/HHv9xsUFgIm+ffXG7XWyFpAkSSc5
      n8Vby6VvosTTR6ZJBHR2rIsvGAS0zs56r10lcLz8jaCIzt8YnQyUK9znSjLzzo8z6ehsb/Wx
      auYw5tg4iqWgJlux83mE2weahqe7FVJBRDSMfWQIJ5dHrVaxiwXM4UEUw0C0rTpWJlpBaBpa
      Mgk+D4qu0fTLH8DRAZy738vud3+SGaFzbcpD+/RAffGXE4ngWt8MwQiKR8fTHAKfiRL0Upop
      Y2WK6IaFuzlR38dwXIsLAKFUG25/iEoxT6WcR3N5EKpsBiNJ0nzns3hruUzlyljjY2SNEEY1
      umAAcG/bhrJqFcLvx3jooWN/dSg6CuMVFatoMKA2oMdcKPkCuVgjzvg+QOBUq7WFXwC2hRCg
      BP04wkZx69iWBTi17Zxa/wCnYkDVqtXsV5RaNo/LDS4XqmXhyYziFGep5LLk1l1HybDIJ4Ko
      1XGcgBcCAZyAG1NRUDw6QlNQPRqOS0XRBI5p11oVVCzUoAfboyNCPsy8srgA4PIFQQje+PU/
      oeouvOE4kdbVaC7P2XeWJOmKcq6Lt5ZLz+BrxB78OuqqbvzXfhE8p5+jUFWUZBKYv3hNS0T4
      +OFfYff1EtvsRzk6AOkhfE3vRW1ugZZGRCyFaO+EvtcR8QREYlS7N2IVcrhXrUUZ6sU2yyjR
      OELToSGCiCcR7V0oI70QTSJCkdoCMquKaGzG1d6E43HQ2prx6iqVqk3ApSKCYfj/2XvzIFuu
      +77vc3rvvvs2+7yZeRseAGInQFIQzF20KVGU6MhSZJVlyZFKUqWSlJVK5S+nKv+pKkryR1y2
      bFdSSShFdhRRchxbosQFFkBxBUns7+Et8+bNfvd7u2/vffJH3xkMQICcB2IhxftBodBz55w+
      fadRffr8zu/3/RomFIqkVplor4uql9CLZYRTQI76qEvLGPNVsmiIvthC6ibZeIiwC5h33oYf
      QOgOcWpzxIGH291DZumbclNmzJgx4+1A296iMOyi7Gow8aD02hPAyTTQ0aV7+Yy9zgW9xd/y
      XOrtHTJ/hHXtBcysj3R7aO0dZKlMungGRTdQe4e5YVYcIr0xstdGdA/JKjVEmiJME+kOQdWQ
      SZzn+PfauWNXmuTZPqNB7gnQ2UexTZibJ3JHzMubrIy6yMZ9+Sbwc9fRln3EgkS9dCeoOlm/
      C2GQexDs3iIbjkmChKzdJo19/BsHqIFAtyunnwCKzUWscp3JoE1z424003nTbsyMGTNmvNWc
      VoriZBroH73nk/zLJ15iqVXh4q9+EPuokczDOKQpMkuRtSZZawlp2Siee9yGMEC59kKe5llv
      InQj/1fTkGGEDENkEKDI7OjEyDQh7XdgNIDAR2suwMSl6Bjct/tUbv6+UMS/scPkuWso7TGl
      X3kEreKAZSMcBxSRF6VJiL2IbBKTBgnpwZBgq4MSKKRO6/QTwN7zX2O4t4luOlSXNmaWkDNm
      zPiB47ulob6eFMWr+8TFKptbIZWSzl1zZX7J30RX1qk0aygX1qBuo126xM3RhK4bcff8BgXD
      RBt2EWoLpTVPZhhQKKGUa6jNOVAVlKUzINNcmK3ahDhGKVfzMNHyWTqJgm2ZVMs15MIqWbGC
      sngGufUSMpigVOrIw11IEhSniLa0iLVcQ8zPEcyt8vxukYZtcL5URVgOcthHrKyzfb9CZxzy
      wNk7KGU+zj3nEdUm6l13nW4CCN0Bm1//HPf+5K+QpTFP/7v/jUd/9Z/MJoEZM2b8QPFG0lBf
      3Wd3O+J6UKZ4M+TdV75NI9yj0o8oTAZE588QLTVJSiWeajyAH8YYlRoPdJ8jmASYdFGFQlKu
      oWo6hAFquQqqAllGViyTaToK5G/95QrCdmjbNbZWSjiGhiM0srklZKlCpihE3oQwVSi19xGB
      n28cj4eoWkJ8fh2zWOSlyOSq0uAWFgt+jEghMMsofsTTD36Y0PMoLq7ynslLKA/cjXAKKA3n
      dBPA6HCbUmuZJPLzD4QgSyJU3fx+7tWMGTNmvKm8kTTUV/eJzlQZrN8DWcSXxvv8XmnMxWKR
      f6IX+PrSj9GJFB6qmNyn+mCFlI0SW5VVvrreoKFn3F9NGZbnMRXBomHm2v+JRWZa7BfPE6QZ
      c6UGxc42RCEyiegnKi+4KjVb5TygJxFEIbGi8/jyj9OJFX6sKjk77h9nCd10lnny/mWaesqD
      cswdw2eJ0jpCew+fu/Rx2pHCexs6H9v+CsagTbr6YcJSjfGZO9B1nXF58XQTgF1pkKUp209/
      CYBiYwHELA10xowZP1i8kTRUpVik9Ou/QXpwgH7nncQ7Hlk2JLY0tq8neJUm27ZDT7EZ6zHE
      E8ZmiRX6JDKjqKZcNyqMDQVMFbckCTIFaehkmk6mGkR6AUPTmZhFwigmNG0KmWSsOZho+IlA
      EZIoE6QZCBRi1SBDpe/UCcOEvqUidQNpWqiqysCpI4wY17Eo0MZQwMl8PEVhUJojCmM8S6UV
      9iHxENEAV1+nLywc3aRv1U43ARQbi9z3iV/9vm7MjBkzZrwd3G4aaua67eHaJAAAIABJREFU
      jH/vnxNfv0bp136dux56L1JKGgWdQetu0lKLuqOxWjGZ/8ZfI7oHaEsfZjhNg1c1DUfmSqG6
      KpCGzUEaUMRg0SrylfmH6E0S7m/UGUx8xplKQ7XYWriTL48bNByNuxsOenaIYVrodotvte5h
      EMTc2apxfjhhEiQs1EuMwg0Sf0KpscDdYZ8L428ilTrh6j1cyWwKlsF6weHuxhg/hDNNB44i
      NU6RG5HFn24bLNcsHp7LQ1GnIgl9dp79MqE3uo1bMWPGjL+JpO027qc/TfDEE8j0hyMl/PWu
      WXreKxzBipbGQ6sl1usWZuzz/uGzXAr2iCceX9vs8gdXJ3R393mpF/PV/YTBJGIUpMRxxiTM
      2B9HXO8n7AxjxmHKdqixE6rsTCTDSDBKNcZRxmGkcpiZ7KYWPS/kSi9lfxwxiRKujjJe7Ebs
      uCnDIKU9gfEk4KXI5mthlUEk0UKPrFpD1xT2+x6fu9Lnqd0JfpQwCFL2PfBcj73CPFeW78OP
      EkZBzB0NDUeDyWh8+iwgRdWIA4/n/vz3EYrC+rs/THX53GwjeMaMH0H8P/9zvN//P1Hm59Ev
      XECdn3+nL+l78nrXrDSb3+EIdsQd7eeRO1+FcY32hVX+p+sKu12VwbZAVlP6k4xKK6NczIjT
      jChJ2R9JbvUjRoHk/ihj4IaM/ZixHxMJlUkGQaYQRhF+kKADL/V1nu5IqhPJ6krCjf0BfS9i
      sWzjpgrjQKHkqVxzCwz9hKJvcm+lyTCWaJrGU9dHPPH8HnPVIQ/ftc71IYwCqFUKiLV3M4kz
      xFyRu5SQFamiair1+PD0KwCYemomMbrpsPXNxxkdbL1pN2fGjBk/PBzp5ejnziEKhTftvDJN
      CZ54guBf/yFpu/2mnRcgXD/H849+gr37H0VaFsETT+B++tNknU4uyzyVN5PuCJ56AnHzCsNi
      i38rzvJN6wxOtcrG2TNsnN/g/Poi1aJF0bGoFy2KpkoUx2gCmgWDOE7QFChZGlkcMRyOqVgq
      rutza3+AJsAxBP3BmCSOqNk6w6FLFseUbQMly5h4AY2CQeiHHHYGlEyV0A9ot/tYmoKbqfzl
      5SHPHUY062V0XaNUsKgWTWxTRVUFtYJJe+hz+VYPEPiZyheujrnciRkbpdvzBA7cAff85D+c
      6gKN39BNkFLSuf4sQlFprN85W0HMmPFDiPm+96FfuHBssP5mcTIlU1XVN1VN9NrKnTz/2CIl
      S2N14JJMx0kPD4ie/vZxGqhzxxnEU09Aqcp/bL6XP1XO0optfjNWWFxbxWpGCLuIEULJUUik
      YOBFRHHK2I/YH2REScLYD+m7AfudIYNxwLXdHtcOXXpuyM39Emma0R+OUbIYR0kZjjx0Unqj
      Cb2Bhz8JuLnXZ+tgRHcccGXL4tZOh/bIZ/ugz1Ym+csrQ1oHEXedAV3XSTIY+zGZFGiqyuEo
      4FtXD/P+C2WSJOXzV8e0DhNurIrTTwCqbjLc2wQgiQJ0u/iGHt7tq0/jdveIQx9VN6itnL/t
      c8yYMeOdRajqWxL2yWyHL1XWeGlk83PNxde1ajwtbpDw/L5Lo2Dg6CogMFQFs1xETFM/9bvv
      RnrucRpoz67yxWiJVaWEU7A52NunrLUo2zqagDiKqRcMtjs9tg+H6OeraCp0OgOsZolaq4bn
      +dRtlbJjYGoKWZYxV7HZPBwT+EG+MsgkURSjCYv5ik0YhmjCouKYmJpCmqbMVx022yOiKGau
      YmOZKgioFvKNXU1TKdgGS40ShqlTKliUbJ0wCOn2PR5aKVCwdIaTiGrBJM0yVFXBsXQW64XT
      TwBSZkSTMd/6k99D1Qwe/Lu/lYsZ3Sbt689y50d+njiYcPPrn6O2cv5Yatq92OLyJHjNfo1G
      g2azyeXLl1/33G9GmyzLaLVab8tYr9UmyzIURfmubd7K6ymVSiwtLb0j3/2Ik3+Dt/O7H7W5
      fv36d9yDI1ZXVwG4devW657n+20jp1LrZ86cecvHeq02R+O/+gXv7fju7eGE/yWd49AuoLRT
      fvK73K/TjLWflnm2HWFr0Jgmw0zCmJf2DzA+/lNIz8N54AHiu+/lyjPPU6/WeXLT5T+my1RH
      Os63rtA9bGOkIXvtAYOhRxQnPHdthxdutOl7Ed94RqBpOp3ukMSfIEIXb+xzkCU8++JVhuMJ
      SZJy5eY+7e4I34+5fH0bKSWhH9Htj3n+apQ/tHtDDvtjxpOQJEm5vLlHb+CRxAmXN/cYewFZ
      mtH3QlRFQdM1gjjl5kEXXdeI0pRnr1zn5s6IgR/z0i2dMEnRDYOtvUPiJEXXNYI44cZe9/QT
      gG4VuPj+nyX2PexKHfEG7SCFUJBS5r6Wivq9O8yYMeNHhoKpc2GliaaqnF/9/t3E6gWd0jij
      rEvqesIw1SjroAl5nC7qRSn/9C9e5MXNNp/MLDTVolgqYJsCwzeo1RtUqgUURaBoCrqugcxQ
      VRVNz1+CBRLd1NE0hSSKCMOIUJMkSYLrThi7EcFEJ45iojAiSWJkJgmjiCiUJIlClknSNAWZ
      94uiiDiOpuNAliZ4rsd4HJHGCYZjYxg6mqoQhSETL8ASKWmS4E18PC8mTVOKBRvFFGiaQGYZ
      hYKDbeR1B6d+inu9A/YvPwVSopkW5fk1DOf2F2it8/dw48t/Rhz6LN75MAALlx4CoFiPuWPV
      +K7977jjju85xvfTJgxDTNN8W8Z6rTYnx3+rx3otwjB828Z6vTav9Td4O6/n7Nmzr3sP3o7r
      SZIEAE3T3vKxXqvNq8c/InNdpOdx8fz5XLnyLbqe3zl/nu5wzOp8A/UUviPfbaxMStbmcxcw
      XRXcd8IR7Oj7tKXCrfaYMFPJjDKtRpX4+lW0QoFGswniAEVV0Q0TTdNIJwHVWhXj0EcJM5qt
      Vj4p3HAxTJNS2UHKAZqmsbKyivK1g/zBWyyh9iKklNTrDWQmkfIQVdMolStAH03XUTWNLMuQ
      EkrlCkbkIQKfcqWKqo5QRESSpDBdoBmmQbFok6Y9hLBYXl5BeaZPkqYoiopp6rhRwPz8IlGU
      IPZuYZom1dpthIA0wyL2PcJxH0XTUY03JgPR3Lj7+O2/srj+hs4xY8aMt5fMdRn9j797XCxl
      Pfrjb9lYpYKFoYlTPfy/F4oQx0buwPHxye9j/vI/4tH33ENvEnP3xTm2tnZ4+qmnuXhmjvMP
      naff7dIsqJQtDX/s0jkcUn7XAuWixThMaZadPJ4fxijSYqlRxDA0So5JvWRRKVoM/ZiVVoVr
      uwOyNKNaMBEi/45F22C5ke+pOqZOvWRRKlj0vYiVZom9QYCUkuVGkaWlJtLyWJqvoSgCKSWm
      ptIqmfgTH1E2qTgGIkvx/YCarbF52GO3PUa5u4WtCzzPp2arFJTbWAHolsP8xftRVI3q0kYu
      dPQGEEIwd/7eN9R3xowZ7wyvLpbiDUwA+90Rn3n8aS6stPjgQxde8wGfScmNjs/hyOeeZZWi
      9b0fUSfVPK2f+Bg3RYGuF3HXQvF1+5/8PpNr1/HWFhlPAtwoZfugj5TQH3pc3e5QqVaJM8FB
      3wVFo9GostPzCKIUIQRdNyRJEqTM8PyQm4cjwjBi5AV0RgFeECOlZOtwxCRKUVSV9nCCoigI
      IZiECTcPRyiKwI8S2kMf149Is4yb7RFBkqLpKts9jxQFyzIZ+jFpkhJFMSMvYG+gsb62hK0J
      OsMJXpigCoXNwxGuH4EQtAcTVE1FKPmYW53bKASTMsPr7hGM+oTuELvaesOTwIwZM364+G7F
      UqflM48/zT//f55gqVXhro0FllqV72jjhilPXuszDhM0VeXh9er3PO/J1NFxmPDk3R9lHCYI
      eN3+J7+P9773s//lXXpuSH9YQTdMLMvGsm2qtRr1ZkijYmM7NktLLYZ+Qr1eYLPtvea54ygm
      DCP8IA/lZFLm+55INFVF0zRUVZ1utgtAoCgKqqqiTENraZKSpRkyk2i6jqZnaJqGpqtomoqq
      KoRBSBwlRGHM0mKT2K5QMlUs20TXVDRdQ9dUdENHjzI0TUVRFDRVQ1NV6vXq6QvBFE2ndf4+
      zGKVzW98jjR67WydGTNmvLUcFUu5n/70m14s9XoIVcV69Mcp/v1feoXG/u1wYaXFUqvCpbV5
      Ss5rh5BNTaFV1CmZKvXCd98PPL62qZqnMj+Pc/5s3t/Svmt/qSjsXHyQ5x/9KWSjia4IojCm
      6hisLzXYOLvK2fUlNhaqhFGEpQoaJQuyFNedMF+2KFg6iiJoliwaRZM4ijE1hbX5CqqqUnZM
      WhUbx8xTPtdaZQqWBlLSrNi0KjYCKFgaa3NlpJQUTI1WxaZcsNA0lbW5MprI8Cc+izUbQxFE
      UUzNMWhWHDRNpVQwqRiC5569TPvgkFrBpNUoU62W2Fis4ZgaQkC9ZNEo5xvHpYLFXNk8/Qog
      CQM6N55j/o4HuPiBT6G9wT2AGTNmfH+8Ec37HwQ++NAF7tpYoOSYlAqv7SduagofutTEnQTU
      SjYjL2A8CVmol153T+DVCqAfkoIwySiaKmmasd8bU3JMyifGdMOUL7xwQGc04Z7VGlF/QGE4
      oDdwqdQqLK8u0ihZ7Pc9sjRl5Pp0hhM6fRdvErB1OCRKJYqiMPQjPNcnjGKGrs9ez0NRFMIk
      o++GTKYhoJ2uyySMyWRGf5y/QEskfpSw03XJsoxJENN3Q+Is34TfH0zoD1wCP2Brf8DYC4ij
      hO7IR0qJoqrEGXztmWtcvrJJv93mk49sYBcKVISGG0uCKEVmkuEkwrIMVE0hQ3B9u3O6CaC/
      fZU0jgi9EdvPfIntZ77EPX/nH6C8wVTQGTNmvHHeiOb9DwKqqrxm2OfVmNpUVnkS8t/9i3/P
      izcP+O1f/BAfeeT1s31OKoCaR+cA/vIbV/jdP/g8l9bm+e9//ePHE08URTz++Fe4vtNm/ice
      4Bee/yz69k3Me8s8p17g2rUtJo0S952bZ3V9mVpBR9c1CgWbCBXTyN/+hZKHbwSSNEnI0jQ/
      TlOyLEOIfCNaCFAVQRwnhFGElBlC5KmfMpMoArJMkkmJIvJ0zTTNUIRA13UMw0DXVFRFQVUV
      FEUQxylRGBJHGvX5GufvPE/N0dE0FYlkWs6BPwnwxhPSOCUSMf3eED2LKRbV000ATm2ONA5Z
      e/ADx5+J1ymUmTFjxlvLG9G8/2FkPAl58eYBu+0hV7fb33UCOMnJVcNL221220MABq7PaBJS
      ckzCMKbT7eOOPSYHB1QnA8ZpSmvcZVI+QxjG+H6IUPK4uaHrKGpew5QkSW64LmUep5eSNMs9
      ffNjeXycZXnsHyDNMrIsA0n+cJ9m8cjpz3K6V3A0ERyd66gg70iuKN9POOqTTxy6aWJZFk7B
      RFFU0iwjiRPSNCNJEpI0JUlTZCyJ44QoSgjD7PQrgO1v/9UrPnvwU7+F0GaTwIwZ7wS3q3n/
      w8hCvcRv/+KHuLrd5mfef7rMwZEXvGLV8LPvvxcBnF9p8fyNff7nP/wil9bm+ce/+EEKVr5H
      UFxZ5l8NPsS1woDfWL+XmmmRphmGplAxFTqHXQqigqMJDnf2uL7b57GzFULXo9sZYinrGJUC
      umFQKtgsN0sIAY6pUytZec1BmrJYK3DF0hFCUC/ZCAFpmmJogsVGESkllq5SLZnYhgpIFmsO
      Nw9HZJnMpSQORgR+SNFQKRo2mq5SdAxWW2We23eplmxKloY3GHPYHlG80EBkCf5kQslUEYrC
      eOTRcDTWFpdONwEs3PEgC3c8SPfmi0QTF6tce8OVwDNmzJhxGlRV4SOP3HH85n9S12ejaaO8
      hhbZq1cND99zlkt3XWSubPLtJ77Kx/ovMBE99toP4McZpmVxba9Pa67MatNkEEsimXDXxVUM
      Add3+kw8n25f5aDvMZpEKKrKtZ0+g7FPHMXs91wUIchkhhdEbO4PSNOM8SSkPZgwmoQkacaN
      /QF+mKIoeapmJvO3edeP2DwYIITAC5NpGmeMEIKb7RFjPyJNU7YOx0yiFFVT6Y4DsiwjCiNG
      ns+t7hh3PGGoQncc4AYRCNg8GIJm0GjV6bkhGRLTNAjijJ2udxuVwP1Dbn798whFQbcKFOrz
      GPbf7DeQGTNm/ODw/L7L124OKVkarZLxigKvI169avjmzT5ffPGQqqPzc/EeJX0X9Ii+mmDb
      NlaQsVi1+fk1AaGBvmJzRWvh6Q6OobK3uT2Vbwjzt3rHxk8Fhmkcx/mzLANlGref/pylKWma
      5iGdNJtW9koUdZruqeSrAsg3ggUKiqJMJzWBEMpx6OdoHCkluqGhTSeB0AsJw4ggUHFHE8Yj
      D4M0DwnpGpquY9kmC4strElMtV7B83zsgk2hYFKuFm8jDVRRkTIjcAeMDrZmNQAzZsx4e4lD
      vvGNZ9jZ2mbkBfzxl67ytSv7xzF3eHnV8Buf+nEWGmUMkXFraw93OKJ49ixKcw5t/SzVVoM7
      L5zh7rvPc25tiatJkSfGDoFRQJUZz76wyeFBl6VGgTgKsXWFVqVA0TFRVIX1+QrVko1hGMzX
      isxVCwghKFoG6/PV/Ng2mKs6lBwDRRFsLFRxDI0szWhWbOaquY9CwTJYmy+TyQzH0mhVHAqm
      hpSwNlemaBsIITgzV8JQIAxCaoV8XMsyqZUc1ubLaLpKyTFplC0sXSVNUpbrDpHncbB3SNFQ
      aJbzlVPB0lmqOqdfAVjlOot3Psz4cJv5Ox5E1WdpoDNmzHhrOdLrUZpNvvnsVS5fvkFv/4Ci
      ofJXz++yUCuyPl+hVbGP+5zcBL5284BbW3tE4xHeBz6C8p/9NxTqVYRT5OyFdepehCyW+YuX
      AtqjBKsPh/vbPP3CJof7RS4tV8hkxsjz6Y0mRKlEVVUORj6JVNAMnXGQ5No8CII4ZbfngsiP
      ++OQIM7VbXd7Lq4fkqTpcRonQBAm7HTGyEwy8WN6Y59JmCClZK/rEUQJEtjtugzHPkmS0h54
      6JqGYZpkikZ7HKJOU0KHXsjIDYjCiJt7A25s7rLfc9m8dUilVsYydRIJt/b7p5sApJQ892ef
      xh91kVmG7hSpLm28Ffd7xowZM4Dv1B/a2DjDJ36qiqVKYnfA9StXSRbrZNkjx31evQm8sVBl
      vlbg/HKdZ7e6/OsvvsDZxSr/8GP3sbXT5qA/Yakg2Ns9YLczxrtQR1VVdF1H0zQq1TIrZ1Zp
      lAw0LS+ogjy1M47z0JDMMiDPDkrTFEWAzPIq3qP2UuYyOEeZPsBxSqeqKqiKQIhpWqkQZFmW
      K4OSewZEYZQXczWrKE5EwbEIgogwiIhtDTJJHMUkiY7MJKPhiF53RBzNoaoqqqahqgqtWol7
      L61iawoPRtunmwC87j5R4PHun/svkFnKlz/9O2w8/NFZKuiMGTPeMl6tP1R99F2UhpKSpbE/
      6BBHEf7EJ01eNnh/9Sbwr/3Mj3FhpUHBNvi3X36JzmiCEPlbchjlqqeuFxAE+UZrMN081fX8
      galN0z913YATD/B0GtfPMvlyeicc/+44pfNIBuIoJfTo50wi1ZfTO09EsY77ACTTc0HeX1Nz
      UxtV00jTYDpRZCRpmqelTvchkiQBmRHFecpqXhsgsEw9z3CydVZldLoJYDJsE7lDrn/lz/Kf
      Bx3SJEIzXruab8aMGTO+X16tP3RXqYgA6gUD59yDlC2N8yst5uul4z6v3gRWFYX5ep6sMl8v
      USgWaNRKtCoOd2ws0vMiLq1VuLLdY5IK5uolDENncXmOxapDs2gy6I+omQoVR0dXIIkT5qs2
      pqqQJemxsqeiKhSs3J1LSrANlXrJwtI1ZCZZrBe5vNUmTVOqxbxPEicYimCpXjhOA62VLAq2
      gTIOWGmV2TwcMZjELNWL3HrpgPbhCJ0lKo5BkiToCsxXHbI0w9QU6iWbRq2MG0vOrjTox4JU
      N1lqVeh3B3zxiW+zsVhj473nTjcBVJfOsvbuDx//fPfHfglVO51Ox4wZM2a8EY70h46UR4u8
      UtztNz71nYqkr04dPSkFMfBCsiwjiJI8bp9mxHHCwI/JEBQck9EkwpICgSDJJLtdF01V8MOY
      3jhg4ucmKzudXNZBAr2Rn0dDJFNZh9wvfRIm9EYBkzAGYKczYhLEIKd9hEDK3KFspzs+Pu6P
      A4IwRSDY67mEcYqiKOz1PMZeQBQndIc+aZoiyMfc7bqkaTqVkggI4nx1s9+fkGT5vsXIj3HH
      HsORx4GucGMYn24CMOwii3e++43exxkzZsx4R/jCN146loJ4z73nOdw7oKjUMZSMb37zOa7t
      dLn0yffyvvs2GAYJl9Zr7B0O6Hb6FJUKF+84y6abMl+2aVYcFJERhhHzVZuCbaCOfBoV5zjd
      09TUvBBMETiWTr1sHYuxrTTLXN8b0HVDGlUHwXTVMPX0BYltaNRKFralIUaw3CixOwxwY8nK
      XJkXb7WJwoiyrWPoDoWiQ6NapFUyGA1HNB2VimOgyIzAD5grW3SDjGGQUC/bpL5L5/CAupVR
      UG/DDyB0h1z78n/gro/8wlt4u2bMmDHjtTnpJ/CBS/MoV56Gegt55gJfeOoaL223+eRj9/D8
      jX1e2m7zs++/l+5hh48vKHjJmJsHA9bWljF1wX7P5aA9YDIJuLbbpdgUHPQnjBdL7PfG+H5A
      b6iy03UZDl0sJS+wmoQJqqqyeTBkEuXx9fZwciwJ4fohm/vDY53/w8GESZi32zwY4E1XAO2B
      f/y9vCBmc39AlmW4fkhn4OP5uWXkzfYYb6r9v9UeH4/fHk6wbQtV0wgTyY39AVkmGXkBh32X
      3mBMMJlwfa/P0M8I/JDOaMLhwKPRbJIKjZd2bsMTWNUNDl78BqqqodtF1h/+6LF29YwZM2a8
      1Zz0E7j0sRUWb34bSlX2cfjdP/g8u+0he+0hX3thi932EAH88l1lUKpIy+HJ8gpxKaRsa9hW
      HoMXQhBEMdvX9+mOA+5aKJLEybF3b78/pNPuQxSSJOvouoGup+iahiKUY1MXefSPlAhFTLX9
      898pylG7XD8ob5ed0Ph51Ubx9PcSicxy05c4zjOMdF1H1/NJIB9HOTFOnkWUSUkY+IRhSOgH
      +F6GPwkIg5hao8784jz1kgWS0xeCCVXj0of/HnaliVmoHF/8jBkzZrwdvMJPYHUVSlVozlMq
      l/iYMuSX/E0eXijyrjvP8dCD97C+PIdaruJVW8SVBq16CdvUKdsmjbJNtVLEME3OLtbRFQjD
      iGrBYK5WRNM0ykWLlWYJfzJBF3nxlq0rJEnCmVZpqvOf0ao4zNcKx8Vf6/MVsjTDMfKiLsfU
      yNKU9fkyRSsvoJ2rFmhVHbIso2DqrC9UURSFkmPmhWBTnaIzcxVsXSFN0leNaVMrmAR+gC7g
      7GINp+BQr5RYqJe4dGGdu+66wN3nFjFUQRRFNEom9YLBcDhEZDFn5sqnXwFkacL200+i6gZO
      dY4sTVCV2UbwjBkz3lxGXkDvNUzhT/oJFG0D1tbBsCgMhvxM/wrDsEujs0n33g8x9GPq83Vc
      NWBLq1CyLLxE5hINUuKGCZnQsB2H/YHPcDwhCiM6AxcpQdM14gw2d7oEfkCvN6Yz8Bh5AUmS
      sHU4xPVD0jSlO5wcK376UcJ2e0SWZXh+RG/s5+2yjO32CD/MN2d7Y3+aDprbSO71XIRQ8uIx
      N8CPEkCw23UZTyKSNGX7cITnR2SZpDcKkEhc16NrCNpuCduxEbpOmMHZCxvUJxGq4zCeBMhM
      0u57hGGIO3Y5OICt2m1UAvvDDsXGInE4wevtkyYRqj6bAGbMmPHmcVTI9cLmPv/13//wKySg
      v8NPoJRnBLmKx/9QvJMrvss/Mpp0hx6dcYC/XOTZwYT/46/2WGsVObsCT/71s6zOVXls4xGK
      JYdAKtiWiaZp6LqOquRWjaqqoqoqpqljFwpYjoWq5Dr8QgjUqfZPNi3WEuTFX0iJqggQHBd1
      HZ1bm/rxHoWF5LR2INf+ETCdRISALE1JkhgFiX6iv5zm+oMkDAK6h20sYsgWX7aRlJLh2KM7
      DkjqJiuri5SaCZVqCc9TmV+Yp1m2eKwSnT4EVGwuIRSV8eE2pdYKulX4/u70jBkzZryKo0Ku
      vc6Iq9uvtLtM04yd9pCR90o7WheNa2qRA9XmOja+H+Yx7yhhfxgxDDL2RjEH3RFJkjH2fOI4
      QRH54y8vaJ2GtEX+GD4OcU+9elVV5ahWSwhxrOR5Ur8fXvYAODo+qgAGOHrcH7eTHI97skjs
      5PmO/ACOxnx5fEkcx/mkkGUkSZrvCwhBmmb4YYTvhyRZhmUZaLqGYepomo6iqmiazrp5yjRQ
      gCxJyNKE2upFkjhEZulMEnrGjBlvKkeFXJdv7n+HB8DJlM6T7l4FyziOmS/UinxzM9fsl3e3
      mG+UKFeKNBsF7r6wxKYrWaja1CsOaRgyGo6pOxqaIomiPL3y6IFtmxpn5qvYtkW1UqRRdija
      Jr1xyEqzzAs39knTlFrRPN7kdSyDpUYRmWXY06IuS8/f3JfqRa7c6iKlpHa0CasKHNtgsVYg
      iWMMBeolm5Jj0XMjVlpldgYBfT9ida7MVsdlHGXM1Yroc1Xuvi9koWpzx8YCV4cJi1Wbsm1w
      uL3HtZ0+H7jQQMiMKIooGCqZqeK5E2RRx3rXg7cXAgpGPc6+728DIMRMBmLGjB8VZJoS/vVf
      51W5H/sYbcU8Tsn84EMXXtev93Y5KuR67L51TPOVgpMvbO6z2x6SZZLLW4d87YUtLqy0uHhm
      Dqdc4dzFErc6I3b2O/S6A7b3+9Sa9dxrN0y41RlzeNhByyp0Rz7dwRjfm3B1p0d/5BEEAfs9
      F03TkFLi+TG32mM0TSWMUzrDCa4fkWQZmwcDXD8CBIcDD0VRQeQpnTf2hyAEbhBzOPCm7WBz
      f4A3PT7se9OJRjAJYm7s95ESxn5E+yh1VAi22mOiVGIYOrc6Lt3+iNFgxEHfw7ZNOoddDFlh
      q+2wu72LCKt0Roug6SwsNtnpjDgfdHlX3CMbN2gPYnRdw49SDlNQhnx0AAAgAElEQVTj9BOA
      WajQ37nK5tc/D8C9H//lmRbQjBk/IrzaiP4z9vpxSuZdGwun8vp9M/nM40/z7/7qWZZaFX7n
      v/wUd9x9kcEkZrFp8uRTV/BcF9+fUE7KxNO0zsODDru39kjdMUFwnjAIiMKQKAgJg4gojEni
      BE17+bGonAgBAbnmTpqSptlx6iViGvMX+fFRjF8oymtmSwqOA07TPvmnR6GeowZCgKIIDENH
      j3N/4X6nx6Dv4o7GuOMxO7f2SLwxFTXh1uY20WiI+Oi7OHfuDEM/5tKCzgevfQWRDpHpCrvG
      IpZtYdkWLx54p98DiCZjmht3c+Gxn+bCYz89C//MmPEjxJERvTI/j7a+/sqUTOetkYbPpORa
      e8JXNwe4QcKdG4t89NF7+LH7z3NpY4m5hQWWFuZolh1sIw/dnGlVqBQdVFVjsVmh6ugMej1I
      QtbnqyiKSqlgMVctYGoQ+D7rCxXKhTyMM1cr0Ko4qIpC0TZYbZZI4gRTV2hWnOM0zo2FKkUn
      ryWYrxWYqxamKZ0aGwv55nTR1mlVnKmeP6wvVPPsJQGtat5HSknBMji7WEPVFEoFi1bFwdZV
      kiRhpVFEZAnj4ZjleoF6rYxTKLDYLLO22ODc+TXOrS9zYbWFUyjQqJVpVhwqBYuCbdJoVLhc
      WueLzh145TkWGkXqtTLzjTKrjcLpVwCGU2Swc43nP/t/AfDQ3/0txMwUZsaMHwlebUT/QcRx
      SuZRLP7N4igNtFqt8FdXuwz9XEtnbaXFQ35MveTQGwRcqjkUKyXcMIWJR9kdcti3CZPcMas3
      mjD0Qob9Ibsi5VbVwTRN4hQ6A4/+YEQcR1zfaRPGKaqqMHADrFQgFIUwkWy3R0RxwsgN6I19
      /CgPzex0xwRRihAKvXHwipTO7c4IyLWA+tM+UuZ6/pMwRkroj4N8U1lKJkHEXt9FVTXiRNIb
      +4wnAWmasXUw5OCwx2jocWOnB5qB7di4UcZCvcTyygLNss0oCqnUqqimjRskKIqCpgg6scq3
      1A06WoDIamjAmp5gGwqrNfP0E4BuF7nzI7/AcG+T2sr52QpgxowfMU4a0avwloR9TqaB/tqn
      /hZdXztO6dy9dcjv/eEXOLfS4jfPmNz3jf+beGWN2k9c4m8/+Udotzbp//TfO668VRQF0zQp
      lEo4xQLlcpH55XkaRRPD0KjUaoTCxHEchBK+nJ4pM6IoJkmS6XFEEusoQmCaBqaZYOiv9AZA
      yaWjNU1HnYbGlWlY56iqGJlBJo99AgS5TwAy9wY49gNQxHHoSFEgTVLiKAaZkcQRYRQhs4xO
      u8vXv/Y0ZxZqvP/dlzh77gwVS0MIwdXNPfZ7Lgv2GW5cvcV2e8D71so8PLrF0v/7r0jPrGMt
      /8zpQ0DBqMvNr3+OyuI6V5/8/0jCyZt972fMmPEjzsk00Ctbh7nTloQoTtlvDwmilHZvTKm7
      j2XotCKXijfA6R/iT3yq/YNpHF7J0zkVFcPIzV00I8+l1w09/9w0MUwDRdVAHunyv6znn2XZ
      sR5/Jo9SM1/W8Ic8Tn+k3Z9/kJ9DTNulWX4eiSRJsmOt/yyT35H6eXRieTLdc/q5qqrHHgTI
      3INgPPYIgpDx2ENMaxQMUyeTkrE7wfMmDEd5G5lJJhOfWm+PauLRGh6g7G7dRhpolqFoOpph
      oajqK7/0KUiTGEXNZ6csTfMZUJlpCc2YMeNlTqaB/uRj9/HEpovlRSzUClh3nuXhAcxXLPw7
      5/jS+iO0HI33LK/zu60HuRy0+fW1d1Ee79EZBczVSpTKJWqNGguNIgtVhziK0YRFvWSzMNcg
      UU3OrTa5utsDKamXbIQQRGGIJmyWG8XcDN7UqRUtFJnmKpsVG9vUQQjqZRvIXbwsXWWlWUad
      qnw2yjblok3Pi1idq3Blu0s29QMASJMEQxMs1AvHx7WiRcEyUITP6lyFvVFEqrucO9Pi6l4f
      ISY0yjZpYqCpGkXHpmyqHB72MLMSjq7g9Xvs7XSoPbLO2bPLWP0JZ5Zb2K2LGAf3Qq3F48by
      6ScAu9Jg7sJ9tG88x/I970O3nFPf1Btf+XMmwy6qZrDxno9y5fE/AeDSh38O3Tz9eWbMmPHO
      ESYZYZJRNNU87HGbpJmkNw5wTI2C9dr7hyfTQEOpEiZDoijGj1L8ZFpgJVT2M5O+XQbHpDuJ
      uRapHKoOzx66RKnENI1cbkG3pl65kr2+R5ZJJkHCwAuJ0rzI6qDvvyzRMJqAEKRpiueHuVev
      FEzC3Ks3l2LI2DmSdZBHsgz5SmASxOxOtf39MDmWdTjaN5gE0bGHwFQGjkkQs9MeITnyA/CP
      vQZ2+x5xKlFUhYOBjxKHzGkxg5FPlKQgBH4Ys9sZUpUBWaDlex9jjyROuHU4IBYWQlFwwwTS
      kEmlgWFZXN27DU9gt71LMB6w8chHufL4Z2iu34lZrH7vzsDCpXdjFMp8609+j62nHufc+/4O
      4WTM7rNfYe2hD57qHDNmzHjnCJOMz7/Yoe3GPHquxrnW7b+4PXX1gN9//DLrcyV+7WP3vO4k
      cITIUp575grX93o8MP8IwWTC1/7661w8M8cDK2Weu7zFmVaJn7jjEtVKia4bcf7MAmq1xd7A
      59zaIlKCoio4psFC1Zm6bilUCgYiS/AnPq2KdfyW3qwWieOYMAhRKbDUKILMdfrrJQvbzKMW
      S40iL+10AaiXrHwCyDIsXWG+5hBFEZrivPw2rwSsNMtcudWlMwpoVPK/n6qqFB2TlVYZRRE4
      lkGtZKEJiMKI+YrNdscjiWPO1k1+cnmAYh9SWJA84Ram/S0+sazwqf4uWaVJY7HMf/6fPMr1
      nR7vf/Ac/+zff5vO4RBDrLI5fydPnqnTLGisqurpVwDPf/YPGB3cYrR/E4RAt4vftX2axLSv
      PUNlcR3NtHnuzz7N6gPv5/Clb2FXWxhOiYPL3wTg23/6LwBY/rF7CecePO0lvSWkaUoYhrPx
      30He6Wt4p8c/8pfNTcF/MMZ3w5S2GzEOU9ojn5Xya4dvMyn55vUOO12PH79rgXrx5QyhzYMh
      nemb79CdoInvzB7KpOSZrT47PY+zrSJRJqjWa+x1R0y8CatnVhAavHBjn/ZhByUJ2WkPQTOo
      N5vc6oxJzSKGqdOfRIRhTBKnjCe5Tn8UxQxdn73OiO7QxfcDrm53cIMYIQT7vTFRGKEbOpMo
      4fpuH93QCeKM3fYId5qRdH23jxckCEWw1xsjp7H6sR9xbbuHlJKxF7LbGeL6EVJKru/1mYQx
      iqqw33MBiaKqTMKEa3t9QOD5EbvtEWGSYVkmm3sDhl5AEqccHHQphRrbWYvHhiM6HiwszaGZ
      Kge7B3zjZsTZuRHv9VykzM899gJGbkCSpBz2xqiGxfMdn7nEoW6d0hBGCMG7f/6/or99FbtS
      Z9Jv5xsn3wNV0xFC4crjn2HtoQ9SWVxnfLCF29kjmowo1OcBuO+Tvw7AfD3GNN9ZgbkwDL+j
      AnE2/o/WNbzT4ydJHo44WZD0To+vG5JHz9XpeRF3LhQxzde+tvbQ5988eY3OyEfVVD71vvPH
      v/vQ/Wuomspqs8h8vZyLpr2K7jjgT7+xRXcc8mOXFjizscRwkjC/0EIiuZg4VGwd6fYZDUdY
      SoZh6DTnWihuQLVe5cDLr19VVZARSZLk/6Z5Nk0UaSiKQhiEhGF4bK141MeyLUzLnP7XwjAM
      DNPAmNYa5P6/ud6/oqjomn48WQpyeYdpTdirisrEtI+CPv1cVVVUTT3W8RGKwDANnIJDkClY
      tkWWDkmzlF5m8IfxKp04QJFzzM0XWeimVB2dz/Y6fOZGxuIoo9GL+F//w7c56HsIofArH7uX
      rcMhH75/nS8+u8P2bgfftTj/7ounzwIK3QH97au88Jf/hhtf/QtCb/xd26uaTuvcPVilKl7v
      gJ1nv8yVxz/Dyn2Pcf3Lf8b2M1+a2UzOmPFDgiIE51oOD69XKVqvPzE5psb6XIlW2Wa1+coo
      QaNk8an3nefhCwuvePinacZffvUy/+yPn6A/8vCGQ27dvEXNUpFxwnAwpmxpFFS4ce0mbr/P
      2cU65UqZVqOSa+s3ylSrZdbnK6RhSLfTp2SqVAsG49EYJUtZmyujqiplx2Ku6lAtOehGXoRl
      6QpxFNEs28xVC4CgaBmszZWI4ghLmxaC2fkL6sZChYKpI7OMVtVm7sgPwDHYWKyhCIWiYzJX
      PfIDyFifz/tk0z6tqk2apjiGxsZ8nlJbtIzcQ8BQSdOUM3MlGrUixXKBtYUqIksZj1zKBRNH
      lVy7co1Rt8uFtXnOX9zg7MYqzVqRYiF3C2tWHTRVRdcNhKKw1srvzcZcmY3WbRSCaaZF7+aL
      lOaWEVMnnNPyyH/6j1/x8z0f/wcgRK6fMWPGjB86Tpqtl08UghUsnV947CIHfZe71lqnOtd+
      b/wKR6/LL+aOXt96bo52qHLYd9ltD+h1ely9ch2/32W+fB+WY6MaFl6UoZsmlpky8BN29zoM
      BhO297rEcYI7cjnUYLdbxTB04gz6bkgiFUzTYL8/YTSekMQJ7b6LZuioqkoQp2wdDojDiOF4
      Qm/sMwliMinZ6Yzxgjy00x36SOTUXSxlr+siVIUwzuiNguON41vt0Xf0ybIMdxKy03URQuBH
      efHYkdfAft9DM00KBUnXizhs9/HGHjsHffyJx9bmLaJRn/suLLO+cYZGKf97RGnuaXBtf8Rn
      n97hcDABJJ945CyWrhwb0py+EMwqsHr/Y5ilGrHvopn2bf9Pc8RpwkczZsz4weX1lDlHXsDv
      /O+f5cWbB/z2L37oFXr+r8exHA659s7x2kBmbG/tsLXXY3z/MlKmuXZPFDEeDbl+5SrJYp04
      uocrL17j1kGfs5V7KBQLFLO8CCzLsuOisIJjUW9WqRaMvB5A16YWiyqGZWJYuQ6QZRiUy0WK
      xdwDYJp7hCCXjpi4HlmWnijWyusO8kIw7fjcmq5ObRqV3L7xhK6QqiogBOa0FkFTVTRNPfYM
      SNN0WogmCYMYfxJBJnEKNoUYTFPHNKucvXCORtEkjGJ2dtuktQKOuczZxSoCWJsr860ru/S7
      I+Iw4kvP3uSf/vGXubDS4L/9pQ+cfgJIk5jRwS04uMXh1W8zf+H+mRjcjBk/ory03Wa3PQTy
      4q2jCeCokGu3PeTqdvsVE8DrrRqkfLmwKi+ayonjJK+gBXw/AGQeNZDgeRPiKMKf+PhBiOdO
      iKMYz/NB5GYtQhGv0ONXNAVVVdB0DYE4ruSVnNiLELk/QD5xnOwvSLOMLMsNYJI432cQSu7z
      e5wWK8TLRWKIqbcA0wrjl4c5Kik7EnyTJy5AnigQS9Ms/ztEEUmaTa8jBaGgG3kdgm4YRFHC
      ZOIzMVUsXeM3P/EQPTfE1gV/9IVnyNKMKE64vttjv5eH7z0/ug1TeE1n8a5H8pt8uE3ku1il
      2mm7z5gx428QP/v+exHA+ZUW8/XS8edHhVxXt9un1vM/2ecDD13g+Rv7AJxdaeEJG6fjcm59
      mSiKaM3Ps7JQYWO5CeReAK1qkWajipsIzszXePHmi+zvdjG4gFXOIxWOpTNfcZCyh6EJygUD
      VUAURcxVbJQsxZ/4lC0dIRL2d/dxRJ3li3dg2xa1SoFmpUClVKTvJawtNth3E4b+/8/em0fJ
      cZ73uU9VdS2979M9+wxmww4SCynuIiWKFrVLsSXZVuJrW7SdxLEdJ9dZ7kl8cuJ7knuv4nOT
      YzuWfW3HMu14iWRbli3JEiXIlLiLAkWCxDoYYLae3teq6q7l/lEzjR4QAw5AAFzczzk8nEHX
      V1/1VzX1be/7+1mkYyEcx8vSVWWRwUQI23ZQZJF4WCMaDlAzbEYzUU4uFrAti1hQQRQlXBdU
      WWIwEcCxbVSfQCykocoSjuMyENF4/vgCS0sFggcGqVeKrCyuoQp7ECyb+ZOn8Y0NoI2Fuz+7
      rsNTC03yjQ53TEb5qQ8cZn61wg/cNt1N4N0xlCAdv4o9ANvqsHL8GQAi2TGUQPg1SvTp0+ft
      SjYZ4ac/ever/n0jkevdt8111TyLzTa7s6Et9fzvOziNpmkEQ2F006Le8hy/ziwVKVZMyqUy
      +WoTnySxc24STYKlYoOxyTFUTaJQbTKYjpBNRSjUWtRbJoIgslqsIUo+Op0O1YbBuVyFWrWB
      JrgUqjrlagO9pXN2uYSFSCQSplBr4bougWAA03I5t1rBtm1Pp7/aomn0aPsbnrBbodai07G9
      fKlWm/nVSvfnQvWigNz5tRpNowOiwFqltR75Ay3D4txqFRdo6B3y1RaNVhvXcZlfqdBxIRqL
      cm6pyJ61sxyqrmCu7KckB1A1jabR4fjZFdrtNsVyjUKlSXDlNPFqATN5iLv3j3P3/nEA7Hye
      Hyy9gi8ygeiOb68DqOeXqOXOs+vdPwTAqb/7y6uWgujTp8/fLxqmzbfPlKmbFpcGfPbq+Sdj
      IX7zi8+SKze5/5bx7jGdToeVxWXWijVKhRIHD+5hxtEIqT4kSydna8SDKsl4hLv2j2N2LDRJ
      5MmXLqBqNj5FodNuY9sWltWhUW9RqzZQsLE6HQxdxzQMz9UrGcdVDUJhbzQfjUeJrecwbPgJ
      uI7TXZrx1D83/g8bYkKue1Eb6HJvSFESkUQJURC74nNdT4GeVnJcL0tYkiXS2QGkhsF0ROWd
      rTO4xhqqucJfxA4QjkSIxoJIvosBNSGrxWzuOWhUoRwDhruf6V/5Cs1HP4eYySDPzGwvDLRV
      yaNXit3fqyvz2J03NlmoT58+V8Zt1HCe/RbO2Zd7DMhvHj4Bli4s8txz38ftmOyayHYNZA7v
      HO36CWSTYaaHE2TiQfbtyBAOeC/eufFM12xm5/gAiuBw8tQC5UKJTMSPYbSRBQhpMifPLvG1
      77yIKgkMpGPE4jGGUlFGMnFSA0kGM0kmMjGc9bDLdCxIOhkjEosyPZIiGtJQVYV0LEAq4sex
      XQKKj/FM1Avv9CukY0EiQT+ST2JyKE5A85zDUlE/A1FP2z+kyUxmYwiC5weQivpRJAHTMBlN
      hz2d/3aHVNRPOhrAdVwC6x4CiuIjGvL8AIKqD9dxmBiIsns4wq3jMcYnsjw/uJM/T++jOTzO
      +FCC2ZlxpicGmR31Iq7CAZVIPIqQziKEY4ipgU33xJyY4vhdH2DllrsgsM0loOT4Ls49/TXM
      ZhW708an+vum8H36vMlxX/ke7rPfgnAMIT0I4e1Jt1wvyrUm3/r2d1nOV/nuRIwf/8AdxMJ+
      BlNRsokwt++Z6PoJPPKBQ6wW6yTCfoyOjawomG2L//DIw9RbJplEmD/8+gu8dPwMpVwETZzG
      0E3KVZHFtQpf+tYLrFVaJEJ+ZH+AQMiljYAryiRTSUIRP7n1ZRfdtKi22iiBINGYSK3tYjku
      4NA0bVotA8uyaOgmK6UmkiRiWg7lhoFpu0g+HyulJi2jg+t6+v227Sl+tkxPCwgEDNOmVNOp
      VJu0220WVkrUGjq2bZMvN5AVBdtxaOht1qq69zueJ0HL9DKOqw2dmZEotaYPwa/waGQnq1aD
      oBNnLhJhcmKIWFBhbf4MAE2jTcsR8d/9PsyWTigR36ThdGZkF8fvGSSs+ZiQte11AD5F5dAP
      /lNqq+cRJR+R7Nhlrc769OnzJiKR9l76qQwo19e0ZTv0hncKgsC3nj+9aRN4w0+g1jT4v37/
      a7yykONTD9/O6PgYgaRJLB4jHNS6m8Vt06RULBL0ORcXSwRQFZlbDh3wTFKyQU48d4rFtQqN
      PRk0v59mQycki0RH4kxOjRLVvFDNbhSQ43DuzDku5MpUZ5KIPplWS8fQJHySiKIoyLJv3fjd
      KyN1dfu9KB5PpdlbEpI2/AgksWvpqCgKsuIjFArSsr38A8fxvAZsS+l6AAjrZTVVRfPbOAj8
      7XcXuZCv855D412ZagFotAzOrxTQo36k9QUnAWjbDo/NN8g3OhyxWpwrtroaTsmgQliTSQdl
      VJ94FYlgikZibPb1PRF9+vS5aQgTc97IX9EQ1BvXAWwnvNN13U2ho9WmgWF5yx+9oaNnloqo
      fg257aKoKrWmQb1lkk2E6VgW2rpUTMeyui9PyecjEPDT7LRQ/RqG4SVR6bqJT1bodDp0Oh18
      srdkI8s+BEH0NPltm3a7g6F7Dlytlo4W8MJAbdtmQ6ZfEIRN6/+243bDOl2Xda8AT9/T6Q33
      XI/3dHEBr1OQJM8v2LYsL1TU5aIfwPqRG37CpuVQbLRpdRwKVaMbbeQ4DrrRpl5v4vdBwHLW
      S4PRccg3OtRNi+WqyVKpSaHWopAJcGgsSsfQSEX8V9cB9OnT562FIIo3ZdlnO+GdGyGhG6Gj
      iyWd//l3x5gYCPNDd00T1LwX++hAlOqKF9MvuDb//rN/3U0q2797intaMumwSsLvdMMeVfEg
      p4+f4NSFPIcH7ySVitG0BQbTUSzLppDPE5UdfJbJyZfPYA0lCN49idM2qdUaZKJ+RkeHcLU6
      o4NpLNvGtm1Un0g2HsC2bWRJJB7S8Ms+XMdlKBni7GoF23aIBVUcV/aSzTSFwUQQ27ZRfCKx
      kIroOhi6SSaqsZD3XrnxkIrrenpDsUiQbNzzA5BFgVhQRZNFXNdlOBWm4cooVZ3psTRPv3AK
      Q28RDSpYzRovfPcFZscGeOetOwAvLDYT9XOX5qmbDoV9PPr5pzl5fo29iXfzzfzapnvV7wD6
      9OnzutgqKUySRG7bM86uySzpmKcL9IF79hEOqPztsQssF6o4tr0pvPJ8rkLb8qEqMhfWqpxe
      KlKse4qdc+EYsqIgKSoXciu4QK3RIl+qU641cV2X+eUiumnh2A7lhomh6zi2Q72pM79UxDTb
      lKsNitUWjZaJbdks5ut0HAGfz0dV72AYJrh4Ov2FOu12h2bL6Or0AywV6pv2AFzXRRQFjI7N
      UsFLtNLNDqWa5yHgui6L+Tq6YeE43rVtzCA25CMcx0U3O5s8BHKVFq7otUe+7v27oigUKk3a
      nTaGblAoVVlYKaGqKqbloJsdptJRptIBlvJVVtZK1OtNFleLnsfA+r2qNVr9DqBPnz6vj62S
      wjb8fTdG8EB39Hlw11h3BD+afkd3pvDQnXv45ukqpWaHQ5MxCobDSrnFrtlxsC2WlvNI6TC3
      7hhhx/k6o6kQw9kEBw/tI1czOLArywunHie3vIYm7iMSD6MoKtFwkLFMDFEUCPoVEhEN1Sdg
      2xZDySCrjTalpkki4sdUxO5oPqrC8oULhIQBokGVoF9BrLYYToU5tVhcT+pSURSFcDhMKh5i
      LBNDln2EAyrJSICgX+2Wmc9VMQyTiN+H64KhG4gxjYGY5i1TiS7x0MXkseFUBLEFtiAxmU2w
      f/9OVis6M1MjzGZC3XZH0bhgyAzFA0RCF2V6rjQLi514sd8B9OnT5+pZLdb4wtEXmBlJc/+h
      mcsmhV0qC9Gx7G4imCJL3cSlhm4yOTlKZCCDrKqs5hdYLlQZi8nkixVyuTKF2igCApZlU2+a
      5GsGiqrgCBJVvYPs9xMVZHJ1E0lVGRodIl9tEolI7JydQJPgzHKRRr1OUZNYKzcxLRe/5mdh
      rUbL9EbcxZqOYbRRFAXTdjl9IY8kitQaOrlSHcNykBWFhVyVetNbk18rN1A1Db2lU61LLOSq
      WJZFvWWSrzSpN3SsjsXZlTKVeot2u81qseHJQisyetvmfL5OIOin4woUajrVho5heCJxbdmP
      67jkGyY+VSUSkWi2HdKOyY+2zuFrw1/qSdZWcyhuAr1tdVVLexPzNti4V40/eKbfAfTp0+fq
      +cLRF/jv/+vxblz/RkRPL5eOPv/0689f9lwN0+bZZS9hbDQs8dLxM6yVmwxqLmdPnWW1UGN1
      eYRPPHQEBBhNhZgYiJKKepLTqYgfvyLTcQTCoQA7ZnZQbrbJDmVJxSMUCBBSJRZPnaTZaFBX
      xW62r+6IqJoKXMxrkmUfqqagqgqqKqKqGprfjyRJqIqCqjrIsuwZOrru+khep9lsUpeh3Q5h
      dWw6bW+5x7I62JaF3enQaXewO5a3x6CpaOv/BYMBguEg4aCCIIDe1DF0w9vQFhQs28ZxXDRN
      pe2KKIq8Kalr5cgHWFxYxG7UMM028NqObf6HHtq+H0CfPn36bJBNRgmFwiRjURxB5OlzFc7k
      W91oGLg4+vzpj95NNhnZlAi2b2aUgWyWkaEMybCfsYDFTMBgLKbgw6ZRrzOWiTK9Y4yp2SnG
      h9I4tk2z3sTUTSzLolIs0Ww00WSJbEwj6peZTIdwTJNSoUxU8/Ukj5WZHkl368wkwgQ07yU+
      lo4QVD17ymTETzKsYRgGiiQwkY1hmgaaLJKOBQkHVSSfxEQ2SjQUQFEUMokQ6VgQ13EJbiSC
      iYLnBxAPdRPOZsbSpBNRwpEwQ6kIybCGaZooPoGheAC9oSPhkoz4u3aZI8kQ1WKR06fmiSpg
      t9uUSjVCiohvYsLL6J2aYtfuHQylo+yazBLticTakON4+lyFhmFtuodSOt2fAfTp02drmkaH
      lmmRCGubTFyabZfUQBoloPL8hRrnaxZhzUc6rBDpMYxp6G0aept0LMD9h2bYPZklHFD56vcu
      EE8lCMZCOLbFkFin5hj4dGiu5QhViyytlhjZMUGw2UaNRPny06f53FePkYkH2T2W4K+feIVs
      IsR/HUtz/2ySYt0gpEqcv5CjUG5yfrmIIMDZ+WVqpTKBPePsjAcIRcPU9A4to41j2ayUGjR1
      T2a60jDQW54FY7Xe4syi5yRWqTUo1VrdzeK1moGNiKwo1HULw/CWg5o92v5Gx0s4kwNBwlGB
      WhskVSUQsNAtaNXrmO02lVqTc8slOh2LSrVJqarTMj0p6HMrRY69cJLlfJXnBsNULRHHMFnJ
      Vzn8jndgpYfQknHeFY+yd+90N7Gu2/6mzTdezq1rHA1x++RmAc9+B9CnT5/L0jQ6/NZXvs+5
      tTo/8s45jsxku58NDaa4684DBCQYjPkpt/VuctEGDb3NZ/99QEcAACAASURBVP7425xeKvFT
      HzjM3fvHu0tFjVqtq+ffNPbze49fYH61widum+BfNF9Bqy/SEffxUmwCgGxUw+/EyMSDTA8n
      SERDBMNhAsEgumnx2S8+x+mlEh++Z9dF+WdBIBqPMDU3SVTzcUtlgXue+1M6I+P4H9pLq9Gi
      XmvQNk0Wz5/v+g5EolFSAwniIY1I1EdmcJBk1O/p/PtEZNlLENvIFfBEgBw6nQ627ekeObaD
      63hC022zjbE+aymuFVjNV9H1MXyShCIryLJMPB5hekomonmeAN65HXCh027TNk00Cd61K47P
      6RBM+Xn6VI7f++oJJrMxfvZDhy67DNdutzl69CnOLuXZEbq/3wH06fN2ZqukrGuhZVqcW6tT
      qOlcKDQ4MnPxs2DQj2OX0YIBZrJhZgcjqD4R1Sd2k7cEQeD0Uolcucn8aqWrSAnQ0vWunn+9
      ZXKh2KLY6FAu1jlg61SBWUFnz+3j6B2bmF/BHowQ1Hxkk2Eee37BS54SBBpG52I9K+X1l6eF
      4zqoquKt3Wsq2WqJWqdDrFnG1/YkGVzXxTBMTMPEdRx0XSeWTOC6nnCbT173A1ZVEDztf8uy
      cRwvectLyvISwySfCAjd825k7drreQXtdod2p4PjOJhmG3/AW6cXEFBVBUHUPd9h8WIHZjsO
      qix59pUSDPos7FqNaGCQ5xfK605fXme9kUvRi2l2KBTLNOpNSqXKqz7vdwB9+ryN2Cop61pI
      hDV+5J1zXCg0uG/vyKbP8isr/NVfPcbs2AA/eHCQSOiiI9hG6OcvfPL+TVr0vfSGjk4MJgis
      r3lr2QE+kz7ICSPPv8jO8R7Fh1/xXlOPPXtRSuKWuVEKazkSmsNIKtyt5x27h3nm+6cpF4sE
      FRFZcCkWKgSFMMfG9/K72SIzwwl+PpEkGglS0S12jKQ5X2ggBmqMj2TBtVhZWiHgJhiZnSMY
      CpKMh4kGFOqlMsvLJcL7B5FcG6OlE/H7SMVSZAazjKZCjKSj2LbV1fYXXRtD1xmMB0glLyap
      gYBtWSgSqILNwsIqbjpM5PAwyXiEpiWwe8cgO3dkaJoWtwwEUR/9LNbZMyiP/AzvutXbFB8b
      iJKMXN6h8Ur+DNDvAPr0ecvh2jbmE09gnTuH/6GHkNIXvXe3Ssq6Er0hnQfmRjn64iKjqTCH
      Z7IcmcluGvlvcGHVSy5aWSvR1E2iPR3AYlnHkvycXSnz0x/e2R355ytNvvz0aSazMe7YO9oN
      R1wtNWgZXoLVQq7CQK3AmLFKYa3EMydXvQ5o38gmP4Fg0E8ylcIWPCkJwzBoNOpU6y0qtQa2
      bbO0VkF3JJYXFxHacTQnRi2SYkHws1pp0XZA1TSWig0sV8Any9T0NrreRvNr6B2bc7kKhm5Q
      bfjIV1tUGwa4cHqxiN62kVWFtUoLf8Ch07Zo6B3O5Srgeu2/VmlidGwUVeFcrkrT7OA6kK/q
      3VlCXW8zv+L5DtSaBoWajiv5iERDlBomR5QqUq2ArA6jtpto6TDklrCsWykVSyT90ibt6Uuf
      j0vDQHvpdwB9+rzFcAoF6r/9WZxcDgQI/ciPdj/bKinrSvSGdL7vgdt48lSedMTPjmyMdPTy
      I8ut6pEVmcHhIdS6QSKZ2FSmdxN3ZiRJJuFlB6djge4I/l1jIaSvepr39cI8v3ZUo1DTudRQ
      IJ5MkBn0Zimlut41lV+6Z++m48rFImsrOcS2ztxIkkAwQCAUQPL5UDUVteOSTUa4fecQ59eq
      vOuWCR57YZFINEwkrGF1LPSWTkvxrBplWcYn+5AVGdWvoXVcZEXGNLysXF0RcRIXO11RENA0
      Da0DsizjWDaOY+PYzvpSj/efKApIkoS47hkciYawfW3iPoeZhXVtf81B2DsJjRqMZbcMxb3S
      83Ep/Q6gT5+3GEIwiDw1RQfwTUxs+mwrp64rMTOS7mrz7x5LcTpXZ2wgTEDd+vWwVT0hTWFH
      NookikxmN29KJsIaltVBlSWqTZ3Pf/N7zIykuffW6e4IXggMoM5M0xEEYjtnaR9vkFvJE5Rn
      2TGaYefuWTIRjT1BH62jR4numSITPcjeXVMMjnbYNztKoWWjRltMjKQREJianWIw5md8IMrf
      fOc4A6F1nX4RDMMkHdG4Y9cwd+waXr9OFb2lI0dURlIh6rUq2ajnFZBORWmLPqaHkyyXWxSq
      LuloAMdxkCSRcFBlMhvnm8I5wn6VdCxI0K9QqhtMZKOcurBGoaYzEPf8A4xWCyXuZzQd5slX
      VtFkkURIxTYNivkykf0DCOms5zU8OMZjp/KcutDkI++IMzMS6N63cEC97PMhjo1vmkV12u1N
      CXz9DqBPn7cYYihE5Bd+EbfZREyltjxuuxvCveGZAb/KnvEkAdXXjUV/LWzHoVDVCWoyIb/C
      px/a1w0d7Q0jXSvXabdNqvUmj375Wf78m8cYSkeJhf386h99g5ViHQH41D/9efR8ESsSY/5L
      f8xavsr8+WV27p5l155ZYgGZ8N89xtw3jxKYP4n44z/A3K4ZCrUWkXSSzGgHOW7iC4SQJInh
      0SEGYkHOreSplsss+xzWSnWK5RrNeoNcqY7etrqbzauFKo16k4IscFLs0Go0WVuTKDd0fJqK
      329RMe1NWkDgie+ZlsNyse6FhJodynUDo20jiAIrxSZ62wZBoFTXMXUDy+5QrdU5n6vSsSwa
      LZNCtcn5C6usFRucLzYQ3/kBaBss6y7/5cRTLOdFxPkmn/7Qge59613q630+SkqQR//sue4s
      Krey2p017Brv5wH06fOWRAyFIBS64jHb3RCWJHFTCGEyfHUbx0+9vMz/9+Vj7BiM8XMfOULI
      rxDU5FeFkdqWRaPewPD7EAVveUgAJEkiGotjuAr4FP7sxQLL5RaHRqVNfgIDEZVYQCYb9ZM5
      MENlfJDY/llcv8rRo9/m7FKewY/ew0jSM6sajAd46dQFnv7OM0wMp9g3OdCtE9elVCiQWy1R
      qe7gT55aYLmi8/5bhnFsb9O2bcr4/UniiSTRWBBcl3On5jm/WmT/YBBpXdpZEkUsy6Jttum0
      FSyrQ71eI6p5/gGy4kNWFC981OfzlpEkiUAiyvTOKeIBBZ8kYlm2F/qJF77ZNg1cx/akvFUN
      waxuao9L71svG89HwOgwMRBGwMugjkgXZ3vKse/2O4A+fd5O9I76r2VD+Er0avNL0sV4/3O5
      KmuVJgJeOKIgCLRMC8d1N4WRdiwL13GwbBvLvqhfDyD5fEg+H20byhWdcqvDSkXf5CewczDC
      UMyPJkv4bh3CnRwhMZjCkOVuqKPeaPCR+6dZqzTZORzj6e++QkQRsA2DdruDrCiIkuSFZloW
      oihSbehUfTrlZpvVqucLIAgCjuMiiGL32izLptNu45MkWq1W97pc8MJA19vE7ljEgyqyhGfe
      sp6X4OJ5AHvHCSiaiiiKKKoCgoC0blLjOF4OgXc/7W47X+qvsB2CmrxpRoY70J01CF/4s34H
      0KfP24neUf/+mSHA04gPXCZG/Gq4VNmzN6rkPYcmEYDxTJSAJndH/Z+8d25TGGlndqC7cbx7
      MstwOsr0SJq9O7LdTeD3HJlirdFhqdTkyFSK4eDFEEZREIgFvO/xtadP8Jk//AY7xzP88x++
      vxsDryoy/+n3vtq9zvffNsWBAR8+RSXnBHmlYDOaCjE0kGBubppAocHB3ZMMDcRYrRoc2ZHE
      ajUJhsOkklFGB7wRdkCTGUzFuPfe2yg029w2m2Lpmy9g6AYRzYc/GSY7PMBQPMj7bx/jwFQS
      TVUYSkVQfF7S2GAiSCoRwXAkBpJhTMNkaWEFZTDO3XO7yeRaDMb8pGNBErEINcMhk7w4wn+t
      kM6tCGpyz3Ke0J012A891O8A+vR5O9E76g+tbww2jTYto40oCpcdwW+HS5U9ezuAeEjj3n0j
      hAMqRtsmt1zALlZYKQ7y4Ttnu2Gktq10/QAiQW3TJvLd+8e74aKZOMwOBFBVdVMI41azm1yp
      3vURnl8ucnqpQLHmeQgcnoiRifnxyQqnl9sgQMeBaqtNxwEEaJoWs4NRxtNhQqpEuWEiiiJG
      x2EpX8e2LZp6m5reRpRlJMmmYtg0Wm0cx6FYaxGVZERBxFp394qEg/gVH3q7Q7Nl0ml3WCk1
      MTued3C11aZebdA221TrLdaqOrZlYVo2lWYb2xUIBPxUGhdF6i7nr/B66GsB9enzNqM3PLN3
      lB3QlC1H8NvhSqPP3lnHv/vkvfzY6a/jzJ8l/Y40MHvZ464lSa23/D/+B/d0v+f06EB3NH/r
      3mlsf5Tlcou5mTFCcU/6QNY0lJXzXQ+CgHwrhZVl5s+v0bl9gsdeKXR9cxMR77oCqo9UWKZc
      LJIKSvhlkfkzC8yvlNmX3ocsejIP0aBKwCfSqLdI+CVQ/Fwo28QlmVGfj2ohz+KFPMFDo9ht
      k3qtQVAWkIIKpmngE4IotskrL53AGkmReHAX7zi8k2Kzw+7pge73v9Is7FrpdwB9+rzN2Fgd
      ziTC3VH2Ur665Qh+O1xOV36D3gStcq7A8WqbMyT42MoqvTFKp5dLWJKfxbJOtWlctgOwHYcn
      XrzA6aUi77tjjnQs2P2stLLK+/1lGjUbs20zkM0SjYXQ2xbFSo1yqcz5tRqFUpW1XIlCdYxC
      zeALj59iZiTNcr5Mu92mXK2TK9Zo6G1kReXcSpnBQJK6aVFqtlkp1KiWS+R9DiWxySfrpzEK
      LdaKVS4srbGWr/DKfI5AOMTUVNAbzRs2zUaDogwnl0ocfeYE40MpxsI7yJcq6LrOiYUchVKL
      Rr3OSrHuuZU5LrWmwcnzazgulGstinWd80s5zq8UuWU4xHdeanIuV2XPeOJ13cPLcdM6gEZx
      FYBgIkPh7IsIokRy4qJwU58+fV4/WyUHXev68dWSF1U+659m2V8jqA7yMz2feclbGRJhDVm5
      fIhpvtLiN7/4LLlyE0mS+NR7DnQ/+1DGQRpzcEIOf3HqAn/xUpF0xM8/un+WlcVl1oo1VpdT
      nDtzgdVijbWVcb6wlu+2x6/8zPuRRJHpkTRDAzHC4QiGLZGOh7lrKk6p2WZXNsRTz9Spliv4
      RYcHAx1SxjmEVotWp0WtUqFRq+HYFjt37qBuWIyMxDk7v4jeMmgpEi98/yRPPPUC51JRHtg5
      4HkB2DadTodmo4HebGHqRrendl3wyTKK4mkOtVo6Tz75PCuFGqMRmcWqxVqlycfv23Xd7+FN
      6QBsq8OZ73wJxR8iOb6TRnGFjqkjyQrxkenXPkGfPm8jbNvhG8+d4tRing/ds4/j86ucWszz
      kfv2k01GXte5e5O6epODrjSCvxYahsXx1QbJoML0WJZDB/eRDMkMDsQYHM5iKUGy2fSmJKQd
      mSjpaIDxgTChLTalQ36F6WEvRHQyu9nQvqTG+MIFkZlRP6MHUqQvtBgfCJNNhNk9mUUUBW7b
      PYZhdhBFgbnxASoNL0Y/qCkENaU7OwpqCslEhJbtbYpOpQNMpT1xtp3jGYZSUeYmBmDCzx88
      McFMfIC7UgnCAZXVIkxkoyysFTi9VODeqUMMp6Mk03EGE0HmxuMMnMgxnA4zmIoyPTVOMKmz
      b2aEtVqbSqtNNhnxMoIdm5BfZs+OQVZ1gVRQIZOIkIzHqBkuO4aT5OorGLpOMqLx7ttmXtc9
      vNTJ7YZ1AJ7OhYMgiCw8+3VGb7mX3Invkj/7Irve/XE6RouFZ79OfGSa1VeeA6Axm8YaHL5R
      l7QtPAcf67UP7Nf/tr2GG13/SqHGZx79OsuFGstrFZ59+TzLhRqu4/LIh+/AcbwQyWu5hntv
      2cHsWIpwQMOv+jadw9PmNxmIhRANHbfZREgmQdy8Ibxl/a1Wt8xLK02ePV8jrEoMRZMcOqwR
      ViXajkgkmSQjB1lr2jz22Evkyk0cx+GDt08ymjpIQJVRfcKW1/Zz791HJZdnaDZLvWWitz3f
      3S+cbfA7KxpZw+XXPhzhlz7mnSug+vjnP/xOVgo19k0NctvucVZLdfZMZvidLz4JQFNv8+iX
      n+Xr3z1LKurnl3/yYVxJQlZlGqZNpd7q1n/X/glC/ocYTEX40reP8zn/JENEyZaaNHVvU/bU
      Qo4XFwqslZu8+HKcodEh4sk4gYiGgcyOHaNEAwoty2VwfBQ5bmApAaz18M9K08TQW7hAo2Ug
      qhqHZwZR/Sqtto2k+onEHHIVnUq1gWV1WMlXNrWHeA2LJ5//xvf4zS98x+vgxm7gJrBl6pz4
      5ufJzNzC6ivPIfuDVJbPEkoOep2D4yCI0o2qvk+fNy3hoMrcRAYEgVvnRqjrJggCM6NbZ/Vu
      F1EUGEq9Ojmo3jL597/115xcWOPnP3iEI49/CfvsWYI/8ZOod931mud1m01qv/pfumWSuw4R
      1nykgjJDUZXlmkkqKBMLKowPRBAQGEoE+Mq3LnB+tUT9wBCiIJC6jGrl5a4tcPYs1R/9R/x+
      M8b5fJ1P3jNLLB5jx8wUiZCKIsvdc9VbJv/3H3ydkwtrfPojd3FsvsjZ5TKfft9BxI23pAA7
      dowSGJpAFV1kWWJpwbu25ZkE/+6pY5xcWOMXPnk/AL/6R99gdnyA0YF4t7woirC+ZC3LPoZH
      htBibSLRCFbHolFvEpBcxmbTxCMqkigiSwIry2usFOrsTKn4ZBlZ9iSqFUUhGAziDwSYdKvc
      Yc7TkSJY4j4isQgdUfGUSNMp0EIIPoXPfuX73fY4PJO56udjZtSbIc6NDxAOqjeuA5C1AHt/
      4EexO212PfgJXNtCCYQZmLmF+Se/TMfUGdx1BIDszkMAhBIdfL43dl/atu039Br+vtf/ZriG
      G11/LOzjX/7ou1kpVNk/PcyDt+2k3jLJrIdnboyMr+UaXNvGKRQQgkEvG3Sdltnk1IUCK8U6
      Z05d4NC5edz8Gu7ihVfV01v/hqNXwmzh9JSZuPseLNMkFfGTiPgZSfi7fgCPrCceGaaJvq77
      bxrGlt+nZTY5vVgkV25uurbm6XlWtJ00TIeVio6m+VFUFb/fj+iTKNQMQn6Flml1v9uLZ1ZZ
      yOsU6gYX8nVAQFa8F24sHqXZhLDmw+fzda+tUKx2y8+vlHDBk6UQRWLhIH6/huzzrWffSsiK
      giB6L3BJslE1Ddt2sW0Hy7IJBxQM2yGsyUiiSKupo7c8s/mNPU9BFBAlH6wnh8VcA3AJOSaG
      CJqqEAh44nqyouCTbTquyIVCk2LdZLmiX9Pz8cDhOfbsGOrKR9zwvzJJVogPT+G6Lmo4TiCW
      RhBFBFEiOjhxo6vv0+dNR61p8P/8wdc3hfO93izdDcwnnqD+259Fnpoi8gu/2O0ENm0C37OX
      8P6MJxf8noe2PFevo9cj7zvIkU8/0i1zaUhnr9bQRuKRbavb2rQM+VVSyTg102Vk9yzh/Y9g
      njlD8N0PsXfepNTssGMkxUhM65rCn1jI81t/9RzTwwl+4n0Hu4lg44MJmqJBW1IYHIjhpKLs
      mCkxmgpx+1SaxWqbRFBhPKF1r+2D9+zj3vnV7nU+fuzs+vdQuO2WnZR9UTJRjeFsshtuunt6
      lKPHzlOt1gn4vJd5p93BJ/hB8HG62GEgLLJrSEKvVVhbWSPun0P1STi2QzykYRoGrWYD4hr5
      2Cjfb8ZIB2TuDEfYOzdGqdnmyFyKW3ekuVBocM/uYW6dql7Wn2G7XCofcdOGWYIgEIx7Ma0D
      0zcuCqFPnzeK3s3dK23oXimp6mrr+dC9+1gq6d2NVvXcOZxcjg7ess2GXlDvJrDjusxzkOLw
      XnaHQ2yVUlRrmbxweomVfIWTi0Xuef/dcJcXVnrq7050E7HO5aqcWl1kNBXilqkBvndmrXs9
      29l4bpkdjLaNKIoU6gaPD6R5xW/zkKsgSjaqCm3b0yj66B1e0MjnvnqMXLkJQL7coGm0AVhY
      rbBWbFFYK5MrN0jZJu9feo62M4KP2zgyEeu2IWyS0e/+vFK4KJ9xbq3C0oVlxE6CcsPshpvO
      r1bIl7yIoOVCDVVTcGyHRsvkbK7G4moZ0wiQH/RjWA7BUJgzSyVaZgdJEslXWphGC8dxaDQN
      Xlmt8+TLFxjJxNg3nUWUfKiqi+UKmzwZ0lH/Zf0ZtuK1nsl+HkCfPteJ1VK9q0svwJayzK83
      JLO3nkJVp2gpXbXHDz30EAieTPRWSqEN0+bbZ8rUTc+/duOleCmObdOo1bzQRb216bPehLNX
      lqv8xVNnSUf8hPwKjx490b2ejRf2lRiIB/knH30HZ5dL3Do9yL/+9b9kOV9FFCUeuvdgNzyz
      lw2HsclsjL07st32PLx7jH/763/FWrFGqVDiYX0e4+yTCI0BYuYHYL27623DlXyVZ14+371v
      vSyeX+LMyTO0Snnqd093w02L+TTNRoNWs4lp6CiqF2HkulCu1FnLl7ENHXdfhngiiS21CEfC
      +OoWkk9ClEQ+cNduAKaGk5xaKvHS8dMUVkP82H0zHBkNcmJhmYnY69sXeq1nst8B9OlznQgH
      VHaOextz0yPpLY97vSGZvfUcmB7kbKndVXuU0umuAcilIX8b8g+qTyQdkkGARFDBzufRv/IV
      fBMTVOb28vmjLzAzmubQrnGGhzI4coDhTIKvPX1i00hy42XyzMlV0hE/4wNhUhH/JvXJrSjW
      DY5+35s1HJzOcN8tO7jvlh1UG0ZX23/HyMCm8Mxe0rHgphyBjfasNY1uSOjO8QG0tkAnk0Ge
      mkLq2RPpbcNb50aot7zono37thEGOjeW5m++7S1TZRJh4pEQpbrJzOgAq1WTettlMB1D0zRs
      28avSGSjGrmVVSK+NKlIgKnxLLFGm10TGRq2gOQ3GEpHcF3XM5K3bFIRP4auo0hhAqrMarVO
      tdHC6hGDuxZe65nsdwB9+lwnIkGN//DIw90N3e2ysdGajgWQxNfW6Lm0HqNjX1R77OHSpLBQ
      QO1qAT2wM4VpOYRUidajn6f56OcQMxn+7PYP8VuPn2IoHeU//exHCMXixF2ZpbLBl77xd5cd
      SR6czjCRiXY9BD5xzyy5coPd4+lNfgBST9zi0e8v8vknTpOO+JnIRLvOY4LPx74De6ibFslM
      dEsF0u22jcg08szMqzbFLz3u3UfmNt23ubE04aDKH/3t84Cnp1SsNlFkH0OpMGtV3QvVjLo0
      2w4Ns4Vt29RbJi+dXGBtZRWfpVNrmWSzKXy1FnIwRCjcouWI4FP48299n//x188yEAty6+ww
      sk+i2dRZLtb56vE1yk2RoZUWQU29Zg2n13om+x1Anz7XkXBQu6oN3d6N1p/6wOGuINrV1BOU
      xMuat/QmhbnwKh0Z1ee9THwTE4jro+TZnRMMvbLG3PgAQVVm8fx5zq+UuHc2teVIUhKF7gu8
      1jT4z//DU+P8mY/dw9lSu+sHcGQm2y0zmgp1Zw29zmPd2QkusuBck/bNpfdAylw+XLL3uEvL
      DKa8tXJxI2oHCGkyP/XgLLLgoEshCm0J26fi92sMhFUysSCTgzH2jkR48vtn2TmeQfWJHD36
      FGeX8kTeezvfff4U55YLHMxqZAcHOHLnEcKKyNxoHP/gOJrkEg0HGIp57RmUhdet/3OlZ7Lf
      AfTp8wbS0NucXiqRKzeZX61wx55RVgo1wkGVWPj1/Xn2On3VrrDxrN5xR3eU/C5/gF27JgkH
      VZqG54fbabfxCc62Zje9G9zHTq909ycuFBqbNi8vnTV0r8Un8sDOFI2WgW60N13z/YdnKdWN
      q3IruxZsx6VQMwhqPpx13X0XvOWdeJCm0SYeCSJKFXA9H4Ajc4OE/DKZeJB4yM9wOsrgej5G
      pVrHtmxWcwXq9Sadjk21WieVSeMP1AkHFZKpBGV0wpqPSFDjh24fR+/YtJr6ddf/6UX65V/+
      5V/u/Yenctf1/FfFoN9hPPrGJoe93WPQ3+z1vxmu4WbW71d9ZOIhxjIxfuC2aZ588Rz/5te/
      yItnV7lr/w5U5dqvQxQFwkENVfER1BQGU1GmRlJ8+L79Xalo8KwMxVAIQVEQRYGgJqPIPsIB
      bVOZZDRIOKhdTK66DL31fPI9B5nIRhlOhrhv78imkb4orNfje/Xfu08UkHCIhgKb6j+xVOHX
      /voFzq5W2DeRumzZ68Fzp3L8xt+8wNlcjffdPkMi4uf9d+1lZjzLl46XeXalTSoe4bvHF1hc
      LnDn7iHy5Sb/9X89ydnlMvVm00tMO7/G3bdOs2YpRAcy3H/rNLW2gOQP8e7DMxyZyaDJEgcn
      EuwdjqL5ROYyITIRBattsrJ4nnQyxlg2ddn7dj3ozwD69HkD6F3379XCP7WYZ7lQA0G4Li5e
      G1xp49l1XexOB1GSECVpU5k79u/gwNzYq/YXtltPyK8yFPN3jVxezzV/54RnqC4ALdPachZw
      tfsGl5a5UGhQqBkICISD/u5+R6lpslw1WavqnCs0Mc0OAVWmWGmRd91uWKprmd0Q2VJNR/Ap
      yIpDxbCwBQlFVaibFlG/zP2zSURJwkVgKCgQDoiIguDtJ9Tr4LrXVcPpUvodQJ8+N5krrft/
      5L79uI7LzGjqqjaSXw+teo3y6gqKppEaHu3++6Wevr1r+NvheuvX37dvpJsItlWHdC11Xlom
      FvKijjTFh6b0dIiuw6mXXubk+TXunbyfjz6wj4bR4dbJgW4HN5mNsbxW4gt4s6FoUMNoNCkW
      6mT3D25ySOtt9+8tt/jV/3m0m1h3s7i6LeU+ff6e0jAsnj5X4Uy+1V0XvhpWizV+4/OP87Wn
      T1BrGpvW/XvJJiM88uE7NoVtXiu9dW4kPl2OjmFgddq0DQOnJ+ywZVqbPH2vtp5GQydx4gUe
      WPgehbMLW5Z3XJcz+RZPn6vQMLYWwNtIBDsyk90UUdTLpUl226Ha0Dk+v8JyvsrL53JdFy6j
      bWG0L7ZHrWmQy5fQWzpnFvNcWC1z7MQitZaJX1OZmx1ncDBNoeq1VdNok680WV0rUSoUWSlU
      qZar5FZW6bTb1Jomx6sCC1WLF08vsZyvcnx+lVK9nvFwPwAAHUtJREFUxTMnV/n6i3nKPY5g
      N4L+DKBPn21wfLXBMwtVwpqPdFghol3dn05vSOZn//Unux64GwlNN4KtvAEupdc1S5LlrhF5
      IqxtGrFebT0px+CR1hlcYw3VXNmy/HYT07bD9fA9uG/fCK7rMJIKbz3TaOg8d2qVXKnBVCaK
      7dO6z8eD79iDKAhMj6RJRQOUS2WqlQZnFlb4g2OnuqG0B2/dw6mWStj2oTsXO/t8pcXvfvkF
      cuUmQ0NLfGrw9YsEbkW/A+jTZxskg4r38g/K3fDJq2HDw9XTpb9xESy9bOUNcCm9rln3H7q4
      7CSJF2UIbNt5VSLYa9XjC4dRZ6bpiAL+6akt6780MW0rehPW1DvuQJBevQl8LUl20ZCf3ZOD
      iKLIrokMybDGh27f0W2DDcIBjXBAY7VYZ3okxcJabV2n348qQaFcQ4kHkKVgV1YiElCZG00h
      CgK3zAxxLlfFkvwMDsSRRbiwXGAsFWb/1CCPr7fhYDJMYP0ZSV5GPfV60u8A+vTZBpMpP+mw
      0lW8vFrylYvLAgu5Cv/9L59hpVgDXD71nluu+nzb2ejsDQMNB7Uty1w6gh+IB191ritJClxa
      zwZiKETkF34Rt9ncUpYCLoZ+biSmbYX+la90E9bkmZkt4/uvlkhQ41/86Lu66qxb0TTaXc2h
      c8tFSuUqpmGwki/jC4ZZXM7T1oP84cI5Pv+NY2QTIT77rz7OP/noHawUawymYnz9eI6UqGGL
      CvNLRRaXC5iNJh/96EE++5PvIjKQRJckWkYHgGJNvy7fcSv6HUCfPttAFISrXvbppXeUHPIr
      1KoVSsUybfPq13i3u9HZq/x4pTK9yU5bObReSVLgUoXJXsRQqCtIdyW207H2JqwJwVd3UtfK
      5dRZL0dvG8yMDfDsy+cBT+iyXChy7LljjA+luOfgHDtmpkiGVFpti1/7k6O8spDjH77vHdQr
      dcrFGh2zzY7hZDcZTvnes0if+13cqSkCP/2zW7qiXW/6HUCfPjeBS5OyOp0OzrpP7HawHbeb
      BHUtaqJXKtOb7LTV/va1ylw4jUZ3BnC5JZuroTdhTdxGp7JdLm2b+w/PdhPBgpJEw7RRfeKm
      NrAdhz/8yrOAF0ZbbzQxDZNGvYEoSSiqiub30zQ63XOfXMit33eHdsfalAzn/tkf01xXcU04
      HR75wCFWi3X27ri6yKurpd8B9OlzE+gdJQc0hV/+9HvJFevcsW9yW+W//fIyn//OaYaTQX7y
      PXuvunw2Ed6yzD+4/xaGU1EyyTCZRBjXvXzE0NXKXNiVMrX/8hms8+cJ/cin8D/44LbLXg5B
      kq7bsk8vl7aN19anGE6GuPeWHZxY00kEZR6YS3bbwLadV7XnRhtOj2bYP1UiGdZIhRTk9YS1
      8WycD953gHylyaG5oU0SGvZ734uUySCmU1SUAP/xt/+Gs4tFfuZjd/PBe/dd9++8Qb8D6NPn
      JiNJIrfvmbiqMg29TaGmI6+v3V9t+SvVmY6HNr1kLGvrkNGrwnawV1Zwcjmceu36nPM1cG0L
      99m/w80tIt7xboT04GWPa3dsfvMLj/O9U0v83MffyUK5zalVnX1z9npbG8iShN62qZsWkght
      y+aPv36M4+fy/PjDBzeVmcxEN7XhvXu8vYTlQhXL8qKqGrrJ48+f5HunlhhJPUAyclHlVEom
      ux1krdxgMVdhuVDtmtrfKPodQJ8+bwEevHWcyUyUVMRPPHR9soNvNFIySfw//p/YuRzyrl03
      p9J6FffEMWg1cE+/tGUHsFyo8hdHv0++0uBzX34O3Rei0jR54pUVfvDuWcbTIVIRP6lokJms
      SVjzUau3+MozZyjVdP706HHWWk63zGTm8nsg7Y5Nu+N1ACfPr3H87Cr5SoO/+c5xdk9efnkn
      HQ/xmX/2QZ767vd5+M4bkwG8QV8L6BL+PunQvBnrfzNcw82s3+10aHzu92n+0R/hm5hASiZx
      HG8ELvZIQ28sF9yMENLL1X+tiKEQUiZz1ev/13wPZAXaJogi4oF3IAQvv18R0BQauokkiTzy
      4TsJBjyNo4cPT5AM+0mEVAKqD58kEdF8qD4Rv+qjZbSRRIEfun8PTx47yYnT5/ngnXNMDia6
      5z4+v8q/+vW/5PxqibsPTKGbbSRJ5Cc+eAfHTi+TLzf45HsOMTO6tWeELLrQaTKQTqOq11f/
      p5f+DKBPn5tAu2Nz7PQSQ6kowz0RM3Yuh/G3X8UplTCOfgN5Znt+f0v5KsuFKgemh1HkN3bQ
      9GZCkHwIt9//mscpssTP/tB93d/3byMfT/ZJvOfwFHsnUgQUibPnVmjWGzz/8gIPHLyY5/A3
      3znOs8fPs7Bc4oP37OvWc26lRKVhEgyFeHkhx7uOzHWfiXQsdNnn40bT7wD69LkJ/M+/fY7P
      PPoYE4MJfvvf/jDp+LpXbyaD9uB76Lz8Mtp9r/3iAs8D9x//5z/m3EqJX/yRB/iHD992Iy+9
      zzq97f7DDx3udryXKnS+987dvHxulQMzw11JaIBgQGNu1yyFms7E2PCmZ+Leg9P8/pee7j4f
      ryPi+KrodwB9+mzBjRxl9547/GP/21WXv3o1oj7XE59P7Eb3+NXNy3LTI2l+6qN3M5SKbnpu
      fNJ6GUFAU2WagkAwFEJWrl4p9XrR7wD69NmC6znK/sSDhzydnPURYX8E/9YjHQ/xG7/0cZbX
      M4Y/+eCh7s+9bDXbi4c0/vePHaZQ05keivG3z8OO2WkG40E+9fBB7rt12lsOiocwTZOhoSGU
      G9w59DuAPn1uAooscXjXGOAtJVwtvXsIik8iHAoyOOjblofwWwG3XoF6FTLDCNLVv5auZbZ2
      LWWG0tFuPkfvz73350q0220ajQaus/k4SZIYHBwgtL72o6oqQ0ND27qm10O/A+jTZwt6R3vX
      k0tHktuhd1T5//7Lj/Pww++kolvs2RG/rtf2RuA26zhf+iOoFBHueDfCgXdcVflr2RO53vso
      vffnN37p493Z3sbo/3J1fvKhw93Q3guVNt8+Wybm9/HhA1mcdosTJ04wNzdHOHzjfCH6HUCf
      PlvQO8K7Uedud2z+258c5XunlvjFH35gy9jwPjeP+VyVR7/5CrNDcT5y53Q3+W67yL6Ls70r
      HieJ7Br1wkeXatuTBLne9DuAPn3eQHoTkq6UHNS7hzCUjpKIBqkbFtnIjYsRv1kIwTDi+z7Z
      XQK6Wq5lRnWlMk+8vMIri2VWyy3u2TvM4GXUUS+l9/70jvq3W+e+4TDpsCc5HlQl6u1tfY3X
      Tb8D6NPnDWQoFeVD9+3j2Kkl3nvn7i2P691DAIhovtelTvpmQwjHILx95ct83eTbZypkowpH
      xmPXNFvbqswduwaZz1WZGYqT2qYe/6X352rrPLGQ4zN/+Bi3zAzzUx+5+zIlbwxvnyeoT5+3
      IJcmJLU7Ns+fuMBQOspoJnGFkn+/ObnWYqlqUNE77MyEiAWuX4b0ZCbKL33sEOCFbt4MLk0e
      S4RujmnQTesAOkYTSVYRJR92p40gCIi+m/Ml+/R5q7BVCGGfzcwOBMg32mQj3rLJW51Lk8dM
      o3VT6r0pLXf621/E7rTRwgkSY7OcPPrnOLbF3vd+Cn+kP8rp8/eb3nDEPtsjHVb58IHrLw19
      I7Bzua4gniBfftC7ezLLb//bH+7+bho359puSgdQXV4gPb2f1OQuzj3zNW750E/SbjVYeuE7
      TN/9/ptxCX36vCm5NDTwEw8eYufYAIPpSH/0/zbALhYp/x//BntxkdCnHyH40Y9tq5yiKG/t
      RLCO0eKVx/6U0QP30KrkCaUGeeGLv0MoPYToU/BpAayO180d+4vPAjB8537MgYM36pK2hW3b
      mNdg09ev/+1zDTez/nanjbsu7GDbNq5jsW/KG9m+UW2woQZq2/YbUv9G3W/kM3C92qBtmPyO
      b5QXwyn+mSmy7yq+UzKZBK7+ObBshz9/6ixnVmp8/J5pJgYiWx57wzoAWQuw7+F/BEAwmSU+
      Mo0/liKSGaN47mXMZpX4kKegd+BDjwCQSXRQ1TdOFwO8xr6R8qv9+t/813Az6x8eUPnvv/SJ
      bmigIktYlgXwhkliv9H1wxv/DFyvNlgRNb4qpsjLDY46UQ5v8zvV6/VrTgQrlZo8cWKNStPk
      ubNF5q4gO31Ttrin7nyYl77yB6R37GX0wD0U5l+iWcwxMHvLzai+T583NUPpKId3jb2lZJ2P
      z6/yE7/yh/y3PznaNTy50cznqvzKnzzNnzx+ko59nVzLbjAbYb5Hdo9dMcz3epKK+rl37zC7
      RhPcsfPyhjgb3JQuPpodJ/oDn+r+vvOBH7wZ1fbp0+cGcWnY4vjgjQ/meOLlFV6+UGKl1OSe
      PdtL0OplK0+GG8mlYb43A1kS+aG7Z7d17Fs/fqpPnz43na00728kd+waZH6txsxQbNsJWr38
      /+3dbVBUV5rA8X+/QEODrYiIICBo+8KLjSJITGlWDetSVsbNi1RN3mors1OTZMov1tYmtbVf
      8iFbk92pfNjdyqYm2UqlUrOJk9o1iqVOkRCJxmB4EwqhCWoAmdgt0go0DXQ33Xc/IB3RyYhK
      39twn983mu77HO+Rfu4995znyBTbu0kCEGIO6WWnrjunLaph5dJk9mycKrdwv/V5xJ8nCUCI
      OSI7dUXXw17Bz6Zej95IAhBC/KSFdEcz23o9eiIJQIg58iBVKWNZrN3R6OkKft4vBBNCj6K5
      h4Dezfcr+EAwxO8++3pWez/IjmBCCE0ttDsarc127wd4uIVg90MSgFgwfOMB/um/qgH4za/3
      kZSo7aryhUDuaObObPd+UJMkALFgNHVd4auWSwA0d13hsc12jVskfooWi7K0psWisHuRBCAW
      jNINOfxVydSX/pYN83esWA9kUVZskAQgFoykxHj+4x/2a90MTSnBIEGnE1N6Oqb0mfXyY3lK
      Zyy3bSGTBCDEAjJ2rJrR99/DlJVFylv/hulWSeFYntIJxFTb9EQSgBBCdbdP6bx+c1Tj1uiX
      QVEU5fYX/r1N+an3Rl3J0iA7smU/AD3Hj4U2aB3/YWrR/6UhoKu3hlkc9xhm0WI/gDvbNp/7
      YC74/X48Hg+pqalRPQ9yByDmhfouFyeaethbmnfPGud65vyTh7ePXWDT2pu8/NSyGV/0sTyl
      M5bbpgW1FoJJST0xL5xo6qHn2ggnmnq0bkpMm67Tf/SrdlyDw1o3Rzwgr9dLU1MTXq83qnHk
      DkDMC3tL8yJ3AOKnaVGnX8xfkgDEvLBtQ4YM/cyCWnX6F8JCLpl6KkNAQogHcOjzZn755sf8
      +l//MC9n8UxPi/3lmx9z6PNmrZujGUkAQgihUzIEJIS4b/O9Nr9UOp0iCUAIcd+iVZs/GArz
      Wf0luv90k+d3bSAv/cfnC509bt7++Es2rV3Jy09tf+hxe5l6KkNAQogYMjg8zukLP9D1w03q
      u1wzfqenKa6yI5gQQneWLU7ksaKVdP9w865ZX3qa4qrWQjApBXEHrZeg6z1+LLRB6/halyHQ
      Oj7cuw+iPQ1V63Og1o5gMgQkhJh35vs01FghCUCIBSQQDNHovMIP12c/Rq7WZ0TskWcAQiwg
      D7LT1p2fSVmUEJU4c2m+T0ONFZIAhBDzTrSmoeqNKgngase33Pzhe5bl5bN8jYPurz7DYDKz
      dsc+DAaDGk0QQhce5Mr4zs9MPwCd6zgi9qiSAK51n2fzU69w/rPfMT7sYfnaYvy+EdxdTWTk
      l6nRBCF04UGujNX6jIg9UUsAiqIQDgUxGs1gMPDt//yWpNQMRgevklv6OJP+CS6dPUZGfhlt
      R98DYOWjDvzLS6LVpFkJhUL4/X6JryGt26B1/HA4HGmHHuNPx9ZzHwCk3trPOZrnIWoJYNI/
      zsXTR8ksKsdoNFH+/D/SevR9LMmLCU6MERjzEpc4detY/Le/AiB9aRCLRdYB6Dl+LLRB6/ha
      z0HXOj5IH1gslqjO/58WtX9dXIKVgj3PAtDtO8LFM9WEgn6yN+2g9ej7hEOTFP/sF9EKL4QQ
      85ZaC8FUSW9lPz9IcMJH/K0r/pKnXwGDEZM5To3wQggh/gxVFoIZDIbIlz+AKc4iX/5CxKBA
      MERzVz8uz4jWTREqkJXAQoiIQ58386vf/IEDv/1fKbGgA5IAhFigOnvc/P2/fMx/fvoVgaB2
      s1lE7JKVwEIsUNP18/uu3mDfjo2sylh6z8/8/K+3sCFnORlpNlngpQOSAIRYoB6kfn58nImS
      DVlRbpmIFZIAhFigCvJW8N///JzWzRAPQHYEE0IInVJrRzB5CCyEEDHG6/XS1NSE1+uNahxJ
      AEIIoVOSAIQQQqckAQghhE5JAhBCCJ2SBCCEEDolCUAIIXRKEoAQQsQYWQgmhBA6JQvBhBBC
      p2QhmBBCiKiSBCCEEDolCUAIIXRKEoAQQuiUJAAhhNApSQBCCKFTkgCEECLGyEIwIYTQqXm9
      EExRFHqbahn1uAHw9HVx4Y+/Z+hqD0o4zHen/o/u00dRFCUa4YUQYl6b1wvBbvRfxD86xPjQ
      dQCunP+Kwr95np6GGvpaTrF8bTG29GzcXU3RCC+EEGIW5jQBhEMhQpNBUnPWkZJlj7wel2DF
      YDAQl2BldPAqKVl2luUWMOzqncvwQggh7sOcJgD3d830nPvjXa8roRAwlSBMcRaCE2P4fcPE
      JSbPZXghhBD3YU4fAmcWbAVg4GIbV1rqwACW5CVgMOCs/ZQ4SyLZm3bQevR9wqFJin/2i7kM
      L4QQ4j5EZRbQ8rXFLF9bHPl5496/IzA+SvytK/6Sp18BgxGTOS4a4YUQQsyCatNA428b7jHF
      WdQKK4QQ4icYlBiYi/nee+8B4HA42LJli6ZtCYVCmEwmia8hrdugdfxwOAyA0ajNOk2t44P0
      AahzDmIiAUwLBoPExWk7LKR1G/QePxbaoHX80K1JE1p9AWodH6QPQJ1zIKUghBBCp2LqDkAI
      IYR65A5ACCF0KuYTwPTDGIBAIDCjftDExMScxQkEApFxv7k+9mwoijIj5uTkJJOTk6q24XZa
      xA+Hw4yPj0d+VrsP7hQIBGb8/1ODoiiRmOFwmEAgoGpsv98f+TtQO/50G27/O9eqD6bja3EO
      QL2/v5iuBlpXV4fL5eLZZ5+lu7ub3t5eRkZGePrpp6mtrSUhIYFQKMTOnTsfKo7T6cTlcnHj
      xg0qKyupr6+fs2PPVnV1NWlpady8eZPy8nLOnj1LKBSioqICm80W1diKolBXVwdAV1cXVVVV
      qsYH8Pl81NTUkJ6eTkFBAY2Njar3wfHjx7FarSxevJicnBxaWloIhULs3r0bi0WdqcttbW10
      dnby5JNPUldXh9FoJC8vj/Xr10c99oULFxgaGmJoaIjS0lLOnz+vavyRkREaGhoIh8MkJSVh
      s9lwuVyq9sH333/Pt99+y/bt20lNTVW9DwA8Hg/nzp0DoKSkhIyMjKjFiuk7gMcee4zly5cD
      0Nvby549eygqKqK/vx9FUdixY8ecZOfe3l527NjB7t27cTqdc3rs2TIajaSnp2M0Gmlvb2fv
      3r1UVFTQ2dkZ9dgGg4Fdu3bhcDhwOByqxwdobW1l/fr1LF26lMWLF2vSB36/nzVr1rB582ba
      29t5/PHHWbVqFdevX1clvsfjwefzsWLFCq5du4bdbmfXrl243W5V4hcUFLBu3Tri4+MZHBxU
      Pb7NZqOiooL8/HwArl27pnof5ObmRqaia9EHAG63m+LiYsrLy3G5XFGNFXMJwOPxUFNTg9fr
      nTEH12AwAFN1soPBYOTnh5mn29nZyddff01ZWRlHjhyhtraWUCg0J8eeDb/fT01NDS6XC5PJ
      xNDQEGazmVAohNlsxmKxRPUL8Pb4AA0NDWzdulW1+PBjH0wP/fj9fhobGzXpg/Lycm7cuMGh
      Q4cIhUIYjcZIf0TL5OQk586do729nebmZrKyshgbG8Pv92MymTCZTFEdApmO39HRwfj4OJ2d
      nZF4asQHcLlcnDp1Cq/XS3d3N06nk7KyMhRFUbUPOjo6Zvx/UxRFtXNwu3A4jNlsViVuzA0B
      paamsmfPnrteN5lMjI6O0tvbS2lpKZ2dnSiKMmPM+H4VFBQAUye8qqqKhoYGcnJyaGhoeOhj
      z4bFYmHPnj2Ew2FCoRBbtmyhurqaVatWceXKFXw+X1Q3hZiODzA6Okp8fDxxcXGkpaWpEh9+
      7AOn04nJZCI3N5fGxkbGx8dV7QOAgYEBNm3aRF9fH2lpaQwPDzMwMBBpYzSYzWYeeeQRgsEg
      RqORgYEBBgcHycvLY3h4GJvNRkJCQtTjK4qC1+tl586dnD9/nrGxMcbGxqIeHyAjI4OMjAyG
      hoa4evUqFRUVGI1GLBaLqn1wJ6vVSl9fnyrn4M64Ho+HhIQEEhMToxorZqeBTk5OUl9fz8TE
      BCkpKWzcuJEzZ86wbNkyNm3aRH9/P06nE4fDwYoVKx4q1uDgIK2trVE59mx1dnbidrvJysrC
      brdz5swZzGYzjz76aORqOJr6+/tJTU3FarUSDodVj68oCvX19YyPj7N9+3YGBgZU74OmpiaG
      hoaw2+3k5ORw6tQpMjIyyM/PV+UcwK3NlHp7yc3Npb29HY/HQ1lZGcnJ0a2cqygKHR0duFwu
      bDYbJSUlOJ1O1eIDDA0N0dLSgsFgIC0tjezsbJqamlTtg66uLlwuFwaDgeLiYvr7+1U9BzD1
      3dfc3Mzk5CSlpaVRffYRswlACCFEdMXcMwAhhBDqkAQghBA6JQlACCF0ShKAEELolCQAIYTQ
      KUkAQgjdmK41NBvBYJCxsbGHinft2jUmJibw+XwPdZyfEggEGBgYmNV7nU4nFy9enNEWSQBC
      CF0YGRnhzTff5K233uLLL7+85/vdbjetra1/8T1tbW289NJLvP766xw+fJg7Z9UfOnSI3t5e
      6uvrH7jd7777LgcPHuS1117ju+++m/G7gYEBDh8+fM9jeL1eampqSEhImNGWmFsJLIQQ0dDa
      2kp+fj779+8H4MMPP8TpdLJt2zays7M5ceIEiYmJGAwGPB4P27ZtA+DYsWN88cUXFBYWUlJS
      wsmTJ0lOTubgwYMAVFRUUFVVxdtvv43T6eSTTz7B5/Nx4MABYOoq3eVy8emnn1JcXMzly5ex
      WCzU1dXh8/l49dVXqa6uxuPxsGbNGrKyssjMzKSnp4d9+/ZhsVh4+eWXiYuL48iRI8THx/PO
      O+9gsVioqqoCpuqZffDBByiKwubNm0lKSppxjJ6eHlauXInZbMblctHc3MxHH30kdwBCCH3w
      er2kpqZGfi4qKiIzM5PGxkYCgQDx8fEcOHCAgYEBXnzxRXJzcxkZGYnUC+vu7sbtdkfed7v4
      +HiSkpJobW1FURSys7NpaGgApraX9Pl82O12WltbuXjxIl6vd8b7pmM+8cQTtLW10dTUdFf1
      0eTkZEKhEGfPnmXlypUYDAYuXboEQEpKCoWFhQwPD5OUlHTXMW7cuEFaWlqkLYFAgMrKSkkA
      Qgh9sNvtnD59mv7+fjo7Ozl58iSVlZVYrVYAHA5HpBZWTk4OMFWDzGq1kpmZyQsvvIDVao28
      b9rw8DCnT59mcHCQ3NxcEhISqKiooLy8fEb81atX09LSgtlsJicnZ8b7pmOmp6djtVrp6Ogg
      Ly8PmKpV5nK5OHbsGNnZ2dhsNqxWK8888wyrV68GoLa2lpSUFIqKikhLS7vrGMnJyXi93rvO
      iemNN954Y87PtBBCxJjU1FQWLVpEbW0tWVlZ2Gw2urq6KCwsJC8vD5vNxtKlSzEYDGRnZ2My
      mUhOTmbr1q2R+vzr1q0jJSUlcidhMBi4fPky4XCY5557jry8PHw+HxcuXMBut7NkyRKysrJY
      tGgRq1evJhAI4HA4KCwsjLxv7dq1pKSkRGKOjY2xZMkSHA4HMPUwuqurC7vdTmVlJatWraKv
      r4++vj7y8/MjX/znzp2L3AmYTKYZxzCZTHzzzTds2bKFxMREMjMzsdlsUgtICCFihdvt5vjx
      4+zfv5/FixfP6TFOnDhBTk4ORUVFkdckAQghhE79P7IDSzvB1eSdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      7LHHyMzMBODTTz/lgQceIC0tDQCTyQTAggULCAoKwmw2M3LkSB566CH+/Oc/YzabeeCBB5g9
      ezaDBg3if/7nfxg4cCBFRUW8//77BAQEcM8999DS0oKfnx8Oh4PVq1eTl5fHokWL6N+/P6Wl
      pbz66qukp6czdepUHnnkEV577TWWLl3KokWLeP311zEajdxxxx0kJCRQUFDAM888w+DBg1m4
      cCFRUVGYzWbuvPNOZsyY0S1/77zzTtxuNwqFgg8//JBbbrmF3//+94waNYqPPvqIuro6nnzy
      SaksALRaLWFhYcTGxgKwYsUK3n33XWJiYrDZbLz//vv88Y9/xOPx8Nvf/pbU1FSee+65Hnn0
      +9//vkd5W61WcnJy+N///V/8/f0ZPXo048aN49tvv+Xaa6/ttfz27NnDO++8Q1RUFEVFRfzz
      n/8kMTGRqVOnkpSUBHQc0r1kyZIeZTJp0iRuvfVWPv300x738vPziY6OliYOn3/+eVasWNHj
      EG0ZGZkTcLY9gE8++UR88cUXYt68eeLdd98V2dnZYtSoUeKVV14RDodDLFmyRDz55JNCCCHK
      y8vF+PHjhdfrFVdddZXYvXu3EEKIF198USxfvly0traK0aNHS/KnTZsmamtrxbb+ILwAACAA
      SURBVCOPPCI+/vhjIYQQHo9HCCHE+++/L15//fUeOo0fP16Ulpb2uN7a2iosFovYt2+fGD9+
      vBBCiNzcXHHzzTdLYR5++GGxYcMGIYQQL7/8svjwww/FihUrxH333Se8Xq84duyYmDFjhhBC
      iN/85jdi5cqVQgghVq1aJR5++GGp1X7fffcJs9kshBDi6quvFkePHhWLFy8WL730khBCiE2b
      NomHHnpIHD58WMycOVNqPXftXXTKcrlcwuv1ioULF4pNmzaJf/7zn+KJJ54QQghx4403iv37
      9/d41vnz54vs7GwhREfLeMKECVKePPXUU2Lx4sVCCCEuu+yybmn2lkfH9wCKiorEtGnTuqX3
      5ptvildfffWE5dfa2ir1hh577DGxZMkS6flsNpvw+XxixowZori4uEeZ1NTUiCuvvLLX8tq3
      b5+YMWOG8Hg84uWXXxbvvfdej7w4HrkHICPzH866B7Bz507Cw8O56aabuOqqq9i7dy8pKSks
      WrQIhUJBTU0NAwcOBDrGDAEaGxupq6sjKyvrtNKorq6WxsNPtUzfaDRSU1NDYmKidK2trY0H
      HngAf39/TCbTCce9a2treffdd1m6dCmtra1MmDCB1tZW0tPTpQmqTro+18CBA1m6dKl0709/
      +lOP8cba2lq2bdtGYWEhLpcLf39/0tLSmDlzJvfccw96vZ6nn36aIUOGdIunVqtRKBQkJiZi
      tVq55ppruO666zhw4AAOh4OMjIyT5ofNZsPr9Ur5MXDgQKqrq3uEO908Cg0NxWq10t7ejk6n
      A6C+vp7+/fufUIdNmzbxwQcfMHjwYMrKyqR8AwgICEChUODn53fS5+iNzMxMgoKC2LFjB5s2
      beK99947YxknY8uWLUyYMAGAvXv3EhMTg8/nIyYm5pymIyNzsThrL6CHHnqI3//+91x99dVS
      5ezv7y91wxMSEti3bx9CCAoKClCr1ZhMJoKCgiQvl7a2Nkme1+vF6XTS0tIiVULJycls374d
      6KjQoGOrit4mnWfOnMm7776LzWbD5/NRVlbGoUOHUCqVvPXWW9x9991SWI1Gg9VqlbxZ4uLi
      uPbaa3n//ff55JNPuO6660hKSmLjxo0cOnSIXbt2SXETEhLYu3cv0FE5dBq3zuc/nri4ONLT
      0/nnP//JkiVLePrpp2lqamLBggV8/vnnTJ8+/YQTnC0tLezdu5ekpCRMJhNjxozhqaee4qqr
      rjrlcIfBYMDPz4/Dhw8jhGDfvn2Srl3z8ER5dDxGo5GUlBQ++ugjoMMrY/PmzdJEbW/lt2bN
      Gh599FGee+65bpV/bxxfJie7p1AomDt3Li+//DIJCQlER0efVPaZUFlZyYYNGzh27BjQMRnd
      2NhIQ0PDOUtDRuZic1Y9gNMZa509ezb//ve/mTt3Llarld/97ncoFAruuusu7r//fsLDw3G5
      XGRkZODv709SUhJXXXUVoaGhtLe3A3Dvvffym9/8hq+++gqFQsHq1asZPXo07733Hvv27eOp
      p55ixIgRANxyyy2UlJQwbdo01Go111xzDbfddhtVVVUsWLCAwMBASbekpCT8/PyYNWsW8+bN
      4+6772bRokV89tln2O127rnnHmbOnElRURGvvvoq/fr1k+LeddddPPTQQ3zxxRe0tLTwxhtv
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Delivery Times by Month' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='228' name='Distribution of Payment Types' width='384'>
      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
      rxcSfYQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='148' name='KPI (Deliveries)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAACUCAYAAACa9/6GAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASWklEQVR4nO3de7CV0x/H8XdK6aaopKsKYbpIEoWKSEUil1xCIZcYTIXRYAoVaSSEiIxI
      TC6DbpIuUqmIStTUSEr363RT6fz+MJ9Zv711OpfOZZ+zPq9/nunss5+99rP3aX2/a33Xeoqk
      paWlYWZm0TkqvxtgZmb5wx2AmVmk3AGYmUXKHYCZWaTcAZiZRcodgJlZpNwBmJlFyh2AmVmk
      3AGYmUXKHYCZWaTcAZiZRcodgJlZpNwBmJlFyh2AmVmk3AGYmUXKHYCZWaTcAZiZRcodgJlZ
      pNwBmJlFyh2AmVmk3AGYmUXKHYCZWaTcAZiZRcodgJlZpNwBmJlFyh2AmVmk3AGYmUXKHYCZ
      WaTcAZiZRcodgJlZpNwBmJlFyh2AmVmk3AGYmUXKHYCZWaTcAZiZRcodgJlZpNwBmJlFyh2A
      mVmk3AGYmUWqWH43wMzsSC1duhSAX3/9FYC2bdsCcMwxx2TpPPv27QNg9+7dAJQqVQqA4sWL
      50g7U40zADOzSDkDKCB27NgBwDXXXAPAP//8A0DTpk0BePbZZ/OnYXlswYIFADz33HOHfPyE
      E04A4JRTTgGgQ4cOANSuXTsPWpc65s6dC8ALL7yQredffPHFANx111051qbD+fvvvwF45513
      AJg4cSIA69evB8Ln2aRJEwBatGgBQKNGjQCYMWMGAMOHDwfg/PPPB7KeAUyYMAGAp59+GoAH
      HngAgFtvvTVL5ykonAGYmUXKGUABMXPmTAC2bt0KQLVq1YAQ+SSPWRZWO3fuBGD58uUAnHTS
      SQBUqFABgMWLFwMwa9YsAMaMGQPAww8/DMDVV1+dd43NR8WK/funfdxxxyX8fNeuXQAsWbIE
      gOrVqwNQpUqVhN8rW7ZsbjcxwYABAwAYN24cAFWrVgWgXbt2AGzatAmA0aNHA/Dbb78B8Oqr
      r+ZoO/R96tixIxAyj8LKGYCZWaScARQQ06ZNA6BcuXIA3HvvvQA8/vjjAMyZMwcIY7ex6Nq1
      KxDG+tPS0gD44osvAOjfvz8AgwcPBqBly5YAHH/88XnZzDzXuHFjAF577bWEn//yyy8A3Hbb
      bUCIdLt165at19H1LlKkSLaer7msr776CoCaNWsC8PHHHx/yvCtXrgTgu+++y9brZURzCjoW
      ds4AzMwi5Qwgxakuefbs2QC0atUKCFUORYsWBUKGkJwBKOIbNmwYEKqIWrdufcjXe/vttwGY
      P38+AC+++CIQ6qBVZ/3WW28BsGLFCgBKly4NhKokRWoDBw4EoESJEpl6v0dKEeOVV14JwPbt
      2wEYOnQoAB988AEA9913HwB//fUXAKNGjQJg0aJFAGzZsgWAE088EYDLL78cCBGzxtgXLlwI
      wOuvvw6E+nO9frJPP/0UgMmTJwPw5JNPAuH6KWL/8ccfgTC3U7lyZQAuueQSADp37pzhtchJ
      itRHjBgBwPjx44FQpXPqqacC0L17dyBU6WREn8/+/fsBaNiwIZB+RlGrVq2EY3rmzZsHwNdf
      fw2EuSE9T5lj8+bNE56nuYWXXnoJgNtvvx0I1UcQKoSOOurf+FlZ+aRJkxLOdeGFFwLw4IMP
      Ann3N5AVzgDMzCLlDCDFaWx/z549AFxwwQVAqNI488wzgVAlpEhNmcHJJ58MhMhWUUtyBnDw
      4EEgRMiKlBT5KzJS5KRopk2bNkCIYKdMmQLAmjVrADhw4EDC7+e1G2+8EYA33ngDCNdBfv75
      ZyBUUymzOvbYY4GQeSmT0dzBRRddBMDpp58OwLJly4DwvjUnkRzJvv/++0C43sowlAkosr7i
      iiuAUA2jTEtVTXmdAWjdxSeffAKE74cyHWU0PXv2BGDIkCFAiILTo+up96n3r2q2q666CoC6
      detmqb1PPfUUEDJS/d2onZoT0vsRrbfROgq9/v9TNqHPpEGDBkD4TnzzzTcAfPTRRwDs3bsX
      CJ9xKnEGYGYWKWcAKU5j+4rcmzVrlvC4IhuNGet4zjnnAGElpMZkFaEr0lGkq+dpncHdd9+d
      8DpaYanMQis269Spk/B7aqfG1PObxuq1bmLVqlUJjysTuuyyy4DQfrnjjjsSHtdKUUV7ypAU
      Keq6fP/99wCcd955QNirRnMjmoMQZRCqy3/iiSeAcL1FcwJ5ZcOGDQB89tlnAJx99tlAmPNQ
      hqP3o+ukjCujDEAUkauqTdGzjvqe3XDDDUC43smflyhTSp4rOProo4FQZaTve/J6icyoV68e
      ACNHjkz4+UMPPQRAp06dAPjyyy8BeOSRR4Csr07OTc4AzMwi5QwgRWmMWGPTWqGoiEVHRYwy
      ffp0IGQAoshMlQrffvstEKpbNG6piDN5jkARav369YH/Rv6pTitgk1e4KkPQ3jO63hs3bgRC
      FZY+D1W9JLv22msBePfdd4EQYSoD0PkVseq6i6pR9HzNIej5elyZR17Rimu9f1WhJc9tqBJG
      6w9++umnhOelF6mLxvgVuWvPJ31fNXavFcOak+rTp88hz6c5qWQ5ucI5OTsTvVdl53pPa9eu
      BVJrXypnAGZmkXIGkKIUQW3bti3hqDr+9CgD6N27d8LPNXegCEgRf/v27QGYOnUqEKomksdE
      FclpTLig0Ji/IvfkdRJvvvlmwlGPq95eewy98sorh30dVfNopbEyCV0vRbKK6LVrqWjXSVWU
      6PNQFdjnn38OhKojrdfI7X3qlQFJepF18uOq/tJK4cxS9Ky5Bh11fbQ7qeYkevXqlaXz56Xk
      vyFlm6nEGYCZWaRSr0syIFT/iOqay5cvf8jfV6WB9lTRmL3GVlX9oDFkjUmrWkVj3j169Djk
      +TXmr99XBqGIWesPdJ70KCJURqGx5IzGiLNKGZNWber1kjMo1YGfccYZAAwaNOiQ59PYfEZU
      n68Ivm/fvkDIBFQnn0wRsz4fHXW9tAJX1ViqRdeYe25JHq/WHjzJK53Vfn0/NDeV3ji56HNa
      vXo1EOaYkpUpUwYI339dF60gTiVqm7JArYFRJVoqcQZgZhYpZwApShmA6pg1Vp8eRRnKAPT8
      5BWUWrmrMWVFvBpLTq/KRHu8aL2Aapq1glP16Yro0qPXVWTepUsXINROZ5XG1pXxaG8fVZFo
      vcNNN90E/Lc66rTTTgPCCmFdP0WuWpmqqhPVfqdHe8YoY9KKUq23SG+PnOuuuw4I11/nUTv0
      fqRixYqHbUdOUfWZ5i70vdKqVv187NixQPgeZHalsipjtMJcGY3evyJ/fe90PTWnpcfzg75r
      mo8oWbIkEO5poH249N5yOsvNCanXIjMzyxPOAFKM9hdRdJHZe5Fq/3JFmhp/TL6nqyJgVSio
      Skb13elFVDq/qk+03/7mzZsBOOuss4BQN66oKLlePPnfGpvPLlXJ6KjqGo0lqz4/vchbGUi/
      fv2AUFeuORPt7lmjRo0stUsRsPYQ0nnSq9rRillF0slzDnqeqmG0b35e0VyGro8yIx31ud5y
      yy1AyGgyorkCrfBV9KyIXxQ96zrqDm/Jj0t6u4km/zyj5x3uPgfKLnU/bs2DqNpH34G8uq9y
      djgDMDOLVJG0rBbqWqGgqhTtVKjqCmUQyZKjm2SqAtIKVp1X1UKpTplI8r2Gs7uLqSJ47Suv
      e9lmtKulqlo0Nq7rqEg5Ve75rHUV69atA8Kus0c6Jq//jnQ/huT7IeT2uofMUGSvNQ/aF0l/
      U2qrsshU5gzAzCxSngOIVPJK1Iy8/PLLQIjotUJT+7lrDF5R0PXXX58j7cwrGgvO6r7zovsK
      qEpFu6EqI8rseRU15vUYf1YpytUxp2jMXSuwdUxlykqS9+UqCJwBmJlFyhmAZYr2CNI9gXUH
      sp07dwJhLxzdQ1X76MdCK4pVJ6+qKt0P1iwVOQMwM4uUq4DMcoCqoHJrbyOz3OBvqZlZpJwB
      mJlFyhmAmVmk3AGYmUXKHYCZWaTcAZiZRcodgJlZpNwBmJlFyh2AmVmk3AGYmUXKHYCZWaTc
      AZiZRcodgJlZpNwBmJlFyh2AmVmk3AGYmUXKHYCZWaTcAZiZRcodgJlZpNwBmJlFyh2AmVmk
      3AGYmUXKHYCZWaTcAZiZRcodgJlZpNwBmJlFyh2AmVmk3AGYmUXKHYCZWaTcAZiZRcodgJlZ
      pNwBmJlFyh2AmVmkiuV3A8xy0t69ewGYMWMGAH/88QcAa9euBWD//v0AVKlSBYA6deoA0Lp1
      awCOPvrovGvsYfz+++8ATJ48GYB27doBUKNGjSM67/bt2wGYNGkSAMuWLQNg/fr1ANStWxeA
      Ro0aAXD++ecDcNRRjhULoyJpaWlp+d0Is+zavXs3AEOHDgVg4sSJAOzatStL56lUqRIAjz32
      GAAtWrTIqSZmyrp16wB44403APjyyy8BOHjwIADPPPMMAG3bts3W+adMmQLAc889B8CWLVsS
      Htd/8Ho9admyJQD9+/cH4JhjjsnW61tqcrduZhYpZwBWoK1atQqATp06AVCuXDkArrnmGgCa
      NGkCQPXq1QEoVaoUAH/++ScAn376KQCff/45ACVKlADgrbfeAuD000/PlXZv3boVgJEjRwIw
      duxYAPbt23fI389uBrBw4UIA7rzzTiC8v/vvvx+ASy+9FIAyZcoAsHjxYgAGDx4MhCEiDQmN
      GDEiS69vqc0ZgJlZpDwJbAVa2bJlgTB2f8UVVwAh0k1P+fLlAWjQoAEAJ554IhDG4MeNGwfk
      fAagyejOnTsDYQ7j+OOPB6Bbt24AFC1aFIBBgwYBUKRIkSy9jhL7fv36JfxbcyWNGzc+5PP0
      c12HHj16APDTTz8BMGvWLACaN2+epfZYanIGYGYWKWcAVqAdd9xxQBjzz64OHToAIfJdunTp
      kTUsHXv27AFChK8I+8YbbwSgZMmSAHz22WdH9Dpr1qwBQhmsylzTi/yTaU7gnnvuAeCBBx4A
      YNSoUYAzgMLCGYCZWaScAZgBK1euTPj3Kaeckiuvo2okVR1pDiOnqXpH6tevn63zNGvWDAjt
      njdvHgA7d+4EQqZgBZMzADOzSDkDsKht3rwZCNUx0qpVq1x5veLFiyccc4vmGiS7Wzmo+kjr
      KVavXg2Elcu5lSlZ3nAGYGYWKWcAFhWNXY8fPx6A9957D4C//voLCNUuTZs2zYfW5ZzkyFwr
      gm+++eZsnU/rJMQZQOHgDMDMLFLOAKxQUSSvev5NmzYBsGHDBiCMYWvPHW1/PGDAAADatGmT
      d43NRbVr1wagYsWKQNgNVNtkZ3a3U60gTt4yTBmAFWzOAMzMIuUMwAoV7a2j/fQzctZZZwH/
      HeMu6FRl1KdPHwB69uwJQK9evQDo2LEjEFb0ai8i3RhG6wh0QxplVpLVvYksNTkDMDOLlDMA
      K1RUlTJt2jQAtm3bBoQ7YGlvnKlTpwLhfgAffvghAF26dAHgwQcfBAp+pKux/oEDBwLw/PPP
      A2GvoYz2HKpZsyYQ5kqUGeiWmlawOQMwM4uUMwArlLRHjY7ay6Zhw4ZA2P1TY9u9e/cGwroA
      Rf7KBAo63flLY/6689fy5csBOHDgABCqh2rVqgWEm9APGTIECBlA1apV86DVltucAZiZRcoZ
      gEVNkeybb74JhHUAEyZMAMLK4II+FyClS5cG4Nxzz004ZmTJkiUJ//YcQOHgDMDMLFLOAMwI
      kbHWBcyZMweAVatWAXDSSSflT8PymeYIdE/gevXqARnfc9kKBmcAZmaRcgZg9n82btwIhP3z
      K1WqlJ/NyXeqipKuXbvmT0MsVzgDMDOLlDMAK9AeffRRACpUqACE/e6rVauWqedrl8vhw4cD
      sGLFCiCsFyhVqtQhnzd37lwAfvvtNyBUxajePlVonUOxYv/+qZ9wwgmZet6wYcOAsKdSnTp1
      gNy7U5rlD2cAZmaRcgZgBdqOHTuAsN/92LFjgXBHL61sVUagXTK16+XXX38NhD2CtHK4b9++
      h33d6dOnA2EPIWUMGWUAo0ePBmDlypWH/b3kx8eMGQPADz/8cMjfVxVT8srl+fPnA9C/f38g
      RPBqb+XKlYFQ7TR79mwAFixYAIRdUnW/hMKyHsL+5QzAzCxSzgCsQNPullq5q909VcevY3pU
      7dO+fXsAunfvDoQ9cNKjMfWsmjlzJhDmEDJr0aJFCcdkGttPzgA0dq9MSJmSjskU4Tdp0gQI
      kb/uF2CFizMAM7NIFUlLvtmnWSGg+wDo3rW6J7AiXFXtaG6gZMmSed3EfKG5BY35a92DrkeD
      Bg0AKFu2bN43zvKcOwAzs0h5CMjMLFLuAMzMIuUOwMwsUu4AzMwi5Q7AzCxS7gDMzCLlDsDM
      LFL/A9MlCFbk4gmoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='KPI (Reviews)' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='138' name='KPI (Sales)' width='384'>
      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
      Us4AzMwi9T/UyUvsb4uomQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Number of Orders per Month' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXwb533v+w8WAiRBEtz3RaQWihK176R2K7LkLYmdxEmazY2TNEnbNG1z
      enrT297e257T3nObtqdJYzdxEidp4zhxnNixLFu7ZJKSKFGiZJHiKkqQuIDgDhDrYO4fNBnJ
      2iiJwADE7/166SWQBGZ+HD6YL2bmmefRqaqqIoQQIubotS5ACCGENiQAhBAiRkkACCFEjIr4
      APD7/Zqs1+v1arLeWCPbOTwCgQCBQEDrMmJGtLTriA8AIYQQoSEBIIQQMUoCQAghYpQEgBBC
      xCgJACGEiFESAEIIEaMkAIQQIkZJAAghRIySABBCiBglASCEEDFKAkAIIWKUBIAQQsQoCQAh
      hIhREgBCCBGjJACEECJGSQAIIcQsojL9ad6NoSrC5XJx8uRJABISEliwYAFnzpxBr9dTVVWF
      3W6npaWFyspKsrOzqampwWAwsGHDBnQ6XajKEkKIWWtwfIB/OvQ/2VS2lV0Vj931+SELAIvF
      wrZt23A6ndTX19Pe3s7q1auxWq0ANDY28uijj/LGG29QUFBAWVkZ4+PjtLa2Ul5eHqqyhBBi
      1ro6fIVLA+0YdHq2z9+JyWi64/NDFgCT6urqqK6uprm5mXfeeQeTycRDDz2E2WxGp9NhNptx
      OBysWLECn89HXV0d5eXlU1NBKopCMBgMdZk3URQlaqZ1i2ayncNj8j2kKIrGlcQGrdp1W18L
      AFdHbHT2d1CaXnbH54c0ALxeL4qikJiYyKpVqwA4ffo0NpttqkEGg0HMZjMejwe3201CQgIA
      cXFxU8u5/nG4eL1ezGZz2Ncba2Q7h8fkfMBGY8g/8wm0addBNUj7QCuJcYmowPm+MyzMq7jj
      a0J6EfjEiROsX78egIaGBo4cOUJHRwdZWVnodDqOHDmC2Wxm6dKl7Nmzh/3797No0aJQliSE
      ELPSsHuI3rEe1s3ZyILshTTY6nH5nHd8TUg/DmzevHnq8cqVK/H5fBiNRvR6PTt37sTj8RAf
      Hw/A448/jk6nk08oQghxH/qddgZcDhbnLiEQDPD9un/n0kAHlXnLbvuasHYDNZlM6PW/W+Xk
      zh8mTvPIzl8IIe5Ph6MNs9FMYWoRC3MWkZqQyvHLtXfsFir3AQghRJRTVZUWexOZSVlkWrLI
      smRTnr2Ipp5zDI0P3vZ1EgBCCBHlRr2jdI9coyRtDokmCzqdjg1zNtLv6qetv+W2r5MAEEKI
      KOdw2nG47CzMXjz1vblZC8hNzqPu0jGC6q270ksACCFElOsa7ESHnuL0OVPfs8ZbWZq/nLb+
      FvrGem/5OgkAIYSIYioqF/sukJk0ce7/emtKNuDyOWnqPXfL10oACCFEFBv3urANX6HAWkiS
      OfmGn5WklVKUWsLxrlr8iv+m10oACCFEFHO4+nG4+lmYveimgTQT4hJYXbyOS4MdXBux3fRa
      CQAhhIhituHL+BU/pZnzbvnz5QWr0KHjzNVTN/1MAkAIIaLYxb4mMi2ZN53/n1RgLaQ0Yy6n
      bCdx+8dv+JkEgBBCRCmP30PXYCe5yfmkJqTe8jlGQxzr52zk6vAVugYv3fAzCQAhhIhSk+f/
      y3Mq0OluvztflFNJsjmZk5drb/i+BIAQQkSp7hEbLp+TeZl3nkQrOzmH+VkLOd/TyIh7eOr7
      EgBCCBGlWuzNpCdmkp2Uc8fn6XV6quZsom+sl3ZH6+++H+oChRBCzDy/4qPD0UZOUg5piel3
      ff68rAVkJ2VTd+kYqjoxQqgEgBBCRKEBl4N+p5352Qsx6A13fX5qYhqL85bS0t9Mv7MPCGEA
      uFwuDh06xKFDhzh+/Dgej4eDBw/S2NgIgM1mY//+/fT29hIMBjl27Bi1tbVTySSEEOL2ekd7
      GPWMsCBr4bSer0PHupJqRt0jNPddAEIYABaLhW3btrFmzRrcbjc1NTWsX7+e0dFRRkZGaGxs
      5KGHHuLUqVM0NjZSVlZGVlYWra2td1+4EELEuNb+ZqwJqeQk5037NaXpZRSkFlHX9Q6BYCC0
      U0IC1NXVUV1dTW1tLYmJiRQVFWG32zGbzeh0OsxmMw6HgxUrVuDz+airq6O8vBy/f2LcCkVR
      piaQDydFUfB6vWFfb6yR7Rwek+8hRVE0riQ2hLpdK6pCi/0iGYmZJMclT3tdBowszV3Bwfa3
      uey4FNoA8Hq9KIpCYmLiVMNzuVxYrdapBhkMBjGbzXg8HtxuNwkJCcDEFJGTrn8cLl6vF7PZ
      HPb1xhrZzuERCAQAZNrVMAl1u+532nE47awp2YAlIemeXru2dAP72t6kyf5uaC8CnzhxgvXr
      1wNQVlbGm2++yYULF8jPz0en03HkyBHMZjNLly5lz5497N+/n0WLFoWyJCGEiHr2sV4Gxwco
      z66459cWphYzJ72M+it1oT0C2Lx589Tj+fPnU1xcTFxcHHq9np07d+LxeKYmhn/88cfR6XTy
      CUUIIe6izdGKxZxEfkrBPb/WZDCxrqSK/zr9YuivAVzv/YdEkzt/0OY0jxBCRJugGqTV3kSm
      JYvMpKz7WkZl3jISTYlyH4AQQkSTYfcQvaM9lGXMw2yMv/sLbiE3JY95mQskAIQQIpr0O+0M
      uByU59z/9VK9Ts+GOZskAIQQIpp0DrRjMpopSi1+oOUsyF4oASCEENFCVdX3JoDJItNyf+f/
      J6UnZkgACCFEtBjzjtI9cpXitBISTZYHWpZOp5MAEEKIaOFwvjcBfM7iGVmeBIAQQkSJrsFO
      dEBJeumMLE8CQAghooCKykX7hRk5/z9JAkAIIaLAuM+Fbegy+dZCks0pM7JMCQAhhIgCvzv/
      vwidTjcjy5QAEEKIKGAbvoJP8VGWMX/GlikBIIQQUaDF3kSGJYuspOwZW6YEgBBCRDiP38Ol
      gQ5yk/OwJqTO2HIlAIQQIsINuCbO/5dnL0Kvm7ndtgSAEEJEuO7Ra7h8TuZlLZjR5YZ0PgCb
      zUZbWxuFhYVkZmZy5swZ9Ho9VVVV2O12WlpaqKysJDs7m5qaGgwGAxs2bJixK9xCCDEbtPQ1
      kZ6YQXZSzowuN2QBEAwGOXfuHI8++ijBYJBTp06xevVqrFYrAI2NjTz66KO88cYbFBQUUFZW
      xvj4OK2trZSXl4eqLCGEiCp+xU+7o43spBzSEzNmdNkhC4DR0VG6u7t54403yM3NxWAw8M47
      72AymXjooYcwm83odDrMZjMOh4MVK1bg8/moq6ujvLwcv98PgKIoUxPIh5OiKHi93rCvN9bI
      dg6PyfeQoigaVxIbZrJd25299Dv72Fi6hYA/QIDAjCwXQhgAZrOZhQsXsmnTJvbu3cuuXbsA
      OH36NDabbapBBoNBzGYzHo8Ht9tNQkICcOMUkVpMF+n1em+awlLMPNnO4REITOw0ZM7t8JjJ
      dj3gcDDqGaEir3LG3yshaw0JCQkMDw9TW1uLyWSioaGBsbEx+vr6qKiooKWlhSNHjmA2m1m6
      dCl79uxBURR2794dqpKEECLqtNovkpKQSm5y/owvW6eqqjrjS73O+Pg4iYmJAPh8PoxGI3r9
      ROcjj8czNTG83+9Hp9Pd9AnF7/fLEcAsJts5POQIILxmql0rQYV/2P9/4VcCfHPn/02cYWb3
      hSHvBjq58wcwmUxTO39gaucPE6d5pHEKIcTvDI4PYHf2MS9z/ozv/EHuAxBCiIhld/YxOD7w
      QBPA34kEgBBCRKj2/lYspiTyUwpCsnwJACGEiEBBNUiLfWIC+IwZmgDm/SQAhBAiAo24h+kd
      66E0Yy7xcfF3f8F9kAAQQogI1O+0M+DqZ2F2aM7/gwSAEEJEpM6BNkwGE4WpxSFbhwSAEEJE
      GFVVudg3cf4/Myk05/9BAkAIISLOmHeU7pGrFKWVkGiyhGw9EgBCCBFhHO9NALMwezE6Qjc8
      vgSAEEJEmMuDl1CBOellIV2PBIAQQkSYi30XQn7+HyQAhBAiooz7XFwZuky+tZBkc0pI1yUB
      IIQQEWTq/H/OopBPjysBIIQQEcQ2fAVfwEtZxryQr0sCQAghIkhLXxMZlkyykrJDvq6QB4Db
      7WZyzhmfz8f18894PJ6px4FAYGrSCiGEiEXegIfOgXZyU/JITUgL+fpCOgPL22+/TXJyMunp
      6eh0Orq6uhgdHeXJJ5/kwIEDxMfHoygKlZWV1NTUoCgKO3bsICUltBc+hBAiEjmcE+f/Vxev
      R68L/QmakK3B4/Hg8XhITEykuLiYrq4udu7cSWVlJTabDVVV2bRpEz6fj/Pnz/PII4+wY8cO
      mpqaQlWSEEJEtO7Ra7i8TuZnLgjL+kJ2BOB2u/H5fKSnp/PWW29hsUzczmw2m6fm/wXQ6/Uo
      ioLRaMRsNuPz+YCJuYABFEUhGAyGqszbUhQFr9cb9vXGGtnO4TH5HlIUReNKYsP9tuum7vOk
      JaaTZk4Py/siZAFgtVqJj4+nqKiId999F4PBgNPppKuri9WrV9PU1ISqqrjdboqLi7ly5Qou
      l4v8/HyAGyaCl0nhZy/ZzuEhk8KH1/20a7/ip2u4k+zkXHJSczHoQ/+3CtkpIL1ez8KFC9m/
      fz9Lliyhurqa48ePk5aWRnJyMitWrGDfvn2sWbOGJUuW0NXVxdDQEHPnzg1VSUIIEbEGXA76
      nXYWZJWHZecPIb4IPG/ePObN+11f1h07dkw9LioqoqioaOrrLVu2hLIUIYSIaF2DnYx5R1mS
      tzxs65T7AIQQIgK02JtIS0gnOzknbOuUABBCCI15A146Bzre6/+fHrb1SgAIIYTGBl0O+p19
      zM9aiEFvCNt6JQCEEEJjPaPdOL1jzM8sD+t6JQCEEEJjrf0XscankpOSF9b1SgAIIYSGAoqf
      9v4WspJzSE/MCOu6JQCEEEJDg+OD2J19zMucT5whvDe9SgAIIYSG+sZ6GHYPsSCrIuzrlgAQ
      QggNtTtasZiSyLcWhH3dEgBCCKERJajQar9IVlI2GZbMsK9fAkAIITQy4h6id6yb0oy5mIzh
      HxRRAkAIITRid/YxOD5IefYidIR2AvhbkQAQQgiNdA60YzaaKUwt1mT9EgBCCKGBoBqkxd5M
      piWLTA3O/4MEgBBCaGLMM8q1kasUp80hIS5RkxpCOh9Ad3c3Xq+X5ORkLBYLPT096HQ6ioqK
      cLlc9PX1kZ+fj8VioaurC71eT3Fx8dR0kUIIMVv1O+0MuBw8tuhDmu3zQnoEcPr06anHLS0t
      OJ3Oqa9ra2sxm83U1tbS2dmJw+HAZrPR3d0dypKEECIidA12otfpKEmfo1kNIT0CcLlcDAwM
      kJaWxvj4OADx8fEYDAaMRiMlJSW0trbS1dXF1q1b8Xq9NDQ0UFBQMDV5dTAYnJrPNJy0Wm+s
      ke0cHpOTwsu2Do/ptOuLfU1kJGaSFp+h2d8lpAHw8MMP43K5OHLkCA8//DBOp5P6+nqsViuq
      qgKgqio6nQ5VVQkGg+j1cllCCDG7uXxObMOXKUgtJsmcrFkdIQsAt9vN1atXSUpKIjExkatX
      r2I0Gqf+BQIBurq6UFWV0tJS6uvr8fl8lJdPjIdtMExMihAMBjEawzNB8vUURdFkvbFGtnN4
      TH7ClG0dHndr10Ojgwy4HGxfsFPTv0nI1mw2m0lJScHr9VJdXY3f78dut1NRUUFGRgbV1dX0
      9vZSXV2NxWJBVVX0ej05OeGbD1MIIbRwZegyATVAacZcTesIWQDo9XpKSkpu+J7Var3h8fVf
      l5WVhaoUIYSIGKqq0mKfOP+fbdH2A6+ccBdCiDDyBDxcHrxEXko+KQnWu78ghCQAhBAijAZc
      /fQ77ZRnV6DXabsLlgAQQogwujZiw+N3MzdzvtalSAAIIUQ4tdibSUtMJzs5V+tSJACEECJc
      fAEvnY52cpLzSEtI17ocCQAhhAiXgfEB+p125meVY9AbtC5HAkAIIcKlZ/QaY95R5meVa10K
      IAEghBBh02a/SEq8ldyUPK1LASQAhBAiLAJKgDZHK9lJOaQnZmhdDiABIIQQYTHkHsA+1svc
      zAXEGUxalwNIAAghRFj0jfUy7B6iPLtC61KmSAAIIUQYtPe3YjElkWct0LqUKRIAQggRYkpQ
      oaW/maykbDIStZkA/lYkAIQQIsRGPMP0jvYwJ70Mc5xZ63KmSAAIIUSI2cf6GBofoDxnETq0
      mQD+VkI6FU13dzder5fk5GRSU1Pp6uoiKSmJ3NxcRkZG6OvrIz8/H4vFQldXF3q9nuLiYnS6
      yNlAQgjxoDoH2jEZTBSlFmtdyg1CegRw+vTpqcdnzpwhEAhw9uxZ3G43tbW1mM1mamtr6ezs
      xOFwYLPZ6O7uDmVJQggRVkE1SIu9icykLDItWVqXc4OQHgG4XC4GBgZIS0tjeHiYNWvWYDQa
      6enpwWg0UlJSQmtrK11dXWzduhWv10tDQwMFBQUoigJMzAk8OZ9pOGm13lgj2zk8gsEggGzr
      MLm+XY95R7k2cpWy9HmY9OaI+huE9Ajg4YcfJjc3lyNHjqCqKjCxYfR6/dTXqqqi0+lQVXXq
      Z0IIMVv0O+0MuByUZy/SupSbhOwIwO12c/XqVZKSkkhMTCQtLY2mpiY6OzvZsWMHTU1NdHV1
      oaoqpaWl1NfX4/P5KC+fGCTJYJgYKS8YDGI0hvRA5ZYURdFkvbFGtnN4TH7qlG0dHte3a9vI
      ZfQ6HaUZZRG3/UNWjdlsJiUlBa/XS3V1NSaTic7OTlatWkV8fDzV1dX09vZSXV2NxWJBVVX0
      ej05OdpOkiyEEDNFVVUu9jWRYckiMylb63JuErIA0Ov1lJSU3PC9BQsWTD22Wq1Yrb+bELms
      rCxUpQghhCZcPhe24csUWItINidrXc5N5IS7EEKEiMPVj8PVz8Lsiojs3i4BIIQQIWIbukxA
      CVCaMU/rUm5JAkAIIUJAVVVa7E1kWDLIisDz/yABIIQQIeEJeOga7CQ3pQBrQqrW5dySBIAQ
      QoTAgKsfh8tOefZC9LrI3NVGZlVCCBHlro1cZdznZm7mgrs/WSMSAEIIEQKt9mbSEtPJScrV
      upTbkgAQQogZ5ld8dAy0k5OcS2pimtbl3JYEgBBCzLAB1wD9Y33MzyrHqI+s4R+uJwEghBAz
      rHesmzHvKPOzyrUu5Y4kAIQQYoZ1DLaREm8lNzlf61LuSAJACCFm0LhvnNb+ZrKScki3ZGhd
      zh1F7skpIYSIIn7FT4u9iT1Nr9E50M5jiz+EyWDSuqw7kgAQQogHEFD8tDlaeOviHs53nyE1
      IY0nlzzNQ+UPa13aXUkACCHEfQgEA3Q62nj74h7OXjtNcnwKjy9+ko1zt5JsTMFsNmtd4l3d
      UwAEAgEURcHr9ZKSkjKt10xO/XiroVADgcDUDDmTc5bKlJBCiEimBANcGuxk38U9NFw9RWJc
      IrsqnmDz3G1kJWWj0+nwer1alzkt0w6A0dFR6urq6O/vp7u7m6997Wt3TThVVdm7dy+LFy8G
      oKmpCbPZTFVVFU1NTQwPD5OVlUVpaSk1NTUAbNmyJSqSUwgRW5SgwpWhLva1vMkp2wnMBjM7
      ynexZe5D5CTnRuR4/3cz7QBwu910dXURCAQoKirC7XbfdUfd1taGyWTC7XbT399PZWUlubm5
      GI1Gent72bVrF3v37mVsbIy1a9cyPj5Oc3Mzy5cvf+BfTAghZkIwGMQ2fJn9rXs5ebkOo97I
      1nkPsXXeB8hLyUMXoQO9Tce0AyAtLY2srCzWrl3LwMDADdM53orH46G1tZXy8nI8Hg/5+fnY
      bDbq6+vZvXs3RqMRnU6H0WjE6XRitVpJSEigvb0dAL/fD0xMrjx5eiicJk91idCS7Rwek+8h
      RVE0riR6qGqQayNXOXrpICev1AGwoWQjm8u2k59SiE6nw+fz3/K10dKupx0AgUCAnp4ecnJy
      KCwsvOvzh4aGMJlMNDc3oygKO3fupLS0lIaGBvr7+/H7/aiqit/vJyMjg4GBAcbHx0lLmxg3
      Iy4ubmpZ1z8OF6/XK6eiwkC2c3gEAgGAqWtu4vaCapCe0W4Ote2j9tJRgmqQdSVVPLTgYQpT
      i6c1tHO0tOtptwZVVenu7ubb3/42JpOJL37xi3fcMefl5ZGXl4fdbsfr9WKz2ejp6cHn87F0
      6VL6+/s5ePAgxcXFlJWVcfToUQC2b9/+4L+VEELcI1VV6R3r4Uj7ft7pPIJf8bGmeAM7Fuyi
      KK0Eg96gdYkzTqdOdtO5C1VVOX/+PE6nk7S0NBYuXHjPFz0URUGv10+97vpeQIqioNPpbuoF
      5Pf75QhgFpPtHB5yBHB7qqrS7+zjSMdBjnUcwu13s6poLR8o382c9LL72vFHS7uedmtwOBzU
      1NSg1+uxWCwUFxdjsVjuaWUGw40b8vrG+P6fCSFEKKmqyoCrn2OdhznSfgCnz8mKgtXsXPgI
      pRlzI3oUz5ky7d9w8pP52NgYQ0NDmnwqF0KIB6WqKoPjA9RcOsLhtv2MeEZYlr+CnQsfZV7m
      AoyG2b/jnzSt3zQQCGCxWKiqquLy5cvMmzdPAkAIcVcqKkPjg/gCPiwmC3FGE3H6uIlTwYS3
      37yqqgy7h6jtOsah1n0MuQeozFvGswsfZX7WQuIMsbdPm1YAnD9/nsOHDzM0NERWVhYnT57k
      b/7mbyQEhBC3FFSD9Dv7OHm5jqMdB3H73SSaLJgMJuIMJhLiErCYkrCYLRP/m5KwmCYeJ5oS
      MRnMxBniMBknnj/5ujhDHAad4Z6uP6qojLpHON5Vw4G2t3A47SzKXcJn1z5Lec6iiB+wLZSm
      FQArVqwgPz+fgwcP8olPfIIf/ehHjI+P3/VeACFEbAkofi4PXeKdziOcsp1k3Oci31rI/KyF
      6HV6XD4nLp8Ll8/JsHsIn+LDr/jwBd77X/GhBBWMhjhMhrgbdv6m9wIgPi5hKiwsJgsW8+8C
      JNFkwWw0Tz0/EFRosTdxsPVtesd6WJi9iE+u/CyLcisxGSP/Im2oTftkV0ZGBiMjIzz33HN4
      PJ57vgAshJi9xn0uLvY1cbj9AM197xJniGN5wSo2z91OWcY8TMbffcpWVRUlGMCn+Kd2+tf/
      7w34GH8vJFw+Jy7vdY99Ljx+N2Oe0Zte51N8BJQABr1hKjQUVcEX8LIgu4KPLP8ElXlLMRvj
      NdxSkeWehoIoKSmhqqoKi8Ui3cmEiHGTF1PPXD3Fsc5DXB7sIispm10Vj7F+TjV5yQW3HNxR
      p9NhNMRhNMQBife8TkVV8F8fHoEbw8Ptd00dZYz7xpmTXkZl3lLi4xJm6DefPaa9F4+Li6Om
      pgaLxYLFYmHFihUycqcQMUgJKlwbuUpd1zFOXK5laHyA0vS5fG7dF1iWv5LUhLSQDYym0+kw
      6owY9UYSZIf+wKYdADqdju3bt6MoCmNjY0zz/jEhxCzhDXho72/lSMdBznWfIagGqcxbymfX
      foEFWQtlhxyFphUAwWCQvXv3cunSJXQ6HStXrpQbt4SIAaqqMuYd5Vz3WY60H6DD0UpKvJWN
      ZVupLt1MUVpJTNwwNVtN6y/X0tLC6Ogozz77LIFAgOeff56VK1fKhWAhZqmgGsQ+1svJy3XU
      dh2jd7SbwtRiPrri91hdtI5MS1ZUjn8vbjStANDpdASDQVRVnfonhJh9/IqfrsFOjnUe5oyt
      nnH/OOXZFTy59GMsyl2CxZwU9hu4ROhMKwAWLFhAW1sbP/jBD9DpdGzatEk+/Qsxi7h8Tpr7
      LnC47QAX7RcwG8ysKFzNprnbKM2YG9M3S81m0x4NFO48v2+oyGigs5ts5/C41WigqqoyMO6g
      wVbPO52HuTJ0mezkHDbM2ci6kipyU/KnNfa9uFm0tOtpHQE0NjZSWlpKT08P5eXloa5JCBFC
      SlDh6vAVaruOcfJyHcPuIcoy5vH767/E0vwVWONT5fx+jJhWAAwODnL06FHsdvvUfL0f/OAH
      p3Uz2PVHDXeaD2Byyjq5t0CI0PAGvDT3X+BI+wHe7T6LClTmLWPLvIdYkFUuN0rFoGkFwObN
      m8nNzeXSpUsUFhZisVimtaNWVZW9e/eyePFizGYz58+fR6/Xs23bNs6ePcvw8DBZWVmUlpZS
      U1MDwJYtW6Li0EmIaBFUg5ztPsWbTa/TOdhBakIqm+c9RFXpZopSizBIN86YNa2/vMFgYN68
      eRw9epQrV65gMpkoLS296+va2towmUy43W5aW1vZsmUL58+fx26309vby65du9i7dy9jY2Os
      XbuW8fFxmpubp44yhBAPRlVVGq818P26fyc53srHV36aVYVrybBkymkeMf07gXt6ekhNTeXp
      p5/mhRdeYGRkZGoC91vxeDy0trZSXl6Ox+NBVVXi4uJIT09nbGwMo9E4cVu30YjT6cRqtZKQ
      kEB7ezswcfEXJqaKnDw9FE6KouD1esO+3lgj2zm0Ogfa+dHJ75FhyeLZtV8h31oIgM/n07iy
      2S1a2vW0AyAnJ4e+vj5efPFFPB4PKSkpd3z+0NAQJpOJ5uZmFEUhKSkJn8+H3W6ntLQUv9+P
      qqr4/X4yMjIYGBhgfHx8KlSu7/kjvYBmL9nOodM72s1PG36AQafnc2u/SFF6iQziGCbR0q7v
      qRuoz+djeHiYtLS0ae+U7Xb71MY4c+YMRqOR7du3c+bMGYaGhsjJyaGsrIyjR48CsH37dkym
      3/U5lm6gs5ts59AYcQ/z3Zp/5fLgJb688Wssyl4CyKTw4RIt7XraAeDxeOjr66OkpOS+VxYI
      BDAYDLfsBaQoCjqd7qaLyxIAs5ts55nn9rv50Yn/4JTtBJ9b+wWqy7YQVCZOo0oAhEe0tOtp
      97lUVZWf/OQn9PX1MTQ0dF/DQUye97/+60kGg0G6gArxgPyKn9+c/yUnr9TxoSUfoap0k9zM
      JW5r2i0jGAySlJTEq6++yq9+9SsURQllXUKIe6QEFQ62vs3bF99g67wdPLzwUeniKe5o2q0j
      MTGR1atX43K5yMzMlOGghYggqqpy6spxftn4M5YVrOQjyz8uc96Ku7qnbqCdnSYqcCYAACAA
      SURBVJ0Eg0EcDgcLFiwgOTk5lLUJIaZBReWivYmfnPoBxWklfHrN57GYkrQuS0SBaQdAcnIy
      Q0NDDA0NkZCQQEKC3DYuRCS4Omzjhyeex2Ky8My6L5GemKF1SSJK3FMAbN++nebmZlavXi29
      CYSIAAMuBz888RzjvnH+cNPXKUgt0rokEUWmfRF4eHiY1157DYvFwi9+8Yup4WWFENpweZ38
      5NQPsA1d4TNrfp/y7EUyWYu4J9MKgNHRUbq6usjNzaWyspKUlBS5lVwIDfkCXn7R+DPOXWvg
      o8s/waqidTK2j7hn0wqAnp4e2traiIuL4+TJkyQnJ0fFTQ5C3EpQDWJ39kXt1KaBYIA3L/6W
      I+0HeLjiMbbN34lBL73yxL2bVgCUl5fzxBNPYDabUVUVk8kUtW8eIU5cruXv3vorXjrzE5xe
      p9bl3JOgGqT20lFeO/8K60qqeKLyKeIM4b9TXswO076SOzAwwNDQEA8//DAgE7eI6OQLeHnl
      7M/wKz72Nr3Oxd4LPL3y01TkLI74UyiqqnK++yz/dfpFFmQt5BOrPkOCTOIiHsC09+IpKSl0
      dHRw6NAhDh06pMkQzUI8qGOdh+kevcYz6/6Ar2z8Ok6fk3869Pf8rOHHjHpGtC7vji4NdvCj
      k98j05LFZ9d9AWt8qtYliSg37SMAp9PJokWLeOyxxwDkTmARdTx+N6+9+wrl2RWsKlqLQW9g
      flY5r55/mbcvvsH5nrN8fMWnWZK/POLGz+kb6+WHx58HVJ5Z9yVyk/O0LknMAtNu5UlJSXR2
      dvLSSy/x0ksvSTdQEXUOtu3D4eznqWUfn7pomm7J4Jm1X+RrW76Bqqr8y5F/5Mcnv8/Q+KDG
      1f7OqGeEF09+j36Xnc+u/QJlGfO0LknMEtM+AjCZTHzoQx+a+lqOAEQ0cfmcvHHh11TmLWNR
      7pIbfqbXG1hRuIayjPm8fuFXHGzdx4Xec3xsxe+xsnCtpj1sPH43P2v4MS32Jj6z5lmW5q+I
      +GsVInrc02igDocDh8PBa6+9Nq3RQFVVveORwvU/CwaDcl1BhMzbF/cw4hnmqWUfv+3pHWtC
      Kp9c9Tn+dNtfEm9M4NvHvsX36/6dfqc9zNVO8Ct+Xnv3VxzvquHxyqeoLtsScaemRHSb9hGA
      wWAgNzcXgISEBJxO5x3nBA4Ggxw+fBi9Xk9GRgZWq5WmpibMZjNVVVU0NTUxPDxMVlYWpaWl
      1NTUALBlyxa5x0DMqFHPCG82v87KwjXMzyq/43P1Oj2VeUsp2fHX7G16jbda9tBsv8BHl32C
      tSVVYetyGQwGOdy+n73Nv2Xz3G3srngcowztLGbYtFuUoij09vYCsGHDBqxW6x2fr9PpqKqq
      YmxsjLNnzzIyMkJlZSW5ubkYjUZ6e3vZtWsXe/fuZWxsjLVr1zI+Pk5zczPLly9/sN9KiOvs
      aXoNj9/Nk8uenvbpk2RzMh9Z/kmWFazkpTM/5fnaf6Phaj2fWfMs1oTQ9r5RVZXTV0/yizP/
      xdL85Xx0+e9hlqGdRQhMKwAcDgdvvfUWMNE4+/v7qaqquuO9ADqdDpvNxsmTJ1m5ciVmsxmb
      zUZ9fT27d++emh3MaDTidDqxWq0kJCTQ3t4OTEwFCRPBo8WpIUVR8Hq9YV9vrAn1dh5yD7Kv
      5U1WF60nz1Jwz+sqsZbxR9V/zqH2t3mr5Q3+v0N/z4cWfZSKnMqQXRto7b/Iiye/T761gKeX
      fYo44h54G02+h2Qip/CIlv3HtAIgJSWF7du3c+3aNWpqaqY1fWMgEKC0tJQ5c+awZ88eduzY
      QWlpKQ0NDfT39+P3+1FVFb/fT0ZGBgMDA4yPj0+dVrp+HmCZE3j2CvV2fqvxtwSCAZ5a/vH7
      Xo/ZbObDyz7GiqLVPF/7b3z3+L+ydd5DPFLxQdItMzv08rVhGz898wMS4hL4/Povk5dWMCPL
      nbzeJqP4hke07D+m1Rr8fj979+7F6/Wyfft25syZc9cA8Hg8HD9+HICioiJsNhs9PT34fD6W
      Ll1Kf38/Bw8epLi4mLKyMo4ePQrA9u3bH/BXEmJC31gvh9v3s7FsCwXWwgdalk6nozRjLt/Y
      /le8ceHXHG7bT1Pvuzy59GmWF6zEOAPXBgbHB/jhyedxep18dePXKUwrfuBlCnEnOnUag/pc
      vnyZ559/nsLCwqlzqM8+++xdP5lP9uyZ/NShKAp6vX5qGYFA4Iaf6XS6m4LF7/fLEcAsFqrt
      rKLyvdrvUNf1Dv/4xL+SnZQzY8sOBAO8293ILxtfomf0KtWlW3is8sNkWbLvu4umy+fihePf
      5Xz3GT6//susK6me0e6ecgQQXtGy/5hWAGhJAmB2C9V2vjp8hW++8WfsWLCLT6/5/IwvH2DY
      PcTe5t9yoPUtUhPS+PDSj7G6eB0mg+meluML+HjpzE843LaPj634FB8o3z3j1xckAMIrWvYf
      0qlYzDqqqvLquZeJM5h4bPGHQ7ae1IQ0Prr8k/zJ1r8gyZzE9+u+wwvHv0vPyLVpj5arBBXe
      bnmDQ237+ED5bh5aIEM7i/CRjwNi1rk02MHJK3U8vvhJ0hLTQ7oug97A4twlFG/9S/a1vMnb
      LXtotV/kg5VPsaF0I2Zj/G1fG1SD1HUd49Vzv2BN8Xo+tPSjxN3j0YMQD0KOAMSsoqoqv2r8
      OYlxFnZVPB629SbHp/ChpR/lT7f+JVlJ2bxY/32eq/nf2IYu3/JoQFVVLvSc4z9P/Yh5mQv4
      5KrPkhCXGLZ6hQAJADHLtPY3c/baaR5Z9AQp8SlhXbdep2dB9kK+tuW/8dSyj9Nqv8j/Ovh3
      7Gt5E7fffcNzuwYv8aOT/0FaYjqfW/dFUhNuf1e9EKEip4DErBFUg7zS+BLWhFQ+UL5bszos
      JguPLnqCxblLeKXxJX7W8CKN3Q08tezjzEkvw+Hq54cnniMQVPjyuj8gLyVfs1pFbJNeQLcR
      LVfxo91Mbufz3Wf5h/1/y6fXfJ5dFY/NyDIflNvv5p3OQ7z+7qsEggF2LNhFu6OVDkcbX6r+
      I1YUrA7L6J7SCyi8omX/Ia1BzApKUOGXjS+RlZTN1nk7tC5nSkJcAjsW7GZhTiWvNr7Mr8//
      EoNez2fWPMvyglUytLPQlASAmBXOXD1FW/9FvrDhD4mPu33PGy3odDqKUov5UvUfsdq2jkAw
      QFXpJhnaWWhOAkBEvYAS4FfnXqLAWkR12Waty7kts9FMVekmrcsQYop8BBFR78SVWroGL/Hh
      pR+757twhYhlEgAiqvkCPl499zKl6XNZW7JB63KEiCoSACKqvXPpMN0jV3ly2dMyY5YQ90gC
      QEQtj9/Db86/Qnl2BcsLVmldjhBRRwJARK1DbftwOO08tezjMoCaEPchpAGgqurUDSgwMeb/
      9fedXf+zybkDhJgOl8/Jby+8SmXeMhblLtG6HCGiUshOmgaDQQ4fPoxerycjI4Ps7GzOnz+P
      Xq9n27ZtnD17luHhYbKysigtLaWmpgaALVu2RMUddEJb+1reZMQzzNeWfUP60wtxn0L2ztHp
      dFRVVbF48WJ6e3s5f/48W7ZsITU1FbvdTm9vL1u3bsVms3Hu3DnWrl1LZWUlzc3NoSpJzBKj
      nhHebHqdFYWrmZ+1UOtyhIhaITsC0Ol02Gw2Tp48ycqVK7l69SpxcXGkp6czNjaG0WhEp9Nh
      NBpxOp1YrVYSEhJob28HJsYAgonTRlqcGlIUBa/XG/b1xpr72c6vn3+Vcf84j1c8ic/nC1Fl
      s8vke0hRFI0riQ3Rsv8IWQAEAgFKS0uZM2cOe/bsITExEZ/Ph91up7S0FL/fj6qq+P1+MjIy
      GBgYYHx8nLS0iWFxrx8ATgaDm73udTsPjg9wqP1t1pVUMT+nXMbSmSYZDC68omX/EbLW4PF4
      OH78OABFRUUUFhZy6NAhjEYjmZmZ5ObmcvDgQYqLiykrK+Po0aMAbN++PVQliVng9XdfxR8M
      8OElH5WdvxAPKKTDQU/27Jn81BEIBDAYDFNv3EAgMPUzRVHQ6XTo9TdelpDhoGe3e9nOfWO9
      /PfXv0ZV6Wa+sOGrIa5sdpEjgPCKlv1HSFuDXq+/YYf+/sZ3/dcGg/TjFnf2m/O/BHR8sPIj
      WpcixKwg/edEVLg6bKPm0hG2zd9BdnKO1uUIMStIAIiIp6oqr557mTiDiccXP6l1OULMGhIA
      IuJ1DXZy8kodO8sfIS0xXetyhJg1JABERFNVlV+d+zmJcYnsqnhc63KEmFUkAEREa+2/yJmr
      p3hk0ROkxKdoXY4Qs4oEgIhYQTXIK40vYU1IZUf5bq3LEWLWkQAQEetCzzku9Jzj8cUfxmKy
      aF2OELOOBICISEpQ4ZXGl8hKymbrvA9oXY4Qs5IEQIxTURkaHySoRtZcDGeunaK1/yIfXPIR
      4uPitS5HiFlJ7guPca32Zp6v+TZFaSVsmbedBVkVJJmTNK0poAT4VePPKbAWUV22RdNahJjN
      JABimMvn5IW67+INeLg6fJl/OfyPFFgLWVdSzerideRbCzWZbOXklVq6Bjv5w01/hslgCvv6
      hYgVEgAxSlVVft7wU3rHevnG9m9SmFpMU9+7HOs4xOsXXmVv8+sszFnMprnbKM+uIMmcHJa6
      fIqPV8+9TGl6GWuLN4RlnULEKgmAGHXadpJDbfvYvegJKvOWodPpqC7dzLriKq4Md3Giq4bT
      tpP8y5H/lwJrAWuLq1hTvJ58a2FIJ2Cv6TzCtZGr/Nm2/wOjQZqnEKEU0uGgZ4IMBz3zBl0D
      /PWbf0FqQip/tfP/IT4u4ZbPG3YP0dz3Lkc7DtHW34JBp6c8ezGb526jPKeCZPOD35h1/Xb2
      +D3899e/RlpiOn+18+9CGjSxRoaDDq9o2X9Ia4gxSlDhxfrvMe5z8Wfb/vK2O3+A1IQ0NszZ
      xJriDVwduszxy7Wctp3gX4/+L/JTClhTsp61xRsosBbNyM76UPs++p12Pr/hK7LzFyIMQhYA
      qqrS29vL6Ogoubm5mEwmenp60Ol0FBUV4XK56OvrIz8/H4vFQldXF3q9nuLiYpnpKYQOt+/n
      1JUT/N7qZyjNmDut1xj1RuZkzGVOxlx2VzxOc98FjnUc4q3m3/L2xT2UZ1Wwed42yrMX3/dw
      DS6fi99eeJXKvKUszl1yX8sQQtybkAZAd3c3GRkZ1NTUkJ+fj16vJzl54mJibW0tixYtora2
      lrlz5zI4OIjX68VoNFJQUBCqsmLatWEbLzX8hKX5y/nAfQ6tYE1IZf2catYUr8M2fIWTl+uo
      v3Kcfzv6T+Sm5LOmeOKooDC1+J4+xe9r2cOIe5g/3vwNTXoeCRGLQhYAer2elStXcuHCBTIy
      MhgfHwcgPj4eg8GA0WikpKSE1tZWurq62Lp1K16vl4aGBgoKClAUBZiYVnLy/GU4abXeUPEr
      fl44/hx6nZ5Pr34Wnap74N+vMKWYwiXFfGDBbi72XeBoxyHebn5j4qggu4LNc7cxP6uCZNPt
      exAFg0GGx4d4s+l1luWvZG76/Fm13SNFMDhxo59s2/CIlv1HSK8BNDQ0EAwGWb16NX6/H6fT
      SX19PVarlclrz6qqotPpUFWVYDB405zAYmb8tulVWvub+YOqPyY7aWZn1Eo2p7CmeAOritbR
      PXqNU7bjnLxSx7ePfYssSw6ritayrqRq4qhAd/NRwZtNrzPuH+fJpU/PaF1CiDsLWQAEAgEu
      XLjApk2bsNvtuFwujEbj1L9AIEBXVxeqqlJaWkp9fT0+n4/y8nLgd3MEXz+pfDgpijJreky0
      2Jt5o+k3VJVupqpsc0hPsczJKGVORikPL3yUi/YmjnYc5HDHfg61v82CrAo2zd1GRc5irAmp
      ADjG+jnQtpd1JRsoy5wn139CRHoBhVe07D9C1g10cgdvMBiIj48nMTERu91OQkIChYWFjIyM
      0NvbS0FBARaLhUuXLqHX6ykpKblhJyDdQB+My+fib/f+JX7Fx9/u/kdS4q1hXb8SVLg2cpX6
      K8c5ebmWntFr5CTnsqpoHetKqtjX/CY1l4/wPx79FgWpRWGtLZZIAIRXtOw/5D6A24iWP+Cd
      qKrKD0/8B4fb9/ON7d9kSf5yTesZ847S0tfMsc5DXOxrQlEVvAEvm+du4wsbvqppbbOdBEB4
      Rcv+Q1rDLDZxt+/b7K54nMq8ZVqXQ7I5hdXF61hZuJprIxPXCi70nOdDSz6qdWlCxCQ5AriN
      aEnw2xkcH+Cv9/wF1vfu9k24ww1fWnJ73CTER2Zts4kcAYRXtOw/pMvNLKQEFX588vuM+1w8
      u/7LEbvzB6TPvxAaknffLHSk/QD1V47z1PKPT/tuXyFE7JEAmGWujdj4WcOPWZK/nJ3lj2hd
      jhAigkkAzCK+gJcXjj+HQW/gmXVfIs4Q/msnQojoIQEwS6iovNH0G1rszXxq9e+Tk5yrdUlC
      iAgnATBLtNkv8pvzr1Bdupmq0k1alyOEiAISALOAy+fi+8e/S1pCGp9a/Yz0rBFCTIvsKaKc
      qqq8fOan9I5288z6L4V9qAchRPSSAIhyDVfrOdj6Ng8vfIwledoO9SCEiC4SAFFsaHyAH534
      D4rT5/DksqdlJE0hxD2RAIhSE3P7voDL5+LZ9V+J6Lt9hRCRSQIgSh3pOED95TqeWva03O0r
      hLgvEgBR6NrIVX52+r27fRc+qnU5QogoFbIAUFWVnp4eWlpaGBkZIRAI0N7eTm9vLwAjIyO0
      trbidDpRVZVLly5x+fJlInxwUs35Aj5+cPy7crevEOKBhTQAuru7MZvN1NTUcObMGQKBAGfP
      nsXtdlNbW4vZbKa2tpbOzk4cDgc2m43u7u5QlRT1Ju72/TUX7U18avUzcrevEOKBhGxwcL1e
      z8qVK7lw4QIZGRkMDw+zZs0ajEYjPT09GI1GSkpKaG1tpauri61bt+L1emloaKCgoABFUYCJ
      OYEnxzIPJ63WeyftA6385vwrrC/eyLqiqoir735E4naejYLBIIBs6zCJlnYd0msADQ0NuN1u
      Vq9ePXVqJxgMotfrp75WVRWdToeqqlM/Ezcb94/zQt13SX3vbl+d3O0rhHhAITsCCAQCXLhw
      gU2bNmG320lPT6epqYnOzk527NhBU1MTXV1dqKpKaWkp9fX1+Hw+ysvLATAYDMBEYGgxi5Gi
      KBEze5Kqqrxy+mf0OXv48+3fJM2SrnVJMyaStvNsJjOChVe0tOuQVlhVVTX1ePny5XR2drJq
      1Sri4+Oprq6mt7eX6upqLBYLqqqi1+vJyckJZUlRafJu310VcrevEGLmyJzAtxEpc3oOjQ/y
      12/+N1LMVv7q4b+bdTd8Rcp2nu3kCCC8oqVdy4nkCOZXfHznnX9GCSp8ZeOfzLqdvxBCWxIA
      Eeylhp/S1HueL1X9EQWpRVqXI4SYZSQAItS7PY282fwaO8sfYVnBSq3LEULMQhIAEcjldfJc
      zf8m31rIJ1d9VutyhBCzlARAhFFR+cGJ5xjxDPOVjX+CyRj5F5KEENFJAiDCvNN5hLqud3hq
      2Scoy5indTlCiFlMAiCC2J19/OjE85RnV/BE5ZNalyOEmOUkACKEElT4zrFvoUPHVzZ+XSZ2
      F0KEnOxlIsSvz/+Ctv4Wfn/9H5CVlK11OUKIGCABEAFa7c28eu5lNpZtpap0s9blCCFihASA
      xsZ943znnX8hw5LFM2u/qHU5QogYIgGgsR+efJ4BVz9f3fh1EkyJWpcjhIghEgAaqrl0lJrO
      I3x46cdYkL1Q63KEEDFGAkAj/U47Pzz+HPOzFvKhJR/VuhwhRAySANBAUA3y7+/8Myrw1U1f
      x6A3aF2SECIGhTQARkZGOHXqFACDg4McOHCAQ4cO4fV6sdls7N+/n97eXoLBIMeOHaO2tpYI
      n55gRvzm/C9psTfzzLovkp0kE+AIIbQR0tkhOjo6cDgcALS3t7N69WqsVisAjY2NPProo7zx
      xhsUFBRQVlbG+Pg4ra2tU9NCzkZt/S280vgSVaWb2Vi2VetyhBAxLKQBsHLlSg4cOABMzPH7
      zjvvYDKZeOihhzCbzeh0OsxmMw6HgxUrVuDz+airq6O8vBy/3w9MzK0ZDAZDWeYtKYqC1+ud
      0WV6Ah6+c+yfSUtI5/dWPDPjy49GodjO4maT7yFFUTSuJDZES7sO2/xwq1atAuD06dPYbLap
      BhkMBjGbzXg8HtxuNwkJE7NeXT8N5GyZEvKHp57D4bLzfz7896Qlpc3osqNVtEydF+1kSsjw
      ipZ2HbLWEAgEqKuro6OjA6vVil6vZ2xsjL6+PioqKmhpaeHIkSOYzWaWLl3Knj17UBSF3bt3
      h6okTdV1vcPRjkN8eOnHKM+u0LocIYQI76TwPp8Po9GIXj9x7dnj8RAfHw9MTP6u0+lu+oQy
      GyaFd7j6+e+v/wn5KQX8za7/Kb1+rhMtn5SinRwBhFe0tOuwtgaTyXTD15M7f9DmNE84THb5
      DKpBvrrpT2XnL4SIGHIfQIi9/u6vuNjXxOfWfpGc5FytyxFCiCkSACHU4Wjjl2d/xvo5G9k0
      d6vW5QghxA0kAELE43fznWPfIjUxnc+v/zI6dFqXJIQQN5AACJEX679Pn7OXr2z8Eywmi9bl
      CCHETSQAQuDE5VqOtB/gicqnqMhZrHU5QghxSxIAM2zA5eD7df/O3Mz5fGTZx7UuRwghbksC
      YAYF1SDffedfUIIBvrrxTzHopc+1ECJySQDMoN9e+DVNfe/y2bVfIDclT+tyhBDijiQAZkjn
      QDu/OPufrCupYvO87VqXI4QQdyUBMAO8AQ/fOfYtrPGpfH79V6TLpxAiKkgAzIAf179A72gP
      X9n4dZLMSVqXI4QQ0yIB8IDqrxznUNs+Hq98kkW5lVqXI4QQ0yYB8AAGxwf4Xt13KMuYx0eW
      f0LrcoQQ4p5IANyniS6f/4pf8fPVTV/HKF0+hRBRRgLgPu1p+g0Xes/xmTWfJy+lQOtyhBDi
      noU0AEZGRjh16hQwMfnLwYMHaWxsBMBms7F//356e3sJBoMcO3aM2tpawjg/zX27NNjJy2f+
      kzXF69k6f4fW5QghxH0JaQB0dHTgcDgAqKmpYf369YyOjjIyMkJjYyMPPfQQp06dorGxkbKy
      MrKysmhtbQ1lSQ/MG/DynaPfIjk+hS9s+Kp0+RRCRK2QnrheuXIlBw4cAEBVVRITEykqKsJu
      t2M2m9HpdJjNZhwOBytWrMDn81FXV0d5eTl+vx8ARVGmJpAPJ0VR8Hq9N33/J6dfoGf0Gn++
      5ZvEYbrlc8T03W47i5k1+R5SFEXjSmJDtLTrsF25nGx4LpcLq9U61SCDwSBmsxmPx4Pb7SYh
      IQG4cYrISJkT+LTtJAfb3+axxR9mRcnqsNc0G0XL3KnRTuYEDq9oadchaw2BQIC6ujo6Ojqw
      Wq2UlZXx5ptvMjY2xkc+8hGampo4cuQIZrOZpUuXsmfPHhRFYffu3aEq6YEMuQf5j9pvMye9
      jI8t/6TW5QghxAPTqWG86ur1eomLi0Ovn7j04PF4piaG9/v96HS6mz6h+P1+zY8AVFXlH/b/
      LS32Zv7HY98i3yq9fmZKtHxSinZyBBBe0dKuw9oa3r9BJnf+oM1pnul6s/l1zvec5fPrvyw7
      fyHErCH3AdzF5cFLvNTwY1YXrWP7/J1alyOEEDNGAuAOfAEv3zn2LZLN73X51EmXTyHE7CEB
      cAf/efpFro7Y+IPqPyY5PkXrcoQQYkZJANzGmWun2Neyh0cXfZAl+cu1LkcIIWacBMAt+BU/
      P6x/npL0Uj624lNalyOEECEhfcJuwWgw8nD5Y2yct4U4Q+T2ThJCiAcR1vsA7kck3AcgQke2
      c3jIfQDhFS3tWk4BCSFEjJIAEEKIGCUBIIQQMUoCQAghYpQEgBBCxCgJACGEiFESAEIIEaMk
      AIQQIkZpGgAej2fqcSAQmLpZRQghROiF7bbApqYmOjo6SEpKoqqqiqNHjxIfH4+iKFRWVlJT
      U4OiKOzYsYOUFBl5UwghQi1sRwB9fX3MmzePqqoqzGYzqqqyadMmfD4f58+f55FHHmHHjh00
      NTWFqyQhhIhpYTsCWLFiBX19ffz85z/ngx/84NTkKnq9HkVRMBqNmM1mfD4fMDEGEICiKASD
      wXCVOUVRFLxeb9jXG2tkO4fH5HtIURSNK4kN0dKuwxYAfr+fBQsWMDY2htPpxO12o6oqbreb
      4uJirly5gsvlIj8/H7hxjmAZDG72ku0cHjIYXHhFS7sOW2vweDwcOHCA5ORkCgoKCAaD7Nu3
      jzVr1pCdnc2xY8cwGo1UVVWFqyQhhIhpMhz0bURLgkc72c7hIUcA4RUt7VruAxBCiBglASCE
      EDFKAkAIIWKUBIAQQsQoCQAhhIhREgBCCBGjJACEECJGSQAIIUSMkgAQQogYJQEghBAxSgJA
      CCFiVEQEQDAY5NixY9TW1hLhQxMJIcSsEREB0NjYSFlZGVlZWbS2tmpdjhBCxISICACHw0FB
      QQElJSX09vZqXY4QQsSEiBgbNi4uDo/Hg9vtJiEhQetyhBAiJkREACxdupQ9e/agKAq7d+/W
      uhwhhIgJETMhjN/vR6fT3TRhhUwIM7vJdg4PmRAmvKKlXUdMa9BiJy+EELEsYo4A3s/v9wOg
      KAoGgyHs61cUBUCTdU+uP5zrjsXtrNXvHAwGAdDrw9cHIxgMoqoqOp0urOudpNW21mrd0bL/
      iJgjgPebPCLQ6/WabcRYWncs/a5ar1eLAFAUBVVV0ev1mgSAtK/IXHfEBsAkrTZgrK07ln5X
      rderxQ4Y0OzTP0j7itR1R+wpICGEEKEVETeCCSGECD8JgPd59dVXaWlpkTGJQuzll1+moaFh
      6mKZCI2enh7efvttenp6pE2HwaFDhzhz5gw+n0/rUqZFAuB9CgoKSElJ4ciRI1y4cEHeNCEy
      Z84c5s+fT11dHfX19VP91MXMCgaDVFRUMDo6ytGjR7HZbNKmQ8hisVBWWWqJ0wAABetJREFU
      VsapU6eor6/H4/FoXdIdRfxFYC3k5eWRl5dHf38/DoeDrKwsrUuadfR6PcnJyWzcuBGXy8XY
      2BhpaWlalzUr6fV6ysvLmT9/PlevXmV8fByLxaJ1WbOW1WqlqqoKp9OJ3W6nuLhY65JuSy4C
      v08gEJi6W1JVVUZHR7FarRpXNbupqipBGyLv73I6+Yk0Pj5es5pms/fvP0ZGRkhNTdW4qtuT
      I4D36e/vn3qsqip9fX2sWLFCw4pmp6ampqnHqqri8/kkAELA7/czODg49bXD4SAzM5O8vDwN
      q5q9RkZGps7/q6rKlStXWL9+vcZV3Z5cA3ifEydO4PP5pv6J0LDZbBQUFEz9E6ExNjbGu+++
      O9We5VpLaDU3NzMwMDC1vSePwCKVnAJ6n76+PjIzMzEYDKiqSnd3t+ygQmB4eJjk5OSp7dzf
      3092drbWZc1Kvb29ZGdno9frGR0dBSDl/2/vXn6aasI4jn+npz29QbGHSwnRGLkoCglECBgS
      0oUbFv6N/h2GtdHUBaWkNBViqUFqT0EI15ZezrwLQ4OGdMVxDuedz6673+JknpnOzDOJhOJU
      /nRxcYHjOCQSiQcxfui/gP7SbDbJZDIIITBNk9evX6uO5Eu1Wo1CoYAQAikly8vLqiP5kuM4
      HB8fUyqVABgZGWFiYkJxKv9qt9sUi8Vu243Z2VnVkXrSBeAWx3Eol8usrq4Cv2epuVyO+fl5
      xcn8xXEcjo6OWFlZAaBer7O5ucnCwoLiZP5TqVQIh8OsrKwgpeTr16/Yts3o6KjqaL4jpaRQ
      KLC0tEQwGKTRaJDL5Tw9udEF4BYhBPV6nVKpRDgcZm9vj2fPnqmO5TuBQIBms0k2m8U0TWq1
      mudnSg9VNBqlVCoRCoXodDocHh4yNjamOpZvBYNBisUilmVh2zaxWEx1pJ70HsBfpJRUq1Wa
      zSapVArTNJU10PKzdrvN1dUVUkr6+/tptVoP4gGNh6jZbGLbNoZhMDw8TDAYRAihOpYvSSk5
      OTnh7OwMy7Lo6+vz9Pjh3WSKrK+vs729zaNHjzAMg1wupzqS70gpWV9fJ5vNcn19TafT+eNY
      qHZ/Dg8P+fjxI9+/f8eyLH7+/Em1WlUdy7cymQxbW1s4jkM8HmdjY0N1pJ50AbhFSsnAwABv
      377V7QlcZlkW6XSafD7v+evyD1mj0eD58+fMzMx0BybNHVJKpJSk02lOTk7+uFPkVboA3CKE
      IB6PI4RgdXWVT58+6SvzLhBCdNs+pNNpstmsp29LPmSWZXF9fU0ymeTp06fs7u5imqbqWL4k
      hGB0dJSLiwvm5ubY39/3fLNDvQegaZr2P6VXAJoyP378UB1B0+7d1dVV9w3my8tL1XF60sdA
      7/DhwweSySRCCCYnJ7EsS3UkXzo6OiIajTI4OKg6im/Ztk25XO7+DgaDvHr1img0qi6Uz337
      9o0XL14AkMvluvddvEgXgDsMDQ2xuLioOobvhcNhdnZ2MAxDF1qXpFIpBgcHqdVqdDodAoFA
      t1uldv9s22ZnZ4ezszNCoRAvX75UHakn/SXcIRQKkclkAJiamtIDk0sikUi3FYTeBHZXIBBA
      SsnBwQGRSESvulySSqVYXl5meHgYwzA4ODjw9DsXeg/gDjcnJ1qtluoovlatVnnz5g2zs7Pk
      83nVcXxLCEE0GiUWi2Gapj5267Jfv3519wC8fhRUrwDuUKlUSCQSjI+PU6vV9ArAJaenp3z5
      8oVOp0OlUiGZTPLkyRPVsXznpiFcu93WbwH8A+Pj42xtbQEwPT2tOE1vugDcIRKJEIlEyOfz
      +jUwF62trQG/20K0Wi29MemC8/NzCoVCd0Yaj8d1AXBRvV6nWCzSbreJxWKe/6b1PYAebj/v
      pt2vm7a5+/v79PX1sbCw4PnGWX5QLpcxTVM3hHOBlJLPnz8zNzdHPB7n+PiYvb09T3e51aPb
      X263gGg0GszMzOiHSlzw/v173r17h2EYPH78WA/+/0gymcQwDNUxfOtmvwWgv7/f8zeB/wOM
      cQxc4Uj+GQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Order Count by Number of Credit Card Installments' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Product Categories by Total Quantity Sold' width='384'>
      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
      97rWRCF1bOD78t71MRRJ5N3eEQRBoFSpYZHrNfpiuUqlqnOss5FrIzN86rH97GkMEM8UqNR0
      MoUyp68O43HaSOdLRH2uukWtINAe9dEe9dEa8XHm2iiffHQ/QY8DrVIjW9SYydQHGS8PTvHR
      h3sIeZ343Y5FPU5WinscwRZCUavy0//PlxiO795V31ajJejhP/3LF3h5eHC7b2Vd8KgqH+/o
      wK4opEoav/v9c9y4TzTnO/0ufuvJo/hsKhVdJ1vRSJXLZCoaml6fdFZEEYei4FOtOC0qF6dS
      fP3GMOUNqvWvBzZZ4mNdLTzSFEZA4Ldf+4B3x+5fyYNfONa1JjG43/xvL/ONdzbPJe2WW+Et
      iKKAMeteuFCAvtO1UJHru7ZYsF4pMMx6n6E55CGdL/PGxYFFryeJIqZprquMuaL9lF1V+NWP
      Pcyv//V31t3E+UGAKAj86ksPIUpra/5mEwlcfv+Cln9VTUOUpEVlDO5EKZ/HMAwc7rWXoW6Z
      kBimyTdvjN1XhiM3kzm+eWOMnzjYjkWSCNrsBG0LDzoZpsnbo1N8tW+IyhrF7DYapZrOV64P
      AfBoLMLhiP++TgBHo/7lD1oADet0ElsOdwd54y73wrtxZwytzi4k7vQpHppKcXlgkuoiz9lt
      d8T1P4crLqg9sa+Fpw608uqlwXVf9H7H0wdaeaKnhaHcyndMWrHI+M2bRFpbSU9PY3e5mBwc
      xO5y4QmFmB4eRrZYGOntxWq307JvH9VKBUEQEESRbCJBuKUFrVgkm0hgd7uRFQVD18npOpmZ
      GYJNTWRmZhBEkVAshrACTX3DNNFNk+FMgZdvjN5X7m0m8MqNUR5tDtPmdS5+nGnywWSCr/UN
      75jgfwsV3eDrfcPYZJlDYS92RbovReGCdpU9a+xFtka8G3w3m4/Fgv9GY8VTFaIo8CsffQiX
      7f6uM64XbpvKL3/0ofo2cBW7pXe+8Q0KmQynv/Y1AAYuXmT4yhU++O536X33XaYGB6mWy1Q1
      DV3XGb95kze/+EWKuRwXX3+dQibD5bfe4sqpU2STSS6+/jrp6WkSExOcf+01apUKMyMj9L77
      LsVsdsX3dmuL+e3+sXWzOHYikuUK3+4fW/L9GMrk+cr1oR1R9lkIt3YCogB7VimUtlvwVGsU
      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
      2poA3VXvxf72UNWV+yVkKRQA5AY9ASe+ua1NM2Uiun12PNfXDh2t+Scao41vOFkWBuDOJj+e
      2txS9buEm+xm/OnuLur3SzSJAoDkxBjDQ20hPNbdVLUhELIa8f3bu2nSl2gWU9UidEomVSOr
      qvivUxfx9++fRiKTLfdwCqbdbcX3buuG20iNXoh2UQCQm1JVFW+eH8Zfv3Mc0WU00a5U22pc
      +ONdG+i1D9E8CgCSt1OjEfzVW8dwITJV7qGsiMgxHOiox2Mbm2jClxBQAJBlGo8n8dPfnMLr
      Zwexlj44Dr2M5/ra0VfrpqWehMyiACDLlslm8fq5IfzDB5/g6nS83MNZEscYdoU8eHpLK7z0
      vp+QBSgAyIpF4kn885F+/PfHl5CqwAniOqsRX9/Sit6gk2r7EJIDBQBZFRVA/9gE/v3oWbx9
      4QrS2fJ/nHwmPR7uCOHu5gCVdCZkCRQApCBUABfCkzh47DzePDdUliWjIasRBzrrcUeDjzp5
      EZIHCgBScOPxJN4aGMb/9Q/i5EgE2SJ+xKw6CbvrvbizyY91Tis1cCdkGSgASNGoqorhqRgO
      D47hyOAYPhy6hmuxxKqOKXAMzQ4LNvod6PE70O620t0+IStEAUBKJquqGJqcxsVIFJfGZ/4a
      npxGJJ5ENJlGKptFVlUhcBx0AgezLMGhlxG0GBC0GFBjMSBkNcIgieX+VQipChQAhBCiUVQM
      jhBCNIoCgBBCNIoCgBBCNIoCgBBCNIoCgBBCNIoCgBBCNIoCgBBCNIoCgBBCNIoCgBBCNIoC
      gBBCNIoCgBBCNIoCgBBCNIoCgBBCNIoCgBBCNIoCgBBCNIoCgBBCNIoCgBBCNIoCgBBCNIoC
      gBBCNIoCgBBCNIoCgBBCNIoCgBBCNOr/ASGiA0qMWS0jAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='168' name='Review Score Distributions by Order Status' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
